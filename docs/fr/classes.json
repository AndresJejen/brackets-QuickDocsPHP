{"DateTime":{"add":{"s":"Ajoute une dur\u00e9e \u00e0 un objet DateTime","y":"public DateTime DateTime::add\n    ( DateInterval $interval\n   )","p":[{"t":"object","d":"Style proc\u00e9dural uniquement : Un objet DateTime\nretourn\u00e9 par la fonction date_create().\nCette fonction modifie cet objet."},{"t":"interval","d":"Un objet DateInterval"}]},"__construct":{"s":"Retourne un nouvel objet DateTime","y":"","p":[{"t":"time","d":"Une cha\u00eene date\/heure. Les formats valides sont expliqu\u00e9s dans la documentation sur les\nformats Date et Heure."},{"t":"timezone","d":"Un objet DateTimeZone representant\n       le fuseau horaire de $time."}]},"createFromFormat":{"s":"Retourne un nouvel objet DateTime format\u00e9","y":"public static DateTime DateTime::createFromFormat\n    ( string $format\n   , string $time\n   [, DateTimeZone $timezone\n  ] )","p":[{"t":"format","d":"Le format \u00e0 utiliser. Voir les options de formatage ci-dessous.\n      Dans le plupart des cas, les m\u00eames lettres que pour la fonction\n      date() peuvent \u00eatre utilis\u00e9es."},{"t":"time","d":"Cha\u00eene repr\u00e9sentant l&#039;heure."},{"t":"timezone","d":"Un objet DateTimeZone repr\u00e9sentant\n      le fuseau horaire d\u00e9sir\u00e9."}]},"getLastErrors":{"s":"Retourne les derni\u00e8res erreurs et alertes","y":"public static array DateTime::getLastErrors\n    ( void\n   )","p":null},"modify":{"s":"Modifie le timestamp","y":"public DateTime DateTime::modify\n    ( string $modify\n   )","p":[{"t":"object","d":"Style proc\u00e9dural uniquement : Un objet DateTime\nretourn\u00e9 par la fonction date_create().\nCette fonction modifie cet objet."},{"t":"modify","d":"Une cha\u00eene date\/heure. Les formats valides sont expliqu\u00e9s dans la documentation sur les\nformats Date et Heure."}]},"__set_state":{"s":"Le gestionnaire __set_state","y":"public static DateTime DateTime::__set_state\n    ( array $array\n   )","p":[{"t":"array","d":"Le tableau d&#039;initialisation."}]},"setDate":{"s":"Assigne la date","y":"public DateTime DateTime::setDate\n    ( int $year\n   , int $month\n   , int $day\n   )","p":[{"t":"object","d":"Style proc\u00e9dural uniquement : Un objet DateTime\nretourn\u00e9 par la fonction date_create().\nCette fonction modifie cet objet."},{"t":"year","d":"Ann\u00e9e de la date."},{"t":"month","d":"Mois de la date."},{"t":"day","d":"Jour de la date."}]},"setISODate":{"s":"Configure une date ISO","y":"public DateTime DateTime::setISODate\n    ( int $year\n   , int $week\n   [, int $day = 1\n  ] )","p":[{"t":"object","d":"Style proc\u00e9dural uniquement : Un objet DateTime\nretourn\u00e9 par la fonction date_create().\nCette fonction modifie cet objet."},{"t":"year","d":"L&#039;ann\u00e9e de la date."},{"t":"week","d":"Le num\u00e9ro de la semaine."},{"t":"day","d":"D\u00e9calage par rapport au premier jour de la semaine."}]},"setTime":{"s":"Assigne l&#039;heure","y":"public DateTime DateTime::setTime\n    ( int $hour\n   , int $minute\n   [, int $second = 0\n  ] )","p":[{"t":"object","d":"Style proc\u00e9dural uniquement : Un objet DateTime\nretourn\u00e9 par la fonction date_create().\nCette fonction modifie cet objet."},{"t":"hour","d":"Heure du moment."},{"t":"minute","d":"Minute du moment."},{"t":"second","d":"Seconde du moment."}]},"setTimestamp":{"s":"Assigne la date et l&#039;heure \u00e0 l&#039;aide d&#039;un timestamp Unix","y":"public DateTime DateTime::setTimestamp\n    ( int $unixtimestamp\n   )","p":[{"t":"object","d":"Style proc\u00e9dural uniquement : Un objet DateTime\nretourn\u00e9 par la fonction date_create().\nCette fonction modifie cet objet."},{"t":"unixtimestamp","d":"Timestamp Unix repr\u00e9sentant la date et l&#039;heure."}]},"setTimezone":{"s":"Configure le fuseau horaire de l&#039;objet DateTime","y":"public DateTime DateTime::setTimezone\n    ( DateTimeZone $timezone\n   )","p":[{"t":"object","d":"Style proc\u00e9dural uniquement : Un objet DateTime\nretourn\u00e9 par la fonction date_create().\nCette fonction modifie cet objet."},{"t":"timezone","d":"Un objet DateTimeZone repr\u00e9sentant\n      le fuseau horaire d\u00e9sir\u00e9."}]},"sub":{"s":"Soustrait une dur\u00e9e \u00e0 un objet DateTime","y":"public DateTime DateTime::sub\n    ( DateInterval $interval\n   )","p":[{"t":"object","d":"Style proc\u00e9dural uniquement : Un objet DateTime\nretourn\u00e9 par la fonction date_create().\nCette fonction modifie cet objet."},{"t":"interval","d":"Un objet DateInterval"}]}},"ArrayObject":{"append":{"s":"Ajoute la valeur \u00e0 la fin d&#039;un tableau","y":"public void ArrayObject::append\n    ( mixed $value\n   )","p":[{"t":"value","d":"La valeur ajout\u00e9e."}]},"asort":{"s":"Trie les \u00e9l\u00e9ments par valeur","y":"public void ArrayObject::asort\n    ( void\n   )","p":null},"__construct":{"s":"Construit un nouvel objet tableau","y":"","p":[{"t":"input","d":"Le param\u00e8tre input accepte\n       un tableau ou un autre objet."},{"t":"flags","d":"Option de contr\u00f4le du comportement de \n       l&#039;objet ArrayObject.\n       Voir la m\u00e9thode ArrayObject::setFlags()."},{"t":"iterator_class","d":"Sp\u00e9cifie la classe qui sera utilis\u00e9e pour les it\u00e9rations\n       de l&#039;objet ArrayObject."}]},"count":{"s":"Retourne le nombre de propri\u00e9t\u00e9s publiques dans l&#039;objet ArrayObject","y":"public int ArrayObject::count\n    ( void\n   )","p":null},"exchangeArray":{"s":"Remplace un tableau par un autre","y":"public array ArrayObject::exchangeArray\n    ( mixed $input\n   )","p":[{"t":"input","d":"Le nouveau tableau ou objet \u00e0 utiliser."}]},"getArrayCopy":{"s":"Cr\u00e9e une copie de l&#039;objet ArrayObject","y":"public array ArrayObject::getArrayCopy\n    ( void\n   )","p":null},"getFlags":{"s":"Lit les options de comportement","y":"public int ArrayObject::getFlags\n    ( void\n   )","p":null},"getIterator":{"s":"Cr\u00e9e un nouvel it\u00e9rateur \u00e0 partir d&#039;un objet ArrayObject","y":"public ArrayIterator ArrayObject::getIterator\n    ( void\n   )","p":null},"getIteratorClass":{"s":"Lit le nom de la classe de ArrayObject","y":"public string ArrayObject::getIteratorClass\n    ( void\n   )","p":null},"ksort":{"s":"Trie un tableau par cl\u00e9","y":"public void ArrayObject::ksort\n    ( void\n   )","p":null},"natsort":{"s":"Trie les \u00e9l\u00e9ments avec un tri naturel","y":"public void ArrayObject::natsort\n    ( void\n   )","p":null},"offsetExists":{"s":"V\u00e9rifie si un index existe","y":"public bool ArrayObject::offsetExists\n    ( mixed $index\n   )","p":[{"t":"index","d":"L&#039;index \u00e0 v\u00e9rifier."}]},"offsetGet":{"s":"Retourne la valeur de l&#039;index sp\u00e9cifi\u00e9","y":"public mixed ArrayObject::offsetGet\n    ( mixed $index\n   )","p":[{"t":"index","d":"L&#039;index demand\u00e9."}]},"offsetSet":{"s":"D\u00e9finie $newval comme valeur \u00e0 l&#039;$index sp\u00e9cifi\u00e9","y":"public void ArrayObject::offsetSet\n    ( mixed $index\n   , mixed $newval\n   )","p":[{"t":"index","d":"L&#039;index \u00e0 d\u00e9finir."},{"t":"newval","d":"La nouvelle valeur de l&#039;index index."}]},"offsetUnset":{"s":"Efface la valeur \u00e0 l&#039;$index sp\u00e9cifi\u00e9","y":"public void ArrayObject::offsetUnset\n    ( mixed $index\n   )","p":[{"t":"index","d":"L&#039;index \u00e0 effacer."}]},"serialize":{"s":"Lin\u00e9arise un ArrayObject","y":"public string ArrayObject::serialize\n    ( void\n   )","p":null},"setFlags":{"s":"Configure les options de comportement","y":"public void ArrayObject::setFlags\n    ( int $flags\n   )","p":[{"t":"flags","d":"Le nouveau comportement ArrayObject. \n       Cela peut \u00eatre un champ de bits ou des constantes nomm\u00e9es. L&#039;utilisation\n       des constantes est fortement encourag\u00e9e, pour assurer la compatibilit\u00e9\n       avec les futures versions."}]},"setIteratorClass":{"s":"D\u00e9finit le nom de la classe de l&#039;it\u00e9rateur pour l&#039;objet ArrayObject","y":"public void ArrayObject::setIteratorClass\n    ( string $iterator_class\n   )","p":[{"t":"iterator_class","d":"Le nom de la classe de l&#039;it\u00e9rateur \u00e0 utiliser pour it\u00e9rer sur cet\n       objet."}]},"uasort":{"s":"Trie les \u00e9l\u00e9ments avec une fonction utilisateur","y":"public void ArrayObject::uasort\n    ( callable $cmp_function\n   )","p":[{"t":"cmp_function","d":"La fonction cmp_function doit accepter\n       deux param\u00e8tres, qui contiendront les \u00e9l\u00e9ments.\n       La fonction de comparaison doit retourner un entier qui peut\n       \u00eatre n\u00e9gatif, nul ou positif, suivant que le premier \n       param\u00e8tre est consid\u00e9r\u00e9 comme inf\u00e9rieur, \u00e9gal ou sup\u00e9rieur\n       au second."}]},"uksort":{"s":"Trie les \u00e9l\u00e9ments par cl\u00e9 avec une fonction utilisateur","y":"public void ArrayObject::uksort\n    ( callable $cmp_function\n   )","p":[{"t":"cmp_function","d":"La fonction de rappel pour les comparaisons."}]},"unserialize":{"s":"D\u00e9lin\u00e9arisation d&#039;un ArrayObject","y":"public void ArrayObject::unserialize\n    ( string $serialized\n   )","p":[{"t":"serialized","d":"L&#039;objet ArrayObject lin\u00e9aris\u00e9."}]}}}