{"abs":{"s":"Absolute value","p":[{"t":"number","d":"The numeric value to process"}]},"acos":{"s":"Arc cosine","p":[{"t":"arg","d":"The argument to process"}]},"acosh":{"s":"Inverse hyperbolic cosine","p":[{"t":"arg","d":"The value to process"}]},"addcslashes":{"s":"Quote string with slashes in a C style","p":[{"t":"str","d":"The string to be escaped."},{"t":"charlist","d":"A list of characters to be escaped. If\n       charlist contains characters\n       \\n, \\r etc., they are\n       converted in C-like style, while other non-alphanumeric characters\n       with ASCII codes lower than 32 and higher than 126 converted to\n       octal representation."}]},"addslashes":{"s":"Quote string with slashes","p":[{"t":"str","d":"The string to be escaped."}]},"apache_child_terminate":{"s":"Terminate apache process after this request","p":null},"apache_getenv":{"s":"Get an Apache subprocess_env variable","p":[{"t":"variable","d":"The Apache environment variable"},{"t":"walk_to_top","d":"Whether to get the top-level variable available to all Apache layers."}]},"apache_get_modules":{"s":"Get a list of loaded Apache modules","p":null},"apache_get_version":{"s":"Fetch Apache version","p":null},"apache_lookup_uri":{"s":"Perform a partial request for the specified URI and return all info about it","p":[{"t":"filename","d":"The filename (URI) that&#039;s being requested."}]},"apache_note":{"s":"Get and set apache request notes","p":[{"t":"note_name","d":"The name of the note."},{"t":"note_value","d":"The value of the note."}]},"apache_request_headers":{"s":"Fetch all HTTP request headers","p":null},"apache_reset_timeout":{"s":"Reset the Apache write timer","p":null},"apache_response_headers":{"s":"Fetch all HTTP response headers","p":null},"apache_setenv":{"s":"Set an Apache subprocess_env variable","p":[{"t":"variable","d":"The environment variable that&#039;s being set."},{"t":"value","d":"The new variable value."},{"t":"walk_to_top","d":"Whether to set the top-level variable available to all Apache layers."}]},"apc_add":{"s":"","p":[{"t":"key","d":"Store the variable using this name. keys are\n       cache-unique, so attempting to use apc_add() to\n       store data with a key that already exists will not overwrite the\n       existing data, and will instead return FALSE. (This is the only\n       difference between apc_add() and\n       apc_store().)"},{"t":"var","d":"The variable to store"},{"t":"ttl","d":"Time To Live; store var in the cache for\n       ttl seconds. After the\n       ttl has passed, the stored variable will be\n       expunged from the cache (on the next request). If no ttl\n       is supplied (or if the ttl is\n       0), the value will persist until it is removed from\n       the cache manually, or otherwise fails to exist in the cache (clear,\n       restart, etc.)."},{"t":"values","d":"Names in key, variables in value."}]},"apc_bin_dump":{"s":"Get a binary dump of the given files and user variables","p":[{"t":"files","d":"The files. Passing in NULL signals a dump of every entry, while\n      passing in array() will dump nothing."},{"t":"user_vars","d":"The user vars. Passing in NULL signals a dump of every entry, while\n      passing in array() will dump nothing."}]},"apc_bin_dumpfile":{"s":"Output a binary dump of cached files and user variables to a file","p":[{"t":"files","d":"The file names being dumped."},{"t":"user_vars","d":"The user variables being dumped."},{"t":"filename","d":"The filename where the dump is being saved."},{"t":"flags","d":"Flags passed to the filename stream. See the\n      file_put_contents() documentation for details."},{"t":"context","d":"The context passed to the filename stream. See the\n      file_put_contents() documentation for details."}]},"apc_bin_load":{"s":"Load a binary dump into the APC file\/user cache","p":[{"t":"data","d":"The binary dump being loaded, likely from\n      apc_bin_dump()."},{"t":"flags","d":"Either APC_BIN_VERIFY_CRC32, APC_BIN_VERIFY_MD5,\n      or both."}]},"apc_bin_loadfile":{"s":"Load a binary dump from a file into the APC file\/user cache","p":[{"t":"filename","d":"The file name containing the dump, likely from\n      apc_bin_dumpfile()."},{"t":"context","d":"The files context."},{"t":"flags","d":"Either APC_BIN_VERIFY_CRC32, APC_BIN_VERIFY_MD5,\n      or both."}]},"apc_cache_info":{"s":"","p":[{"t":"cache_type","d":"If cache_type is &quot;user&quot;,\n       information about the user cache will be returned."},{"t":"limited","d":"If limited is TRUE, the\n       return value will exclude the individual list of cache entries.  This\n       is useful when trying to optimize calls for statistics gathering."}]},"apc_cas":{"s":"Updates an old value with a new value","p":[{"t":"key","d":"The key of the value being updated."},{"t":"old","d":"The old value (the value currently stored)."},{"t":"new","d":"The new value to update to."}]},"apc_clear_cache":{"s":"","p":[{"t":"cache_type","d":"If cache_type is &quot;user&quot;, the\n       user cache will be cleared; otherwise, the system cache (cached files)\n       will be cleared."}]},"apc_compile_file":{"s":"","p":[{"t":"filename","d":"Full or relative path to a PHP file that will be compiled and stored in\n       the bytecode cache."}]},"apc_dec":{"s":"Decrease a stored number","p":[{"t":"key","d":"The key of the value being decreased."},{"t":"step","d":"The step, or value to decrease."},{"t":"success","d":"Optionally pass the success or fail boolean value to\n      this referenced variable."}]},"apc_define_constants":{"s":"","p":[{"t":"key","d":"The key serves as the name of the constant set\n       being stored. This key is used to retrieve the\n       stored constants in apc_load_constants()."},{"t":"constants","d":"An associative array of constant_name =&gt; value\n       pairs. The constant_name must follow the normal\n       constant naming rules.\n       value must evaluate to a scalar value."},{"t":"case_sensitive","d":"The default behaviour for constants is to be declared case-sensitive;\n       i.e. CONSTANT and Constant\n       represent different values. If this parameter evaluates to FALSE the\n       constants will be declared as case-insensitive symbols."}]},"apc_delete":{"s":"","p":[{"t":"key","d":"The key used to store the value (with\n       apc_store())."}]},"apc_delete_file":{"s":"Deletes files from the opcode cache","p":[{"t":"keys","d":"The files to be deleted. Accepts a string,\n      array of strings, or an APCIterator\n      object."}]},"apc_exists":{"s":"Checks if APC key exists","p":[{"t":"keys","d":"A string, or an array of strings, that\n      contain keys."}]},"apc_fetch":{"s":"","p":[{"t":"key","d":"The key used to store the value (with\n       apc_store()). If an array is passed then each\n       element is fetched and returned."},{"t":"success","d":"Set to TRUE in success and FALSE in failure."}]},"apc_inc":{"s":"Increase a stored number","p":[{"t":"key","d":"The key of the value being increased."},{"t":"step","d":"The step, or value to increase."},{"t":"success","d":"Optionally pass the success or fail boolean value to\n      this referenced variable."}]},"apc_load_constants":{"s":"","p":[{"t":"key","d":"The name of the constant set (that was stored with\n       apc_define_constants()) to be retrieved."},{"t":"case_sensitive","d":"The default behaviour for constants is to be declared case-sensitive;\n       i.e. CONSTANT and Constant\n       represent different values. If this parameter evaluates to FALSE the\n       constants will be declared as case-insensitive symbols."}]},"apc_sma_info":{"s":"","p":[{"t":"limited","d":"When set to FALSE (default) apc_sma_info() will\n       return a detailed information about each segment."}]},"apc_store":{"s":"","p":[{"t":"key","d":"Store the variable using this name. keys are\n       cache-unique, so storing a second value with the same\n       key will overwrite the original value."},{"t":"var","d":"The variable to store"},{"t":"ttl","d":"Time To Live; store var in the cache for\n       ttl seconds. After the\n       ttl has passed, the stored variable will be\n       expunged from the cache (on the next request). If no ttl\n       is supplied (or if the ttl is\n       0), the value will persist until it is removed from\n       the cache manually, or otherwise fails to exist in the cache (clear,\n       restart, etc.)."},{"t":"values","d":"Names in key, variables in value."}]},"apd_breakpoint":{"s":"Stops the interpreter and waits on a CR from the socket","p":[{"t":"","d":"An integer which is formed by adding\ntogether the XXX_TRACE constants."}]},"apd_callstack":{"s":"Returns the current call stack as an array","p":null},"apd_clunk":{"s":"Throw a warning and a callstack","p":[{"t":"warning","d":"The warning to throw."},{"t":"delimiter","d":"The delimiter. Default to &lt;BR \/&gt;."}]},"apd_continue":{"s":"Restarts the interpreter","p":[{"t":"","d":"An integer which is formed by adding\ntogether the XXX_TRACE constants."}]},"apd_croak":{"s":"Throw an error, a callstack and then exit","p":[{"t":"warning","d":"The warning to throw."},{"t":"delimiter","d":"The delimiter. Default to &lt;BR \/&gt;."}]},"apd_dump_function_table":{"s":"Outputs the current function table","p":null},"apd_dump_persistent_resources":{"s":"Return all persistent resources as an array","p":null},"apd_dump_regular_resources":{"s":"Return all current regular resources as an array","p":null},"apd_echo":{"s":"Echo to the debugging socket","p":[{"t":"output","d":"The debugged variable."}]},"apd_get_active_symbols":{"s":"Get an array of the current variables names in the local scope","p":null},"apd_set_pprof_trace":{"s":"Starts the session debugging","p":[{"t":"dump_directory","d":"The directory in which the profile dump file is written. If not set, \n       the apd.dumpdir\n setting from the php.ini file is used."},{"t":"fragment","d":""}]},"apd_set_session":{"s":"Changes or sets the current debugging level","p":[{"t":"","d":"An integer which is formed by adding\ntogether the XXX_TRACE constants."}]},"apd_set_session_trace":{"s":"Starts the session debugging","p":[{"t":"","d":"An integer which is formed by adding\ntogether the XXX_TRACE constants."},{"t":"dump_directory","d":"The directory in which the profile dump file is written. If not set, \n       the apd.dumpdir setting from the php.ini file is used."}]},"apd_set_session_trace_socket":{"s":"Starts the remote session debugging","p":[{"t":"tcp_server","d":"IP or Unix Domain socket (like a file) of the TCP server."},{"t":"socket_type","d":"Can be AF_UNIX for file based sockets or \n       APD_AF_INET for standard tcp\/ip."},{"t":"port","d":"You can use any port, but higher numbers are better as most of the\n       lower numbers may be used by other system services."},{"t":"","d":"An integer which is formed by adding\ntogether the XXX_TRACE constants."}]},"array":{"s":"Create an array","p":[{"t":"...","d":"Syntax &quot;index =&gt; values&quot;, separated by commas, define index\n       and values. index may be of type string or integer. When index is\n       omitted, an integer index is automatically generated, starting\n       at 0. If index is an integer, next generated index will\n       be the biggest integer index + 1. Note that when two identical\n       index are defined, the last overwrite the first."}]},"array_change_key_case":{"s":"Changes the case of all keys in an array","p":[{"t":"array","d":"The array to work on"},{"t":"case","d":"Either CASE_UPPER or\n       CASE_LOWER (default)"}]},"array_chunk":{"s":"Split an array into chunks","p":[{"t":"array","d":"The array to work on"},{"t":"size","d":"The size of each chunk"},{"t":"preserve_keys","d":"When set to TRUE keys will be preserved.\n       Default is FALSE which will reindex the chunk numerically"}]},"array_column":{"s":"Return the values from a single column in the input array","p":[{"t":"array","d":"A multi-dimensional array (record set) from which to pull a column of\n       values."},{"t":"column_key","d":"The column of values to return. This value may be the integer key of the\n       column you wish to retrieve, or it may be the string key name for an\n       associative array. It may also be NULL to return complete arrays\n       (useful together with index_key to reindex the\n       array)."},{"t":"index_key","d":"The column to use as the index\/keys for the returned array. This value\n       may be the integer key of the column, or it may be the string key name."}]},"array_combine":{"s":"Creates an array by using one array for keys and another for its values","p":[{"t":"keys","d":"Array of keys to be used. Illegal values for key will be\n       converted to string."},{"t":"values","d":"Array of values to be used"}]},"array_count_values":{"s":"Counts all the values of an array","p":[{"t":"array","d":"The array of values to count"}]},"array_diff":{"s":"Computes the difference of arrays","p":[{"t":"array1","d":"The array to compare from"},{"t":"array2","d":"An array to compare against"},{"t":"...","d":"More arrays to compare against"}]},"array_diff_assoc":{"s":"Computes the difference of arrays with additional index check","p":[{"t":"array1","d":"The array to compare from"},{"t":"array2","d":"An array to compare against"},{"t":"...","d":"More arrays to compare against"}]},"array_diff_key":{"s":"Computes the difference of arrays using keys for comparison","p":[{"t":"array1","d":"The array to compare from"},{"t":"array2","d":"An array to compare against"},{"t":"...","d":"More arrays to compare against"}]},"array_diff_uassoc":{"s":"Computes the difference of arrays with additional index check which is performed by a user supplied callback function","p":[{"t":"array1","d":"The array to compare from"},{"t":"array2","d":"An array to compare against"},{"t":"...","d":"More arrays to compare against"},{"t":"key_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_diff_ukey":{"s":"Computes the difference of arrays using a callback function on the keys for comparison","p":[{"t":"array1","d":"The array to compare from"},{"t":"array2","d":"An array to compare against"},{"t":"...","d":"More arrays to compare against"},{"t":"key_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_fill":{"s":"Fill an array with values","p":[{"t":"start_index","d":"The first index of the returned array."},{"t":"num","d":"Number of elements to insert.\n       Must be greater than zero."},{"t":"value","d":"Value to use for filling"}]},"array_fill_keys":{"s":"Fill an array with values, specifying keys","p":[{"t":"keys","d":"Array of values that will be used as keys. Illegal values\n       for key will be converted to string."},{"t":"value","d":"Value to use for filling"}]},"array_filter":{"s":"Filters elements of an array using a callback function","p":[{"t":"array","d":"The array to iterate over"},{"t":"callback","d":"The callback function to use"}]},"array_flip":{"s":"Exchanges all keys with their associated values in an array","p":[{"t":"array","d":"An array of key\/value pairs to be flipped."}]},"array_intersect":{"s":"Computes the intersection of arrays","p":[{"t":"array1","d":"The array with master values to check."},{"t":"array2","d":"An array to compare values against."},{"t":"...","d":"A variable list of arrays to compare."}]},"array_intersect_assoc":{"s":"Computes the intersection of arrays with additional index check","p":[{"t":"array1","d":"The array with master values to check."},{"t":"array2","d":"An array to compare values against."},{"t":"...","d":"A variable list of arrays to compare."}]},"array_intersect_key":{"s":"Computes the intersection of arrays using keys for comparison","p":[{"t":"array1","d":"The array with master keys to check."},{"t":"array2","d":"An array to compare keys against."},{"t":"...","d":"A variable list of arrays to compare."}]},"array_intersect_uassoc":{"s":"Computes the intersection of arrays with additional index check, compares indexes by a callback function","p":[{"t":"array1","d":"Initial array for comparison of the arrays."},{"t":"array2","d":"First array to compare keys against."},{"t":"...","d":"Variable list of array arguments to compare values against."},{"t":"key_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_intersect_ukey":{"s":"Computes the intersection of arrays using a callback function on the keys for comparison","p":[{"t":"array1","d":"Initial array for comparison of the arrays."},{"t":"array2","d":"First array to compare keys against."},{"t":"...","d":"Variable list of array arguments to compare keys against."},{"t":"key_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_keys":{"s":"Return all the keys or a subset of the keys of an array","p":[{"t":"array","d":"An array containing keys to return."},{"t":"search_value","d":"If specified, then only keys containing these values are returned."},{"t":"strict","d":"Determines if strict comparison (===) should be used during the search."}]},"array_key_exists":{"s":"Checks if the given key or index exists in the array","p":[{"t":"key","d":"Value to check."},{"t":"array","d":"An array with keys to check."}]},"array_map":{"s":"Applies the callback to the elements of the given arrays","p":[{"t":"callback","d":"Callback function to run for each element in each array."},{"t":"array1","d":"An array to run through the callback function."},{"t":"array","d":"Variable list of array arguments to run through the\n       callback function."}]},"array_merge":{"s":"Merge one or more arrays","p":[{"t":"array1","d":"Initial array to merge."},{"t":"...","d":"Variable list of arrays to merge."}]},"array_merge_recursive":{"s":"Merge two or more arrays recursively","p":[{"t":"array1","d":"Initial array to merge."},{"t":"...","d":"Variable list of arrays to recursively merge."}]},"array_multisort":{"s":"Sort multiple or multi-dimensional arrays","p":[{"t":"array1","d":"An array being sorted."},{"t":"array1_sort_order","d":"The order used to sort the previous array argument. Either\n       SORT_ASC to sort ascendingly or SORT_DESC\n       to sort descendingly."},{"t":"array1_sort_flags","d":"Sort options for the previous array argument:"},{"t":"...","d":"More arrays, optionally followed by sort order and flags."}]},"array_pad":{"s":"Pad array to the specified length with a value","p":[{"t":"array","d":"Initial array of values to pad."},{"t":"size","d":"New size of the array."},{"t":"value","d":"Value to pad if array is less than\n       size."}]},"array_pop":{"s":"Pop the element off the end of array","p":[{"t":"array","d":"The array to get the value from."}]},"array_product":{"s":"Calculate the product of values in an array","p":[{"t":"array","d":"The array."}]},"array_push":{"s":"Push one or more elements onto the end of array","p":[{"t":"array","d":"The input array."},{"t":"value1","d":"The first value to push onto the end of the array."}]},"array_rand":{"s":"Pick one or more random entries out of an array","p":[{"t":"array","d":"The input array."},{"t":"num","d":"Specifies how many entries should be picked."}]},"array_reduce":{"s":"Iteratively reduce the array to a single value using a callback function","p":[{"t":"array","d":"The input array."},{"t":"callback","d":""}]},"array_replace":{"s":"Replaces elements from passed arrays into the first array","p":[{"t":"array1","d":"The array in which elements are replaced."},{"t":"array2","d":"The array from which elements will be extracted."},{"t":"...","d":"More arrays from which elements will be extracted.\n       Values from later arrays overwrite the previous values."}]},"array_replace_recursive":{"s":"Replaces elements from passed arrays into the first array recursively","p":[{"t":"array1","d":"The array in which elements are replaced."},{"t":"array2","d":"The array from which elements will be extracted."},{"t":"...","d":"Optional. More arrays from which elements will be extracted."}]},"array_reverse":{"s":"Return an array with elements in reverse order","p":[{"t":"array","d":"The input array."},{"t":"preserve_keys","d":"If set to TRUE numeric keys are preserved. \n       Non-numeric keys are not affected by this setting and will always be preserved."}]},"array_search":{"s":"Searches the array for a given value and returns the corresponding key if successful","p":[{"t":"needle","d":"The searched value."},{"t":"haystack","d":"The array."},{"t":"strict","d":"If the third parameter strict is set to TRUE\n       then the array_search() function will search for\n       identical elements in the\n       haystack. This means it will also check the\n       types of the\n       needle in the haystack,\n       and objects must be the same instance."}]},"array_shift":{"s":"Shift an element off the beginning of array","p":[{"t":"array","d":"The input array."}]},"array_slice":{"s":"Extract a slice of the array","p":[{"t":"array","d":"The input array."},{"t":"offset","d":"If offset is non-negative, the sequence will\n       start at that offset in the array.  If\n       offset is negative, the sequence will\n       start that far from the end of the array."},{"t":"length","d":"If length is given and is positive, then\n       the sequence will have up to that many elements in it. If the array\n       is shorter than the length, then only the\n       available array elements will be present. If\n       length is given and is negative then the\n       sequence will stop that many elements from the end of the\n       array. If it is omitted, then the sequence will have everything\n       from offset up until the end of the\n       array."},{"t":"preserve_keys","d":"Note that array_slice() will reorder and reset the\n       numeric array indices by default. You can change this behaviour by setting\n       preserve_keys to TRUE."}]},"array_splice":{"s":"Remove a portion of the array and replace it with something else","p":[{"t":"input","d":"The input array."},{"t":"offset","d":"If offset is positive then the start of removed\n       portion is at that offset from the beginning of the\n       input array.  If offset\n       is negative then it starts that far from the end of the\n       input array."},{"t":"length","d":"If length is omitted, removes everything\n       from offset to the end of the array.  If\n       length is specified and is positive, then\n       that many elements will be removed. If\n       length is specified and is negative then\n       the end of the removed portion will be that many elements from\n       the end of the array.  Tip: to remove everything from\n       offset to the end of the array when\n       replacement is also specified, use\n       count($input) for\n       length."},{"t":"replacement","d":"If replacement array is specified, then the\n       removed elements are replaced with elements from this array."}]},"array_sum":{"s":"Calculate the sum of values in an array","p":[{"t":"array","d":"The input array."}]},"array_udiff":{"s":"Computes the difference of arrays by using a callback function for data comparison","p":[{"t":"array1","d":"The first array."},{"t":"array2","d":"The second array."},{"t":"value_compare_func","d":"The callback comparison function."}]},"array_udiff_assoc":{"s":"Computes the difference of arrays with additional index check, compares data by a callback function","p":[{"t":"array1","d":"The first array."},{"t":"array2","d":"The second array."},{"t":"value_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_udiff_uassoc":{"s":"Computes the difference of arrays with additional index check, compares data and indexes by a callback function","p":[{"t":"array1","d":"The first array."},{"t":"array2","d":"The second array."},{"t":"value_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_uintersect":{"s":"Computes the intersection of arrays, compares data by a callback function","p":[{"t":"array1","d":"The first array."},{"t":"array2","d":"The second array."},{"t":"value_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_uintersect_assoc":{"s":"Computes the intersection of arrays with additional index check, compares data by a callback function","p":[{"t":"array1","d":"The first array."},{"t":"array2","d":"The second array."},{"t":"value_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_uintersect_uassoc":{"s":"Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions","p":[{"t":"array1","d":"The first array."},{"t":"array2","d":"The second array."},{"t":"value_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"array_unique":{"s":"Removes duplicate values from an array","p":[{"t":"array","d":"The input array."},{"t":"sort_flags","d":"The optional second parameter sort_flags\n       may be used to modify the sorting behavior using these values:"}]},"array_unshift":{"s":"Prepend one or more elements to the beginning of an array","p":[{"t":"array","d":"The input array."},{"t":"value1","d":"First value to prepend."}]},"array_values":{"s":"Return all the values of an array","p":[{"t":"array","d":"The array."}]},"array_walk":{"s":"Apply a user function to every member of an array","p":[{"t":"array","d":"The input array."},{"t":"callback","d":"Typically, callback takes on two parameters.\n       The array parameter&#039;s value being the first, and\n       the key\/index second."},{"t":"userdata","d":"If the optional userdata parameter is supplied,\n       it will be passed as the third parameter to the\n       callback."}]},"array_walk_recursive":{"s":"Apply a user function recursively to every member of an array","p":[{"t":"array","d":"The input array."},{"t":"callback","d":"Typically, callback takes on two parameters.\n       The array parameter&#039;s value being the first, and\n       the key\/index second."},{"t":"userdata","d":"If the optional userdata parameter is supplied,\n       it will be passed as the third parameter to the\n       callback."}]},"arsort":{"s":"Sort an array in reverse order and maintain index association","p":[{"t":"array","d":"The input array."},{"t":"sort_flags","d":"You may modify the behavior of the sort using the optional parameter\n       sort_flags, for details see\n       sort()."}]},"asin":{"s":"Arc sine","p":[{"t":"arg","d":"The argument to process"}]},"asinh":{"s":"Inverse hyperbolic sine","p":[{"t":"arg","d":"The argument to process"}]},"asort":{"s":"Sort an array and maintain index association","p":[{"t":"array","d":"The input array."},{"t":"sort_flags","d":"You may modify the behavior of the sort using the optional\n       parameter sort_flags, for details\n       see sort()."}]},"assert":{"s":"Checks if assertion is FALSE","p":[{"t":"assertion","d":"The assertion."},{"t":"description","d":"An optional description that will be included in the failure message if\n       the assertion fails."}]},"assert_options":{"s":"Set\/get the various assert flags","p":[{"t":"what","d":"Assert Options\n        \n         \n          \n           Option\n           INI Setting\n           Default value\n           Description\n          \n\n         \n\n         \n          \n           ASSERT_ACTIVE\n           assert.active\n           1\n           enable assert() evaluation\n          \n\n          \n           ASSERT_WARNING\n           assert.warning\n           1\n           issue a PHP warning for each failed assertion\n          \n\n          \n           ASSERT_BAIL\n           assert.bail\n           0\n           terminate execution on failed assertions\n          \n\n          \n           ASSERT_QUIET_EVAL\n           assert.quiet_eval\n           0\n           \n            disable error_reporting during assertion expression\n            evaluation\n           \n          \n\n          \n           ASSERT_CALLBACK\n           assert.callback\n           (NULL)\n           Callback to call on failed assertions"},{"t":"value","d":"An optional new value for the option."}]},"atan":{"s":"Arc tangent","p":[{"t":"arg","d":"The argument to process"}]},"atan2":{"s":"Arc tangent of two variables","p":[{"t":"y","d":"Dividend parameter"},{"t":"x","d":"Divisor parameter"}]},"atanh":{"s":"Inverse hyperbolic tangent","p":[{"t":"arg","d":"The argument to process"}]},"base64_decode":{"s":"Decodes data encoded with MIME base64","p":[{"t":"data","d":"The encoded data."},{"t":"strict","d":"Returns FALSE if input contains character from outside the base64\n       alphabet."}]},"base64_encode":{"s":"Encodes data with MIME base64","p":[{"t":"data","d":"The data to encode."}]},"basename":{"s":"Returns trailing name component of path","p":[{"t":"path","d":"A path."},{"t":"suffix","d":"If the name component ends in suffix this will also\n       be cut off."}]},"base_convert":{"s":"Convert a number between arbitrary bases","p":[{"t":"number","d":"The number to convert"},{"t":"frombase","d":"The base number is in"},{"t":"tobase","d":"The base to convert number to"}]},"bbcode_add_element":{"s":"Adds a bbcode element","p":[{"t":"bbcode_container","d":"BBCode_Container resource, returned by bbcode_create()."},{"t":"tag_name","d":"The new tag to add to the BBCode_Container tag_set."},{"t":"tag_rules","d":"An associative array containing the parsing rules; see\n       bbcode_create() for the available keys."}]},"bbcode_add_smiley":{"s":"Adds a smiley to the parser","p":[{"t":"bbcode_container","d":"BBCode_Container resource, returned by bbcode_create()."},{"t":"smiley","d":"The string that will be replaced when found."},{"t":"replace_by","d":"The string that replace smiley when found."}]},"bbcode_create":{"s":"Create a BBCode Resource","p":[{"t":"bbcode_initial_tags","d":"An associative array containing the tag names as keys and parameters\n       required to correctly parse BBCode as their value. The following key\/value\n       pairs are supported:\n        \n         \n          \n           flags optional - a flag\n           set based on the BBCODE_FLAGS_* constants.\n          \n         \n         \n          \n           type required - an int\n           indicating the type of tag. Use the BBCODE_TYPE_* constants.\n          \n         \n         \n          \n           open_tag required - the HTML\n           replacement string for the open tag.\n          \n         \n         \n          \n           close_tag required - the HTML\n           replacement string for the close tag.\n          \n         \n         \n          \n           default_arg optional - \n           use this value as the default argument if none is provided and \n           tag_type is of type OPTARG.\n          \n         \n         \n          \n           content_handling optional - \n           Gives the callback used for modification of the content. Object\n           Oriented Notation supported only since 0.10.1 \n           callback prototype is string name(string $content, string $argument)\n          \n         \n         \n          \n           param_handling optional - \n           Gives the callback used for modification of the argument. Object\n           Oriented Notation supported only since 0.10.1 \n           callback prototype is string name(string $content, string $argument)\n          \n         \n         \n          \n           childs optional - List of\n           accepted children for the tag. The format of the list is a comma\n           separated string. If the list starts with ! it will be the list of\n           rejected children for the tag.\n          \n         \n         \n          \n           parent optional - List of\n           accepted parents for the tag. The format of the list is a comma\n           separated string."}]},"bbcode_destroy":{"s":"Close BBCode_container resource","p":[{"t":"bbcode_container","d":"BBCode_Container resource returned by bbcode_create()."}]},"bbcode_parse":{"s":"Parse a string following a given rule set","p":[{"t":"bbcode_container","d":"BBCode_Container resource returned by bbcode_create()."},{"t":"to_parse","d":"The string we need to parse."}]},"bbcode_set_arg_parser":{"s":"Attach another parser in order to use another rule set for argument parsing","p":[{"t":"bbcode_container","d":"BBCode_Container resource, returned by bbcode_create()."},{"t":"bbcode_arg_parser","d":"BBCode_Container resource, returned by bbcode_create().\n       It will be used only for parsed arguments"}]},"bbcode_set_flags":{"s":"Set or alter parser options","p":[{"t":"bbcode_container","d":"BBCode_Container resource, returned by bbcode_create()."},{"t":"flags","d":"The flag set that must be applied to the bbcode_container options"},{"t":"mode","d":"One of the BBCODE_SET_FLAGS_* constant to set, unset\n       a specific flag set or to replace the flag set by flags."}]},"bcadd":{"s":"Add two arbitrary precision numbers","p":[{"t":"left_operand","d":"The left operand, as a string."},{"t":"right_operand","d":"The right operand, as a string."},{"t":"","d":"This optional parameter is used to set the number\nof digits after the decimal place in the result. You can also set the global default scale\nfor all functions by using bcscale()."}]},"bccomp":{"s":"Compare two arbitrary precision numbers","p":[{"t":"left_operand","d":"The left operand, as a string."},{"t":"right_operand","d":"The right operand, as a string."},{"t":"scale","d":"The optional scale parameter is used to set the\n       number of digits after the decimal place which will be used in the\n       comparison."}]},"bcdiv":{"s":"Divide two arbitrary precision numbers","p":[{"t":"left_operand","d":"The left operand, as a string."},{"t":"right_operand","d":"The right operand, as a string."},{"t":"","d":"This optional parameter is used to set the number\nof digits after the decimal place in the result. You can also set the global default scale\nfor all functions by using bcscale()."}]},"bcmod":{"s":"Get modulus of an arbitrary precision number","p":[{"t":"left_operand","d":"The left operand, as a string."},{"t":"modulus","d":"The modulus, as a string."}]},"bcmul":{"s":"Multiply two arbitrary precision numbers","p":[{"t":"left_operand","d":"The left operand, as a string."},{"t":"right_operand","d":"The right operand, as a string."},{"t":"","d":"This optional parameter is used to set the number\nof digits after the decimal place in the result. You can also set the global default scale\nfor all functions by using bcscale()."}]},"bcompiler_load":{"s":"Reads and creates classes from a bz compressed file","p":[{"t":"filename","d":"The bzcompressed file path, as a string."}]},"bcompiler_load_exe":{"s":"Reads and creates classes from a bcompiler exe file","p":[{"t":"filename","d":"The exe file path, as a string."}]},"bcompiler_parse_class":{"s":"Reads the bytecodes of a class and calls back to a user function","p":[{"t":"class","d":"The class name, as a string."},{"t":"callback","d":""}]},"bcompiler_read":{"s":"Reads and creates classes from a filehandle","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."}]},"bcompiler_write_class":{"s":"Writes a defined class as bytecodes","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."},{"t":"className","d":"The class name, as a string."},{"t":"extends","d":""}]},"bcompiler_write_constant":{"s":"Writes a defined constant as bytecodes","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."},{"t":"constantName","d":"The name of the defined constant, as a string."}]},"bcompiler_write_exe_footer":{"s":"Writes the start pos, and sig to the end of a exe type file","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."},{"t":"startpos","d":"The file position at which the Bytecodes start, and can be obtained\n       using ftell()."}]},"bcompiler_write_file":{"s":"Writes a php source file as bytecodes","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."},{"t":"filename","d":"The source file path, as a string."}]},"bcompiler_write_footer":{"s":"Writes the single character \\x00 to indicate End of compiled data","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."}]},"bcompiler_write_function":{"s":"Writes a defined function as bytecodes","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."},{"t":"functionName","d":"The function name, as a string."}]},"bcompiler_write_functions_from_file":{"s":"Writes all functions defined in a file as bytecodes","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."},{"t":"fileName","d":"The file to be compiled.\n       You must always include or require the file you intend to compile."}]},"bcompiler_write_header":{"s":"Writes the bcompiler header","p":[{"t":"filehandle","d":"A file handle as returned by fopen()."},{"t":"write_ver","d":"Can be used to write bytecode in a previously used format, so that you\n       can use it with older versions of bcompiler."}]},"bcompiler_write_included_filename":{"s":"Writes an included file as bytecodes","p":null},"bcpow":{"s":"Raise an arbitrary precision number to another","p":[{"t":"left_operand","d":"The left operand, as a string."},{"t":"right_operand","d":"The right operand, as a string."},{"t":"","d":"This optional parameter is used to set the number\nof digits after the decimal place in the result. You can also set the global default scale\nfor all functions by using bcscale()."}]},"bcpowmod":{"s":"Raise an arbitrary precision number to another, reduced by a specified modulus","p":[{"t":"left_operand","d":"The left operand, as a string."},{"t":"right_operand","d":"The right operand, as a string."},{"t":"modulus","d":"The modulus, as a string."},{"t":"","d":"This optional parameter is used to set the number\nof digits after the decimal place in the result. You can also set the global default scale\nfor all functions by using bcscale()."}]},"bcscale":{"s":"Set default scale parameter for all bc math functions","p":[{"t":"scale","d":"The scale factor."}]},"bcsqrt":{"s":"Get the square root of an arbitrary precision number","p":[{"t":"operand","d":"The operand, as a string."},{"t":"","d":"This optional parameter is used to set the number\nof digits after the decimal place in the result. You can also set the global default scale\nfor all functions by using bcscale()."}]},"bcsub":{"s":"Subtract one arbitrary precision number from another","p":[{"t":"left_operand","d":"The left operand, as a string."},{"t":"right_operand","d":"The right operand, as a string."},{"t":"","d":"This optional parameter is used to set the number\nof digits after the decimal place in the result. You can also set the global default scale\nfor all functions by using bcscale()."}]},"bin2hex":{"s":"Convert binary data into hexadecimal representation","p":[{"t":"str","d":"A string."}]},"bindec":{"s":"Binary to decimal","p":[{"t":"binary_string","d":"The binary string to convert"}]},"bindtextdomain":{"s":"Sets the path for a domain","p":[{"t":"domain","d":"The domain"},{"t":"directory","d":"The directory path"}]},"bind_textdomain_codeset":{"s":"Specify the character encoding in which the messages from the DOMAIN message catalog will be returned","p":[{"t":"domain","d":"The domain"},{"t":"codeset","d":"The code set"}]},"blenc_encrypt":{"s":"","p":[{"t":"plaintext","d":"A source code to encrypt. Does not need to contain opening\/closing PHP tags"},{"t":"encodedfile","d":"The filename where BLENC will save the encoded source."},{"t":"encryption_key","d":"The key that BLENC will use to encrypt plaintext content. If not given\n       BLENC will create a valid key."}]},"bson_decode":{"s":"Deserializes a BSON object into a PHP array","p":[{"t":"bson","d":"The BSON to be deserialized."}]},"bson_encode":{"s":"Serializes a PHP variable into a BSON string","p":[{"t":"anything","d":"The variable to be serialized."}]},"bzclose":{"s":"Close a bzip2 file","p":[{"t":"bz","d":"The file pointer. It must be valid and must point to a file \n       successfully opened by bzopen()."}]},"bzcompress":{"s":"Compress a string into bzip2 encoded data","p":[{"t":"source","d":"The string to compress."},{"t":"blocksize","d":"Specifies the blocksize used during compression and should be a number \n       from 1 to 9 with 9 giving the best compression, but using more \n       resources to do so."},{"t":"workfactor","d":"Controls how the compression phase behaves when presented with worst\n       case, highly repetitive, input data.  The value can be between 0 and\n       250 with 0 being a special case."}]},"bzdecompress":{"s":"Decompresses bzip2 encoded data","p":[{"t":"source","d":"The string to decompress."},{"t":"small","d":"If TRUE, an alternative decompression algorithm will be used which\n       uses less memory (the maximum memory requirement drops to around 2300K) \n       but works at roughly half the speed."}]},"bzerrno":{"s":"Returns a bzip2 error number","p":[{"t":"bz","d":"The file pointer. It must be valid and must point to a file \n       successfully opened by bzopen()."}]},"bzerror":{"s":"","p":[{"t":"bz","d":"The file pointer. It must be valid and must point to a file \n       successfully opened by bzopen()."}]},"bzerrstr":{"s":"Returns a bzip2 error string","p":[{"t":"bz","d":"The file pointer. It must be valid and must point to a file \n       successfully opened by bzopen()."}]},"bzflush":{"s":"Force a write of all buffered data","p":[{"t":"bz","d":"The file pointer. It must be valid and must point to a file \n       successfully opened by bzopen()."}]},"bzopen":{"s":"Opens a bzip2 compressed file","p":[{"t":"filename","d":"The name of the file to open, or an existing stream resource."},{"t":"mode","d":"Similar to the fopen() function, only &#039;r&#039; (read)\n       and &#039;w&#039; (write) are supported. Everything else will cause bzopen\n       to return FALSE."}]},"bzread":{"s":"Binary safe bzip2 file read","p":[{"t":"bz","d":"The file pointer. It must be valid and must point to a file \n       successfully opened by bzopen()."},{"t":"length","d":"If not specified, bzread() will read 1024 \n       (uncompressed) bytes at a time. A maximum of 8192\n       uncompressed bytes will be read at a time."}]},"bzwrite":{"s":"Binary safe bzip2 file write","p":[{"t":"bz","d":"The file pointer. It must be valid and must point to a file \n       successfully opened by bzopen()."},{"t":"data","d":"The written data."},{"t":"length","d":"If supplied, writing will stop after length \n       (uncompressed) bytes have been written or the end of \n       data is reached, whichever comes first."}]},"cairo_create":{"s":"Returns a new CairoContext object on the requested surface.","p":[{"t":"surface","d":"Description..."}]},"cairo_font_face_get_type":{"s":"Description","p":[{"t":"fontface","d":"Description..."}]},"cairo_font_face_status":{"s":"Description","p":[{"t":"fontface","d":"Description..."}]},"cairo_font_options_create":{"s":"Description","p":null},"cairo_font_options_equal":{"s":"Description","p":[{"t":"options","d":"Description..."},{"t":"other","d":"Description..."}]},"cairo_font_options_get_antialias":{"s":"Description","p":[{"t":"options","d":"Description..."}]},"cairo_font_options_get_hint_metrics":{"s":"Description","p":[{"t":"options","d":"Description..."}]},"cairo_font_options_get_hint_style":{"s":"Description","p":[{"t":"options","d":"Description..."}]},"cairo_font_options_get_subpixel_order":{"s":"Description","p":[{"t":"options","d":"Description..."}]},"cairo_font_options_hash":{"s":"Description","p":[{"t":"options","d":"Description..."}]},"cairo_font_options_merge":{"s":"Description","p":[{"t":"options","d":"Description..."},{"t":"other","d":"Description..."}]},"cairo_font_options_set_antialias":{"s":"Description","p":[{"t":"options","d":"Description..."},{"t":"antialias","d":"Description..."}]},"cairo_font_options_set_hint_metrics":{"s":"Description","p":[{"t":"options","d":"Description..."},{"t":"hint_metrics","d":"Description..."}]},"cairo_font_options_set_hint_style":{"s":"Description","p":[{"t":"options","d":"Description..."},{"t":"hint_style","d":"Description..."}]},"cairo_font_options_set_subpixel_order":{"s":"Description","p":[{"t":"options","d":"Description..."},{"t":"subpixel_order","d":"Description..."}]},"cairo_font_options_status":{"s":"Description","p":[{"t":"options","d":"Description..."}]},"cairo_format_stride_for_width":{"s":"Description","p":[{"t":"format","d":"Description..."},{"t":"width","d":"Description..."}]},"cairo_image_surface_create":{"s":"Description","p":[{"t":"format","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."}]},"cairo_image_surface_create_for_data":{"s":"Description","p":[{"t":"data","d":"Description..."},{"t":"format","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."},{"t":"stride","d":"Description..."}]},"cairo_image_surface_create_from_png":{"s":"Description","p":[{"t":"file","d":"Description..."}]},"cairo_image_surface_get_data":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_image_surface_get_format":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_image_surface_get_height":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_image_surface_get_stride":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_image_surface_get_width":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_matrix_create_scale":{"s":"Alias of CairoMatrix::initScale()","p":null},"cairo_matrix_create_translate":{"s":"Alias of CairoMatrix::initTranslate()","p":null},"cairo_matrix_invert":{"s":"Description","p":[{"t":"matrix","d":"Description..."}]},"cairo_matrix_multiply":{"s":"Description","p":[{"t":"matrix1","d":"Description..."},{"t":"matrix2","d":"Description..."}]},"cairo_matrix_rotate":{"s":"Description","p":[{"t":"matrix","d":"Description..."},{"t":"radians","d":"Description..."}]},"cairo_matrix_transform_distance":{"s":"Description","p":[{"t":"matrix","d":"Description..."},{"t":"dx","d":"Description..."},{"t":"dy","d":"Description..."}]},"cairo_matrix_transform_point":{"s":"Description","p":[{"t":"matrix","d":"Description..."},{"t":"dx","d":"Description..."},{"t":"dy","d":"Description..."}]},"cairo_matrix_translate":{"s":"Description","p":[{"t":"matrix","d":"Description..."},{"t":"tx","d":"Description..."},{"t":"ty","d":"Description..."}]},"cairo_pattern_add_color_stop_rgb":{"s":"Description","p":[{"t":"pattern","d":"Description..."},{"t":"offset","d":"Description..."},{"t":"red","d":"Description..."},{"t":"green","d":"Description..."},{"t":"blue","d":"Description..."}]},"cairo_pattern_add_color_stop_rgba":{"s":"Description","p":[{"t":"pattern","d":"Description..."},{"t":"offset","d":"Description..."},{"t":"red","d":"Description..."},{"t":"green","d":"Description..."},{"t":"blue","d":"Description..."},{"t":"alpha","d":"Description..."}]},"cairo_pattern_create_for_surface":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_pattern_create_linear":{"s":"Description","p":[{"t":"x0","d":"Description..."},{"t":"y0","d":"Description..."},{"t":"x1","d":"Description..."},{"t":"y1","d":"Description..."}]},"cairo_pattern_create_radial":{"s":"Description","p":[{"t":"x0","d":"Description..."},{"t":"y0","d":"Description..."},{"t":"r0","d":"Description..."},{"t":"x1","d":"Description..."},{"t":"y1","d":"Description..."},{"t":"r1","d":"Description..."}]},"cairo_pattern_create_rgb":{"s":"Description","p":[{"t":"red","d":"Description..."},{"t":"green","d":"Description..."},{"t":"blue","d":"Description..."}]},"cairo_pattern_create_rgba":{"s":"Description","p":[{"t":"red","d":"Description..."},{"t":"green","d":"Description..."},{"t":"blue","d":"Description..."},{"t":"alpha","d":"Description..."}]},"cairo_pattern_get_color_stop_count":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_get_color_stop_rgba":{"s":"Description","p":[{"t":"pattern","d":"Description..."},{"t":"index","d":"Description..."}]},"cairo_pattern_get_extend":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_get_filter":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_get_linear_points":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_get_matrix":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_get_radial_circles":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_get_rgba":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_get_surface":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_get_type":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pattern_set_extend":{"s":"Description","p":[{"t":"pattern","d":"Description..."},{"t":"extend","d":"Description..."}]},"cairo_pattern_set_filter":{"s":"Description","p":[{"t":"pattern","d":"Description..."},{"t":"filter","d":"Description..."}]},"cairo_pattern_set_matrix":{"s":"Description","p":[{"t":"pattern","d":"Description..."},{"t":"matrix","d":"Description..."}]},"cairo_pattern_status":{"s":"Description","p":[{"t":"pattern","d":"Description..."}]},"cairo_pdf_surface_create":{"s":"Description","p":[{"t":"file","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."}]},"cairo_pdf_surface_set_size":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."}]},"cairo_ps_get_levels":{"s":"Description","p":null},"cairo_ps_level_to_string":{"s":"Description","p":[{"t":"level","d":"Description..."}]},"cairo_ps_surface_create":{"s":"Description","p":[{"t":"file","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."}]},"cairo_ps_surface_dsc_begin_page_setup":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_ps_surface_dsc_begin_setup":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_ps_surface_dsc_comment":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"comment","d":"Description..."}]},"cairo_ps_surface_get_eps":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_ps_surface_restrict_to_level":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"level","d":"Description..."}]},"cairo_ps_surface_set_eps":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"level","d":"Description..."}]},"cairo_ps_surface_set_size":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."}]},"cairo_scaled_font_create":{"s":"Description","p":[{"t":"fontface","d":"Description..."},{"t":"matrix","d":"Description..."},{"t":"ctm","d":"Description..."},{"t":"fontoptions","d":"Description..."}]},"cairo_scaled_font_extents":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."}]},"cairo_scaled_font_get_ctm":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."}]},"cairo_scaled_font_get_font_face":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."}]},"cairo_scaled_font_get_font_matrix":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."}]},"cairo_scaled_font_get_font_options":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."}]},"cairo_scaled_font_get_scale_matrix":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."}]},"cairo_scaled_font_get_type":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."}]},"cairo_scaled_font_glyph_extents":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."},{"t":"glyphs","d":"Description..."}]},"cairo_scaled_font_status":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."}]},"cairo_scaled_font_text_extents":{"s":"Description","p":[{"t":"scaledfont","d":"Description..."},{"t":"text","d":"Description..."}]},"cairo_surface_copy_page":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_create_similar":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"content","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."}]},"cairo_surface_finish":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_flush":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_get_content":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_get_device_offset":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_get_font_options":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_get_type":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_mark_dirty":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_mark_dirty_rectangle":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"x","d":"Description..."},{"t":"y","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."}]},"cairo_surface_set_device_offset":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"x","d":"Description..."},{"t":"y","d":"Description..."}]},"cairo_surface_set_fallback_resolution":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"x","d":"Description..."},{"t":"y","d":"Description..."}]},"cairo_surface_show_page":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_status":{"s":"Description","p":[{"t":"surface","d":"Description..."}]},"cairo_surface_write_to_png":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"stream","d":"Description..."}]},"cairo_svg_surface_create":{"s":"Description","p":[{"t":"file","d":"Description..."},{"t":"width","d":"Description..."},{"t":"height","d":"Description..."}]},"cairo_svg_surface_restrict_to_version":{"s":"Description","p":[{"t":"surface","d":"Description..."},{"t":"version","d":"Description..."}]},"cairo_svg_version_to_string":{"s":"Description","p":[{"t":"version","d":"Description..."}]},"calculhmac":{"s":"Obtain a hmac key (needs 2 arguments)","p":null},"calcul_hmac":{"s":"Obtain a hmac key (needs 8 arguments)","p":null},"call_user_method":{"s":"Call a user method on an specific object [deprecated]","p":[{"t":"method_name","d":"The method name being called."},{"t":"obj","d":"The object that method_name\n       is being called on."},{"t":"parameter ...","d":"The optional parameters."}]},"call_user_method_array":{"s":"Call a user method given with an array of parameters [deprecated]","p":[{"t":"method_name","d":"The method name being called."},{"t":"obj","d":"The object that method_name\n       is being called on."},{"t":"params","d":"An array of parameters."}]},"cal_days_in_month":{"s":"Return the number of days in a month for a given year and calendar","p":[{"t":"calendar","d":"Calendar to use for calculation"},{"t":"month","d":"Month in the selected calendar"},{"t":"year","d":"Year in the selected calendar"}]},"cal_from_jd":{"s":"Converts from Julian Day Count to a supported calendar","p":[{"t":"jd","d":"Julian day as integer"},{"t":"calendar","d":"Calendar to convert to"}]},"cal_info":{"s":"Returns information about a particular calendar","p":[{"t":"calendar","d":"Calendar to return information for. If no calendar is specified\n       information about all calendars is returned."}]},"cal_to_jd":{"s":"Converts from a supported calendar to Julian Day Count","p":[{"t":"calendar","d":"Calendar to convert from, one of \n       CAL_GREGORIAN,\n       CAL_JULIAN,\n       CAL_JEWISH or\n       CAL_FRENCH."},{"t":"month","d":"The month as a number, the valid range depends \n       on the calendar"},{"t":"day","d":"The day as a number, the valid range depends \n       on the calendar"},{"t":"year","d":"The year as a number, the valid range depends \n       on the calendar"}]},"ceil":{"s":"Round fractions up","p":[{"t":"value","d":"The value to round"}]},"chdb_create":{"s":"Creates a chdb file","p":[{"t":"pathname","d":"The name of the file to create."},{"t":"data","d":"An array containing the key-value pairs to store in the chdb file."}]},"chdir":{"s":"Change directory","p":[{"t":"directory","d":"The new current directory"}]},"checkdate":{"s":"Validate a Gregorian date","p":[{"t":"month","d":"The month is between 1 and 12 inclusive."},{"t":"day","d":"The day is within the allowed number of days for the given \n       month.  Leap years \n       are taken into consideration."},{"t":"year","d":"The year is between 1 and 32767 inclusive."}]},"checkdnsrr":{"s":"Check DNS records corresponding to a given Internet host name or IP address","p":[{"t":"host","d":"host may either be the IP address in\n       dotted-quad notation or the host name."},{"t":"type","d":"type may be any one of: A, MX, NS, SOA,\n       PTR, CNAME, AAAA, A6, SRV, NAPTR, TXT or ANY."}]},"chgrp":{"s":"Changes file group","p":[{"t":"filename","d":"Path to the file."},{"t":"group","d":"A group name or number."}]},"chmod":{"s":"Changes file mode","p":[{"t":"filename","d":"Path to the file."},{"t":"mode","d":"Note that mode is not automatically\n       assumed to be an octal value, so strings (such as &quot;g+w&quot;) will\n       not work properly. To ensure the expected operation,\n       you need to prefix mode with a zero (0):"}]},"chop":{"s":"Alias of rtrim()","p":null},"chown":{"s":"Changes file owner","p":[{"t":"filename","d":"Path to the file."},{"t":"user","d":"A user name or number."}]},"chr":{"s":"Return a specific character","p":[{"t":"ascii","d":"The ascii code."}]},"chroot":{"s":"Change the root directory","p":[{"t":"directory","d":"The path to change the root directory to."}]},"chunk_split":{"s":"Split a string into smaller chunks","p":[{"t":"body","d":"The string to be chunked."},{"t":"chunklen","d":"The chunk length."},{"t":"end","d":"The line ending sequence."}]},"classkit_import":{"s":"Import new class method definitions from a file","p":[{"t":"filename","d":"The filename of the class method definitions to import"}]},"classkit_method_add":{"s":"Dynamically adds a new method to a given class","p":[{"t":"classname","d":"The class to which this method will be added"},{"t":"methodname","d":"The name of the method to add"},{"t":"args","d":"Comma-delimited list of arguments for the newly-created method"},{"t":"code","d":"The code to be evaluated when methodname\n       is called"},{"t":"flags","d":"The type of method to create, can be\n       CLASSKIT_ACC_PUBLIC,\n       CLASSKIT_ACC_PROTECTED or\n       CLASSKIT_ACC_PRIVATE"}]},"classkit_method_copy":{"s":"Copies a method from class to another","p":[{"t":"dClass","d":"Destination class for copied method"},{"t":"dMethod","d":"Destination method name"},{"t":"sClass","d":"Source class of the method to copy"},{"t":"sMethod","d":"Name of the method to copy from the source class. If this parameter is\n       omitted, the value of dMethod is assumed."}]},"classkit_method_redefine":{"s":"Dynamically changes the code of the given method","p":[{"t":"classname","d":"The class in which to redefine the method"},{"t":"methodname","d":"The name of the method to redefine"},{"t":"args","d":"Comma-delimited list of arguments for the redefined method"},{"t":"code","d":"The new code to be evaluated when methodname\n       is called"},{"t":"flags","d":"The redefined method can be\n       CLASSKIT_ACC_PUBLIC,\n       CLASSKIT_ACC_PROTECTED or\n       CLASSKIT_ACC_PRIVATE"}]},"classkit_method_remove":{"s":"Dynamically removes the given method","p":[{"t":"classname","d":"The class in which to remove the method"},{"t":"methodname","d":"The name of the method to remove"}]},"classkit_method_rename":{"s":"Dynamically changes the name of the given method","p":[{"t":"classname","d":"The class in which to rename the method"},{"t":"methodname","d":"The name of the method to rename"},{"t":"newname","d":"The new name to give to the renamed method"}]},"class_alias":{"s":"Creates an alias for a class","p":[{"t":"original","d":"The original class."},{"t":"alias","d":"The alias name for the class."},{"t":"autoload","d":"Whether do autoload if the original class is not found."}]},"class_exists":{"s":"Checks if the class has been defined","p":[{"t":"class_name","d":"The class name. The name is matched in a case-insensitive manner."},{"t":"autoload","d":"Whether or not to call __autoload by default."}]},"class_implements":{"s":"","p":[{"t":"class","d":"An object (class instance) or a string (class name)."},{"t":"autoload","d":"Whether to allow this function to load the class automatically through\n       the __autoload() magic method."}]},"class_parents":{"s":"","p":[{"t":"class","d":"An object (class instance) or a string (class name)."},{"t":"autoload","d":"Whether to allow this function to load the class automatically through\n       the __autoload() magic method."}]},"class_uses":{"s":"","p":[{"t":"class","d":"An object (class instance) or a string (class name)."},{"t":"autoload","d":"Whether to allow this function to load the class automatically through\n       the __autoload() magic method."}]},"clearstatcache":{"s":"Clears file status cache","p":[{"t":"clear_realpath_cache","d":"Whether to clear the realpath cache or not."},{"t":"filename","d":"Clear the realpath and the stat cache for a specific filename only; only\n       used if clear_realpath_cache is TRUE."}]},"cli_get_process_title":{"s":"Returns the current process title","p":null},"cli_set_process_title":{"s":"Sets the process title","p":[{"t":"title","d":"The new title."}]},"closedir":{"s":"Close directory handle","p":[{"t":"dir_handle","d":"The directory handle resource previously opened\n       with opendir(). If the directory handle is \n       not specified, the last link opened by opendir() \n       is assumed."}]},"closelog":{"s":"Close connection to system logger","p":null},"compact":{"s":"Create array containing variables and their values","p":[{"t":"varname1","d":"compact() takes a variable number of parameters.\n       Each parameter can be either a string containing the name of the\n       variable, or an array of variable names.  The array can contain other\n       arrays of variable names inside it; compact()\n       handles it recursively."}]},"connection_aborted":{"s":"Check whether client disconnected","p":null},"connection_status":{"s":"Returns connection status bitfield","p":null},"connection_timeout":{"s":"Check if the script timed out","p":null},"constant":{"s":"Returns the value of a constant","p":[{"t":"name","d":"The constant name."}]},"convert_cyr_string":{"s":"Convert from one Cyrillic character set to another","p":[{"t":"str","d":"The string to be converted."},{"t":"from","d":"The source Cyrillic character set, as a single character."},{"t":"to","d":"The target Cyrillic character set, as a single character."}]},"convert_uudecode":{"s":"Decode a uuencoded string","p":[{"t":"data","d":"The uuencoded data."}]},"convert_uuencode":{"s":"Uuencode a string","p":[{"t":"data","d":"The data to be encoded  or FALSE on failure."}]},"copy":{"s":"Copies file","p":[{"t":"source","d":"Path to the source file."},{"t":"dest","d":"The destination path. If dest is a URL, the\n       copy operation may fail if the wrapper does not support overwriting of\n       existing files."}]},"cos":{"s":"Cosine","p":[{"t":"arg","d":"An angle in radians"}]},"cosh":{"s":"Hyperbolic cosine","p":[{"t":"arg","d":"The argument to process"}]},"count":{"s":"Count all elements in an array, or something in an object","p":[{"t":"array_or_countable","d":"An array or Countable object."},{"t":"mode","d":"If the optional mode parameter is set to\n       COUNT_RECURSIVE (or 1), count()\n       will recursively count the array.  This is particularly useful for\n       counting all the elements of a multidimensional array."}]},"count_chars":{"s":"Return information about characters used in a string","p":[{"t":"string","d":"The examined string."},{"t":"mode","d":"See return values."}]},"crack_check":{"s":"Performs an obscure check with the given password","p":[{"t":"dictionary","d":"The crack lib dictionary. If not specified, the last opened dictionary\n       is used."},{"t":"password","d":"The tested password."}]},"crack_closedict":{"s":"Closes an open CrackLib dictionary ","p":[{"t":"dictionary","d":"The dictionary to close. If not specified, the current dictionary is\n       closed."}]},"crack_getlastmessage":{"s":"Returns the message from the last obscure check","p":null},"crack_opendict":{"s":"Opens a new CrackLib dictionary","p":[{"t":"dictionary","d":"The path to the Cracklib dictionary."}]},"crc32":{"s":"Calculates the crc32 polynomial of a string","p":[{"t":"str","d":"The data."}]},"crypt":{"s":"One-way string hashing","p":[{"t":"str","d":"The string to be hashed."}]},"cubrid_affected_rows":{"s":"Return the number of rows affected by the last SQL statement","p":[{"t":"conn_identifier","d":"The CUBRID connection. If the connection identifier is not\n      specified, the last link opend by cubrid_connect() is\n    assumed."},{"t":"req_identifier","d":"Request Identifier, could be returned from either cubrid_prepare() or cubrid_execute(). \n        If the request identifier is not specified, the last identifier requested by \n        cubrid_prepare() or cubrid_execute() is assumed."}]},"cubrid_bind":{"s":"Bind variables to a prepared statement as parameters","p":[{"t":"req_identifier","d":"Request identifier as a result of\n    cubrid_prepare()."},{"t":"bind_index","d":"Location of binding parameters. It starts with 1."},{"t":"bind_value","d":"Actual value for binding."},{"t":"bind_value_type","d":"A type of the value to bind. (It is omitted by default.\n    Thus, the system internally uses string by default. However, you need to\n    specify the exact type of the value as an argument when they are NCHAR,\n    BIT, or BLOB\/CLOB)."}]},"cubrid_client_encoding":{"s":"Return the current CUBRID connection charset","p":[{"t":"conn_identifier","d":"The CUBRID connection. If the connection identifier is not specified, the last link opened by cubrid_connect() is assumed."}]},"cubrid_close":{"s":"Close CUBRID connection","p":[{"t":"conn_identifier","d":"The CUBRID connection identifier. If the connection identifier is not specified, the last connection opened by cubrid_connect() is assumed."}]},"cubrid_close_prepare":{"s":"Close the request handle ","p":[{"t":"req_identifier","d":"Request identifier."}]},"cubrid_close_request":{"s":"Close the request handle ","p":[{"t":"req_identifier","d":"Request identifier."}]},"cubrid_column_names":{"s":"Get the column names in result","p":[{"t":"req_identifier","d":"Request identifier."}]},"cubrid_column_types":{"s":"Get column types in result","p":[{"t":"req_identifier","d":"Request identifier."}]},"cubrid_col_get":{"s":"Get contents of collection type column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance that you want to read."},{"t":"attr_name","d":"Attribute name that you want to read from the instance."}]},"cubrid_col_size":{"s":"Get the number of elements in collection type column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID the instance that you want to work with."},{"t":"attr_name","d":"Name of the attribute that you want to work with."}]},"cubrid_commit":{"s":"Commit a transaction","p":[{"t":"conn_identifier","d":"Connection identifier."}]},"cubrid_connect":{"s":"Open a connection to a CUBRID Server","p":[{"t":"host","d":"Host name or IP address of CUBRID CAS server."},{"t":"port","d":"Port number of CUBRID CAS server (BROKER_PORT configured in $CUBRID\/conf\/cubrid_broker.conf)."},{"t":"dbname","d":"Name of database."},{"t":"userid","d":"User name for the database. If not given, the default\n      value is &quot;public&quot;."},{"t":"passwd","d":"User password. If not given, the default value is &quot;&quot;."},{"t":"new_link","d":"If a second call is made to\n      cubrid_connect() with the same arguments, no new\n      connection will be established, but instead, the connection identifier\n      of the already opened connection will be returned. The\n      new_link parameter modifies this behavior and\n      makes cubrid_connect() always open a new connection,\n      even if cubrid_connect() was called before with the\n      same parameters."}]},"cubrid_connect_with_url":{"s":"Establish the environment for connecting to CUBRID server","p":[{"t":"conn_url","d":"A character string that contains server connection information."},{"t":"userid","d":"User name for the database."},{"t":"passwd","d":"User password."},{"t":"new_link","d":"If a second call is made to\n       cubrid_connect_with_url() with the same arguments,\n       no new connection will be established, but instead, the connection\n       identifier of the already opened connection will be returned. The\n       new_link parameter modifies this behavior and\n       makes cubrid_connect_with_url() always open a new\n       connection, even if cubrid_connect_with_url() was\n       called before with the same parameters."}]},"cubrid_current_oid":{"s":"Get OID of the current cursor location","p":[{"t":"req_identifier","d":"Request identifier."}]},"cubrid_data_seek":{"s":"Move the internal row pointer of the CUBRID result","p":[{"t":"result","d":"The result."},{"t":"row_number","d":"This is the desired row number of the new result pointer."}]},"cubrid_db_name":{"s":"Get db name from results of cubrid_list_dbs","p":[{"t":"result","d":"The result pointer from a call to cubrid_list_dbs()."},{"t":"index","d":"The index into the result set."}]},"cubrid_disconnect":{"s":"Close a database connection","p":[{"t":"conn_identifier","d":"Connection identifier."}]},"cubrid_drop":{"s":"Delete an instance using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"Oid of the instance that you want to delete."}]},"cubrid_errno":{"s":"Return the numerical value of the error message from previous CUBRID operation","p":[{"t":"conn_identifier","d":"The CUBRID connection identifier. If the connection identifier is not\n       specified, the last connection opened by\n       cubrid_connect() is assumed."}]},"cubrid_error":{"s":"Get the error message","p":[{"t":"connection","d":"The CUBRID connection."}]},"cubrid_error_code":{"s":"Get error code for the most recent function call","p":null},"cubrid_error_code_facility":{"s":"Get the facility code of error","p":null},"cubrid_error_msg":{"s":"Get last error message for the most recent function call","p":null},"cubrid_execute":{"s":"Execute a prepared SQL statement","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"sql","d":"SQL to be executed."},{"t":"option","d":"Query execution option CUBRID_INCLUDE_OID, CUBRID_ASYNC, CUBRID_EXEC_QUERY_ALL."},{"t":"request_identifier","d":"cubrid_prepare() identifier."}]},"cubrid_fetch":{"s":"Fetch the next row from a result set","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"type","d":"Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC,\n    CUBRID_BOTH, CUBRID_OBJECT. If you want to operate the lob object, you can\n    use CUBRID_LOB."}]},"cubrid_fetch_array":{"s":"Fetch a result row as an associative array, a numeric array, or both","p":[{"t":"result","d":"Result comes from a call to cubrid_execute()"},{"t":"type","d":"Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC,\n      CUBRID_BOTH. If you need to operate the lob object, you can use CUBRID_LOB."}]},"cubrid_fetch_assoc":{"s":"Return the associative array that corresponds to the fetched row","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"type","d":"Type can only be CUBRID_LOB, this parameter will be used\n      only when you need to operate the lob object."}]},"cubrid_fetch_field":{"s":"Get column information from a result and return as an object","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"field_offset","d":"The numerical field offset. If the field offset is not specified, the\n     next field (that was not yet retrieved by this function) is retrieved.\n     The field_offset starts at 0."}]},"cubrid_fetch_lengths":{"s":"Return an array with the lengths of the values of each field from the current row","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"}]},"cubrid_fetch_object":{"s":"Fetche the next row and returns it as an object","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"class_name","d":"The name of the class to instantiate. If not specified, a\n        stdClass (stdClass is PHP&#039;s generic empty class\n        that&#039;s used when casting other types to objects) object is returned."},{"t":"params","d":"An optional array of parameters to pass to the constructor\n        for class_name objects."},{"t":"type","d":"Type can only be CUBRID_LOB, this parameter will be used only when you\n        need to operate the lob object."}]},"cubrid_fetch_row":{"s":"Return a numerical array with the values of the current row","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"type","d":"Type can only be CUBRID_LOB, this parameter will be used\n      only when you need to operate the lob object."}]},"cubrid_field_flags":{"s":"Return a string with the flags of the given field offset","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"field_offset","d":"The numerical field offset. The field_offset\n     starts at 0. If field_offset does not exist, an\n     error of level E_WARNING is also issued."}]},"cubrid_field_len":{"s":"Get the maximum length of the specified field","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"field_offset","d":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}]},"cubrid_field_name":{"s":"Return the name of the specified field index","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"field_offset","d":"The numerical field offset. The field_offset\n     starts at 0. If field_offset does not exist, an\n     error of level E_WARNING is also issued."}]},"cubrid_field_seek":{"s":"Move the result set cursor to the specified field offset","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"field_offset","d":"The numerical field offset. The field_offset\n       starts at 0. If field_offset does not exist, an\n       error of level E_WARNING is also issued."}]},"cubrid_field_table":{"s":"Return the name of the table of the specified field","p":[{"t":"result","d":"Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC, CUBRID_BOTH."},{"t":"field_offset","d":"The numerical field offset. The field_offset\n      starts at 0. If field_offset does not exist, an\n      error of level E_WARNING is also issued."}]},"cubrid_field_type":{"s":"Return the type of the column corresponding to the given field offset","p":[{"t":"result","d":"Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC, CUBRID_BOTH."},{"t":"field_offset","d":"The numerical field offset. The field_offset\n     starts at 0. If field_offset does not exist, an\n     error of level E_WARNING is also issued."}]},"cubrid_free_result":{"s":"Free the memory occupied by the result data","p":[{"t":"req_identifier","d":"This is the request identifier."}]},"cubrid_get":{"s":"Get a column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance that you want to read."},{"t":"attr","d":"Name of the attribute that you want to read."}]},"cubrid_get_autocommit":{"s":"Get auto-commit mode of the connection","p":[{"t":"conn_identifier","d":"Connection identifier."}]},"cubrid_get_charset":{"s":"Return the current CUBRID connection charset","p":[{"t":"conn_identifier","d":"The CUBRID connection."}]},"cubrid_get_class_name":{"s":"Get the class name using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance that you want to check the existence."}]},"cubrid_get_client_info":{"s":"Return the client library version","p":null},"cubrid_get_db_parameter":{"s":"Returns the CUBRID database parameters","p":[{"t":"conn_identifier","d":"The CUBRID connection. If the connection identifier is not specified,\n      the last link opened by cubrid_connect() is assumed."}]},"cubrid_get_query_timeout":{"s":"Get the query timeout value of the request","p":[{"t":"req_identifier","d":"Request identifier."}]},"cubrid_get_server_info":{"s":"Return the CUBRID server version","p":[{"t":"conn_identifier","d":"The CUBRID connection."}]},"cubrid_insert_id":{"s":"Return the ID generated for the last updated AUTO_INCREMENT column","p":[{"t":"conn_identifier","d":"The connection identifier previously obtained by a call to\n      cubrid_connect()."}]},"cubrid_is_instance":{"s":"Check whether the instance pointed by OID exists","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance that you want to check the existence."}]},"cubrid_list_dbs":{"s":"Return an array with the list of all existing CUBRID databases","p":[{"t":"conn_identifier","d":"The CUBRID connection."}]},"cubrid_load_from_glo":{"s":"Read data from a GLO instance and save it in a file","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"Oid of the glo instance that you want to read the data from."},{"t":"file_name","d":"Name of the file where you want to save the data in."}]},"cubrid_lob2_bind":{"s":"Bind a lob object or a string as a lob object to a prepared statement as parameters.","p":[{"t":"req_identifier","d":"Request identifier as a result of cubrid_prepare()."},{"t":"bind_index","d":"Location of binding parameters. It starts with 1."},{"t":"bind_value","d":"Actual value for binding."},{"t":"bind_value_type","d":"It must be &quot;BLOB&quot; or &quot;CLOB&quot; and it won&#039;t be case-sensitive. If it not be given, the default value is &quot;BLOB&quot;."}]},"cubrid_lob2_close":{"s":"Close LOB object.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."}]},"cubrid_lob2_export":{"s":"Export the lob object to a file.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."},{"t":"filename","d":"File name you want to store BLOB\/CLOB data. It also supports the path of the file."}]},"cubrid_lob2_import":{"s":"Import BLOB\/CLOB data from a file.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."},{"t":"filename","d":"File name you want to import BLOB\/CLOB data. It also supports the path of the file."}]},"cubrid_lob2_new":{"s":"Create a lob object.","p":[{"t":"conn_identifier","d":"Connection identifier. If the connection identifier is not specified, \n      the last connection opened by cubrid_connect() or \n      cubrid_connect_with_url() is assumed."},{"t":"type","d":"It may be &quot;BLOB&quot; or &quot;CLOB&quot;, it won&#039;t be case-sensitive. The default value is &quot;BLOB&quot;."}]},"cubrid_lob2_read":{"s":"Read from BLOB\/CLOB data.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."},{"t":"len","d":"Length from buffer you want to read from the lob data."}]},"cubrid_lob2_seek":{"s":"Move the cursor of a lob object.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."},{"t":"offset","d":"Number of units you want to move the cursor."},{"t":"origin","d":"This parameter can be the following values:"}]},"cubrid_lob2_seek64":{"s":"Move the cursor of a lob object.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."},{"t":"offset","d":"Number of units you want to move the cursor."},{"t":"origin","d":"This parameter can be the following values:"}]},"cubrid_lob2_size":{"s":"Get a lob object&#039;s size.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."}]},"cubrid_lob2_size64":{"s":"Get a lob object&#039;s size.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."}]},"cubrid_lob2_tell":{"s":"Tell the cursor position of the LOB object.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."}]},"cubrid_lob2_tell64":{"s":"Tell the cursor position of the LOB object.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."}]},"cubrid_lob2_write":{"s":"Write to a lob object.","p":[{"t":"lob_identifier","d":"Lob identifier as a result of cubrid_lob2_new() or get from the result set."},{"t":"buf","d":"Data that need to be written to the lob object."}]},"cubrid_lob_close":{"s":"Close BLOB\/CLOB data","p":[{"t":"lob_identifier_array","d":"LOB identifier array return from cubrid_lob_get."}]},"cubrid_lob_export":{"s":"Export BLOB\/CLOB data to file","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"lob_identifier","d":"LOB identifier."},{"t":"path_name","d":"Path name of the file."}]},"cubrid_lob_get":{"s":"Get BLOB\/CLOB data","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"sql","d":"SQL statement to be executed."}]},"cubrid_lob_send":{"s":"Read BLOB\/CLOB data and send straight to browser","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"lob_identifier","d":"LOB identifier."}]},"cubrid_lob_size":{"s":"Get BLOB\/CLOB data size","p":[{"t":"lob_identifier","d":"LOB identifier."}]},"cubrid_lock_read":{"s":"Set a read lock on the given OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance that you want to put read lock on."}]},"cubrid_lock_write":{"s":"Set a write lock on the given OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance that you want to put write lock on."}]},"cubrid_move_cursor":{"s":"Move the cursor in the result","p":[{"t":"req_identifier","d":"Request identifier."},{"t":"offset","d":"Number of units you want to move the cursor."},{"t":"origin","d":"Location where you want to move the cursor from CUBRID_CURSOR_FIRST, CUBRID_CURSOR_CURRENT, CUBRID_CURSOR_LAST."}]},"cubrid_new_glo":{"s":"Create a glo instance","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"class_name","d":"Name of the class that you want to create a glo in."},{"t":"file_name","d":"The file name that you want to save in the newly created glo."}]},"cubrid_next_result":{"s":"Get result of next query when executing multiple SQL statements","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"}]},"cubrid_num_cols":{"s":"Return the number of columns in the result set","p":[{"t":"result","d":"Result."}]},"cubrid_num_fields":{"s":"Return the number of columns in the result set","p":[{"t":"result","d":"result comes from a call to\n      cubrid_execute(), cubrid_query()\n      and cubrid_prepare()"}]},"cubrid_num_rows":{"s":"Get the number of rows in the result set","p":[{"t":"result","d":"result comes from a call to\n    cubrid_execute(), cubrid_query() and\n    cubrid_prepare()"}]},"cubrid_pconnect":{"s":"Open a persistent connection to a CUBRID server","p":[{"t":"host","d":"Host name or IP address of CUBRID CAS server."},{"t":"port","d":"Port number of CUBRID CAS server (BROKER_PORT configured in $CUBRID\/conf\/cubrid_broker.conf)."},{"t":"dbname","d":"Name of database."},{"t":"userid","d":"User name for the database."},{"t":"passwd","d":"User password."}]},"cubrid_pconnect_with_url":{"s":"Open a persistent connection to CUBRID server","p":[{"t":"conn_url","d":"A character string that contains server connection information."},{"t":"userid","d":"User name for the database."},{"t":"passwd","d":"User password."}]},"cubrid_ping":{"s":"Ping a server connection or reconnect if there is no connection","p":[{"t":"conn_identifier","d":"The CUBRID connection identifier. If the connection identifier is not\n       specified, the last connection opened by\n       cubrid_connect() is assumed."}]},"cubrid_prepare":{"s":"Prepare a SQL statement for execution","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"prepare_stmt","d":"Prepare query."},{"t":"option","d":"OID return option CUBRID_INCLUDE_OID."}]},"cubrid_put":{"s":"Update a column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance that you want to update."},{"t":"attr","d":"Name of the attribute that you want to update."},{"t":"value","d":"New value that you want to assign to the attribute."}]},"cubrid_query":{"s":"Send a CUBRID query","p":[{"t":"query","d":"An SQL query"},{"t":"conn_identifier","d":"The CUBRID connection. If the connection identifier is not specified,\n       the last connection opened by cubrid_connect() is\n       assumed."}]},"cubrid_real_escape_string":{"s":"Escape special characters in a string for use in an SQL statement","p":[{"t":"unescaped_string","d":"The string that is to be escaped."},{"t":"conn_identifier","d":"The CUBRID connection. If the connection identifier is not specified, the\n     last connection opened by cubrid_connect() is assumed."}]},"cubrid_result":{"s":"Return the value of a specific field in a specific row","p":[{"t":"result","d":"result comes from a call to cubrid_execute()"},{"t":"row","d":"The row number from the result that is being retrieved. Row numbers start at 0."},{"t":"field","d":"The name or offset of the field being retrieved. It\n    can be the field&#039;s offset, the field&#039;s name, or the field&#039;s table dot\n    field name (tablename.fieldname). If the column name has been aliased\n    (&#039;select foo as bar from...&#039;), use the alias instead of the column name.\n    If undefined, the first field is retrieved."}]},"cubrid_rollback":{"s":"Roll back a transaction","p":[{"t":"conn_identifier","d":"Connection identifier."}]},"cubrid_save_to_glo":{"s":"Save requested file in a GLO instance","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"Oid of the glo instance that you want to save a file in."},{"t":"file_name","d":"The name of the file that you want to save."}]},"cubrid_schema":{"s":"Get the requested schema information","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"schema_type","d":"Schema data that you want to know."},{"t":"class_name","d":"Class you want to know the schema of."},{"t":"attr_name","d":"Attribute you want to know the schema of."}]},"cubrid_send_glo":{"s":"Read data from glo and send it to std output","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"Oid of the glo instance that you want to read data from."}]},"cubrid_seq_drop":{"s":"Delete an element from sequence type column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance you want to work with."},{"t":"attr_name","d":"Name of the attribute that you want to delete an element from."},{"t":"index","d":"Index of the element that you want to delete (1-based)."}]},"cubrid_seq_insert":{"s":"Insert an element to a sequence type column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance you want to work with."},{"t":"attr_name","d":"Name of the attribute you want to insert an instance to."},{"t":"index","d":"Location of the element, you want to insert the element to (1-based)."},{"t":"seq_element","d":"Content of the element that you want to insert."}]},"cubrid_seq_put":{"s":"Update the element value of sequence type column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance you want to work with."},{"t":"attr_name","d":"Name of the attribute that you want to update an element."},{"t":"index","d":"Index (1-based) of the element that you want to update."},{"t":"seq_element","d":"New content that you want to use for the update."}]},"cubrid_set_add":{"s":"Insert a single element to set type column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance you want to work with."},{"t":"attr_name","d":"Name of the attribute you want to insert an element."},{"t":"set_element","d":"Content of the element you want to insert."}]},"cubrid_set_autocommit":{"s":"Set autocommit mode of the connection","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"mode","d":"Auto-commit mode. The following constants can be used:"}]},"cubrid_set_db_parameter":{"s":"Sets the CUBRID database parameters","p":[{"t":"conn_identifier","d":"The CUBRID connection. If the connection identifier is not specified,\n      the last link opened by cubrid_connect() is assumed."},{"t":"param_type","d":"Database parameter type."},{"t":"param_value","d":"Isolation level value (1-6) or lock timeout (in seconds) value."}]},"cubrid_set_drop":{"s":"Delete an element from set type column using OID","p":[{"t":"conn_identifier","d":"Connection identifier."},{"t":"oid","d":"OID of the instance you want to work with."},{"t":"attr_name","d":"Name of the attribute you want to delete an element from."},{"t":"set_element","d":"Content of the element you want to delete."}]},"cubrid_set_query_timeout":{"s":"Set the timeout time of query execution","p":[{"t":"req_identifier","d":"Request identifier."},{"t":"timeout","d":"Timeout time, unit of msec."}]},"cubrid_unbuffered_query":{"s":"Perform a query without fetching the results into memory","p":[{"t":"query","d":"A SQL query."},{"t":"conn_identifier","d":"The CUBRID connection. If the connection identifier is not specified, the last connection opened by cubrid_connect() is assumed."}]},"cubrid_version":{"s":"Get the CUBRID PHP module&#039;s version","p":null},"curl_close":{"s":"Close a cURL session","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_copy_handle":{"s":"Copy a cURL handle along with all of its preferences","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_errno":{"s":"Return the last error number","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_error":{"s":"Return a string containing the last error for the current session","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_escape":{"s":"URL encodes the given string","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."},{"t":"str","d":"The string to be encoded."}]},"curl_exec":{"s":"Perform a cURL session","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_file_create":{"s":"Create a CURLFile object","p":null},"curl_getinfo":{"s":"Get information regarding a specific transfer","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."},{"t":"opt","d":"This may be one of the following constants:\n       \n        \n         \n          CURLINFO_EFFECTIVE_URL - Last effective URL\n         \n        \n        \n         \n          CURLINFO_HTTP_CODE - Last received HTTP code\n         \n        \n        \n         \n          CURLINFO_FILETIME - Remote time of the retrieved document, if -1 is returned the time of the document is unknown\n         \n        \n        \n         \n          CURLINFO_TOTAL_TIME - Total transaction time in seconds for last transfer\n         \n        \n        \n         \n          CURLINFO_NAMELOOKUP_TIME - Time in seconds until name resolving was complete\n         \n        \n        \n         \n          CURLINFO_CONNECT_TIME - Time in seconds it took to establish the connection\n         \n        \n        \n         \n          CURLINFO_PRETRANSFER_TIME - Time in seconds from start until just before file transfer begins\n         \n        \n        \n         \n          CURLINFO_STARTTRANSFER_TIME - Time in seconds until the first byte is about to be transferred\n         \n        \n        \n         \n          CURLINFO_REDIRECT_COUNT - Number of redirects\n         \n        \n        \n         \n          CURLINFO_REDIRECT_TIME - Time in seconds of all redirection steps before final transaction was started\n         \n        \n        \n         \n          CURLINFO_SIZE_UPLOAD - Total number of bytes uploaded\n         \n        \n        \n         \n          CURLINFO_SIZE_DOWNLOAD - Total number of bytes downloaded\n         \n        \n        \n         \n          CURLINFO_SPEED_DOWNLOAD - Average download speed\n         \n        \n        \n         \n          CURLINFO_SPEED_UPLOAD - Average upload speed\n         \n        \n        \n         \n          CURLINFO_HEADER_SIZE - Total size of all headers received\n         \n        \n        \n         \n          CURLINFO_HEADER_OUT - The request string sent. For this to \n          work, add the CURLINFO_HEADER_OUT option to the handle by calling \n          curl_setopt()\n         \n        \n        \n         \n        CURLINFO_REQUEST_SIZE - Total size of issued requests, currently only for HTTP requests\n         \n        \n        \n         \n          CURLINFO_SSL_VERIFYRESULT - Result of SSL certification verification requested by setting CURLOPT_SSL_VERIFYPEER\n         \n        \n        \n         \n          CURLINFO_CONTENT_LENGTH_DOWNLOAD - content-length of download, read from Content-Length: field\n         \n        \n        \n         \n          CURLINFO_CONTENT_LENGTH_UPLOAD - Specified size of upload\n         \n        \n        \n         \n          CURLINFO_CONTENT_TYPE - Content-Type: of the requested document, NULL indicates server did not send valid Content-Type: header"}]},"curl_init":{"s":"Initialize a cURL session","p":[{"t":"url","d":"If provided, the CURLOPT_URL option will be set\n       to its value. You can manually set this using the \n       curl_setopt() function."}]},"curl_multi_add_handle":{"s":"Add a normal cURL handle to a cURL multi handle","p":[{"t":"mh","d":"A cURL multi handle returned by\ncurl_multi_init()."},{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_multi_close":{"s":"Close a set of cURL handles","p":[{"t":"mh","d":"A cURL multi handle returned by\ncurl_multi_init()."}]},"curl_multi_exec":{"s":"Run the sub-connections of the current cURL handle","p":[{"t":"mh","d":"A cURL multi handle returned by\ncurl_multi_init()."},{"t":"still_running","d":"A reference to a flag to tell whether the operations are still running."}]},"curl_multi_getcontent":{"s":"Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_multi_info_read":{"s":"Get information about the current transfers","p":[{"t":"mh","d":"A cURL multi handle returned by\ncurl_multi_init()."},{"t":"msgs_in_queue","d":"Number of messages that are still in the queue"}]},"curl_multi_init":{"s":"Returns a new cURL multi handle","p":null},"curl_multi_remove_handle":{"s":"Remove a multi handle from a set of cURL handles","p":[{"t":"mh","d":"A cURL multi handle returned by\ncurl_multi_init()."},{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_multi_select":{"s":"Wait for activity on any curl_multi connection","p":[{"t":"mh","d":"A cURL multi handle returned by\ncurl_multi_init()."},{"t":"timeout","d":"Time, in seconds, to wait for a response."}]},"curl_multi_setopt":{"s":"Set an option for the cURL multi handle","p":[{"t":"mh","d":""},{"t":"option","d":"One of the CURLMOPT_* constants."},{"t":"value","d":"The value to be set on option."}]},"curl_multi_strerror":{"s":"Return string describing error code","p":[{"t":"errornum","d":"One of the &raquo;&nbsp;CURLM error codes constants."}]},"curl_pause":{"s":"Pause and unpause a connection","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."},{"t":"bitmask","d":"One of CURLPAUSE_* constants."}]},"curl_reset":{"s":"Reset all options of a libcurl session handle","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."}]},"curl_setopt":{"s":"Set an option for a cURL transfer","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."},{"t":"option","d":"The CURLOPT_XXX option to set."},{"t":"value","d":"The value to be set on option."}]},"curl_setopt_array":{"s":"Set multiple options for a cURL transfer","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."},{"t":"options","d":"An array specifying which options to set and their values.\n       The keys should be valid curl_setopt() constants or\n       their integer equivalents."}]},"curl_share_close":{"s":"Close a cURL share handle","p":[{"t":"sh","d":"A cURL share handle returned by curl_share_init()"}]},"curl_share_init":{"s":"Initialize a cURL share handle","p":null},"curl_share_setopt":{"s":"Set an option for a cURL share handle.","p":[{"t":"sh","d":"A cURL share handle returned by curl_share_init()."},{"t":"option","d":"Option\n           Description\n          \n\n         \n\n         \n          \n           CURLSHOPT_SHARE\n           \n               Specifies a type of data that should be shared.\n           \n          \n\n          \n           CURLSHOPT_UNSHARE\n           \n               Specifies a type of data that will be no longer shared."},{"t":"value","d":"Value\n           Description\n          \n\n         \n\n         \n          \n           CURL_LOCK_DATA_COOKIE\n           \n               Shares cookie data.\n           \n          \n\n          \n           CURL_LOCK_DATA_DNS\n           \n               Shares DNS cache. Note that when you use cURL multi handles,\n               all handles added to the same multi handle will share DNS cache\n               by default.\n           \n          \n\n          \n           CURL_LOCK_DATA_SSL_SESSION\n           \n               Shares SSL session IDs, reducing the time spent on the SSL\n               handshake when reconnecting to the same server. Note that SSL\n               session IDs are reused withing the same handle by default."}]},"curl_strerror":{"s":"Return string describing the given error code","p":[{"t":"errornum","d":"One of the &raquo;&nbsp;cURL error codes constants."}]},"curl_unescape":{"s":"Decodes the given URL encoded string","p":[{"t":"ch","d":"A cURL handle returned by\ncurl_init()."},{"t":"str","d":"The URL encoded string to be decoded."}]},"curl_version":{"s":"Gets cURL version information","p":[{"t":"age","d":""}]},"current":{"s":"Return the current element in an array","p":[{"t":"array","d":"The array."}]},"cyrus_authenticate":{"s":"Authenticate against a Cyrus IMAP server","p":null},"cyrus_bind":{"s":"Bind callbacks to a Cyrus IMAP connection","p":[{"t":"connection","d":"The connection handle."},{"t":"callbacks","d":"An array of callbacks."}]},"cyrus_close":{"s":"Close connection to a Cyrus IMAP server","p":[{"t":"connection","d":"The connection handle."}]},"cyrus_connect":{"s":"Connect to a Cyrus IMAP server","p":[{"t":"host","d":"The Cyrus IMAP host name."},{"t":"port","d":"The port number."},{"t":"flags","d":""}]},"cyrus_query":{"s":"Send a query to a Cyrus IMAP server","p":[{"t":"connection","d":"The connection handle."},{"t":"query","d":"The query string."}]},"cyrus_unbind":{"s":"Unbind ...","p":[{"t":"connection","d":"The connection handle."},{"t":"trigger_name","d":"The trigger name."}]},"date":{"s":"Format a local time\/date","p":[{"t":"format","d":"The format of the outputted date string. See the formatting\n       options below. There are also several\n       predefined date constants\n       that may be used instead, so for example DATE_RSS\n       contains the format string &#039;D, d M Y H:i:s&#039;."},{"t":"timestamp","d":"The optional timestamp parameter is an\ninteger Unix timestamp that defaults to the current\nlocal time if a timestamp is not given. In other\nwords, it defaults to the value of time()."}]},"date_add":{"s":"Alias of DateTime::add()","p":null},"date_create":{"s":"Alias of DateTime::__construct()","p":null},"date_create_from_format":{"s":"Alias of DateTime::createFromFormat()","p":null},"date_create_immutable":{"s":"Alias of DateTimeImmutable::__construct()","p":null},"date_create_immutable_from_format":{"s":"Alias of DateTimeImmutable::createFromFormat()","p":null},"date_date_set":{"s":"Alias of DateTime::setDate()","p":null},"date_default_timezone_set":{"s":"","p":[{"t":"timezone_identifier","d":"The timezone identifier, like UTC or\n       Europe\/Lisbon. The list of valid identifiers is\n       available in the List of Supported Timezones."}]},"date_diff":{"s":"Alias of DateTime::diff()","p":null},"date_format":{"s":"Alias of DateTime::format()","p":null},"date_get_last_errors":{"s":"Alias of DateTime::getLastErrors()","p":null},"date_interval_create_from_date_string":{"s":"Alias of DateInterval::createFromDateString()","p":null},"date_interval_format":{"s":"Alias of DateInterval::format()","p":null},"date_isodate_set":{"s":"Alias of DateTime::setISODate()","p":null},"date_modify":{"s":"Alias of DateTime::modify()","p":null},"date_offset_get":{"s":"Alias of DateTime::getOffset()","p":null},"date_parse":{"s":"Returns associative array with detailed info about given date","p":[{"t":"date","d":"Date in format accepted by strtotime()."}]},"date_parse_from_format":{"s":"Get info about given date formatted according to the specified format","p":[{"t":"format","d":"Format accepted by DateTime::createFromFormat()."},{"t":"date","d":"String representing the date."}]},"date_sub":{"s":"Alias of DateTime::sub()","p":null},"date_sunrise":{"s":"Returns time of sunrise for a given day and location","p":[{"t":"timestamp","d":"The timestamp of the day from which the sunrise\n       time is taken."},{"t":"format","d":"format constants\n        \n         \n          \n           constant\n           description\n           example\n          \n\n         \n\n         \n          \n           SUNFUNCS_RET_STRING\n           returns the result as string\n           16:46\n          \n\n          \n           SUNFUNCS_RET_DOUBLE\n           returns the result as float\n           16.78243132\n          \n\n          \n           SUNFUNCS_RET_TIMESTAMP\n           returns the result as integer (timestamp)\n           1095034606"},{"t":"latitude","d":"Defaults to North, pass in a negative value for South.\n       See also: date.default_latitude"},{"t":"longitude","d":"Defaults to East, pass in a negative value for West.\n       See also: date.default_longitude"},{"t":"zenith","d":"Default: date.sunrise_zenith"},{"t":"gmtoffset","d":"Specified in hours."}]},"date_sunset":{"s":"","p":[{"t":"timestamp","d":"The timestamp of the day from which the sunset\n       time is taken."},{"t":"format","d":"format constants\n        \n         \n          \n           constant\n           description\n           example\n          \n\n         \n\n         \n          \n           SUNFUNCS_RET_STRING\n           returns the result as string\n           16:46\n          \n\n          \n           SUNFUNCS_RET_DOUBLE\n           returns the result as float\n           16.78243132\n          \n\n          \n           SUNFUNCS_RET_TIMESTAMP\n           returns the result as integer (timestamp)\n           1095034606"},{"t":"latitude","d":"Defaults to North, pass in a negative value for South.\n       See also: date.default_latitude"},{"t":"longitude","d":"Defaults to East, pass in a negative value for West.\n       See also: date.default_longitude"},{"t":"zenith","d":"Default: date.sunset_zenith"},{"t":"gmtoffset","d":"Specified in hours."}]},"date_sun_info":{"s":"Returns an array with information about sunset\/sunrise and twilight begin\/end","p":[{"t":"time","d":"Timestamp."},{"t":"latitude","d":"Latitude in degrees."},{"t":"longitude","d":"Longitude in degrees."}]},"date_timestamp_get":{"s":"Alias of DateTime::getTimestamp()","p":null},"date_timestamp_set":{"s":"Alias of DateTime::setTimestamp()","p":null},"date_timezone_get":{"s":"Alias of DateTime::getTimezone()","p":null},"date_timezone_set":{"s":"Alias of DateTime::setTimezone()","p":null},"date_time_set":{"s":"Alias of DateTime::setTime()","p":null},"db2_autocommit":{"s":"","p":[{"t":"connection","d":"A valid database connection resource variable as returned from\n       db2_connect() or db2_pconnect()."},{"t":"value","d":""},{"t":"","d":"Turns AUTOCOMMIT off."},{"t":"","d":"Turns AUTOCOMMIT on."}]},"db2_bind_param":{"s":"","p":[{"t":"stmt","d":"A prepared statement returned from db2_prepare()."},{"t":"parameter-number","d":"Specifies the 1-indexed position of the parameter in the prepared\n       statement."},{"t":"variable-name","d":"A string specifying the name of the PHP variable to bind to the\n       parameter specified by parameter-number."},{"t":"parameter-type","d":"A constant specifying whether the PHP variable should be bound to the\n       SQL parameter as an input parameter (DB2_PARAM_IN),\n       an output parameter (DB2_PARAM_OUT), or as a\n       parameter that accepts input and returns output\n       (DB2_PARAM_INOUT). To avoid memory overhead, you can\n       also specify DB2_PARAM_FILE to bind the PHP variable\n       to the name of a file that contains large object (BLOB, CLOB, or DBCLOB)\n       data."},{"t":"data-type","d":"A constant specifying the SQL data type that the PHP variable should be\n       bound as: one of DB2_BINARY,\n       DB2_CHAR, DB2_DOUBLE, or\n       DB2_LONG ."},{"t":"precision","d":"Specifies the precision with which the variable should be bound to the\n       database. This parameter can also be used for retrieving XML output values \n       from stored procedures. A non-negative value specifies the maximum size of \n       the XML data that will be retrieved from the database. If this parameter \n       is not used, a default of 1MB will be assumed for retrieving the XML \n       output value from the stored procedure."},{"t":"scale","d":"Specifies the scale with which the variable should be bound to the\n       database."}]},"db2_client_info":{"s":"Returns an object with properties that describe the DB2 database client","p":[{"t":"connection","d":"Specifies an active DB2 client connection."}]},"db2_close":{"s":"","p":[{"t":"connection","d":"Specifies an active DB2 client connection."}]},"db2_columns":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the tables. To match all schemas, pass\n       &#039;%&#039;."},{"t":"table-name","d":"The name of the table or view. To match all tables in the database,\n       pass NULL or an empty string."},{"t":"column-name","d":"The name of the column. To match all columns in the table, pass NULL\n       or an empty string."}]},"db2_column_privileges":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the tables. To match all schemas, pass NULL\n       or an empty string."},{"t":"table-name","d":"The name of the table or view. To match all tables in the database,\n       pass NULL or an empty string."},{"t":"column-name","d":"The name of the column. To match all columns in the table, pass NULL\n       or an empty string."}]},"db2_commit":{"s":"","p":[{"t":"connection","d":"A valid database connection resource variable as returned from\n       db2_connect() or db2_pconnect()."}]},"db2_connect":{"s":"","p":[{"t":"database","d":"For a cataloged connection to a database, database\n       represents the database alias in the DB2 client catalog."},{"t":"database","d":"The name of the database."},{"t":"hostname","d":"The hostname or IP address of the database server."},{"t":"port","d":"The TCP\/IP port on which the database is listening for\n           requests."},{"t":"username","d":"The username with which you are connecting to the\n           database."},{"t":"password","d":"The password with which you are connecting to the database."},{"t":"username","d":"The username with which you are connecting to the database."},{"t":"password","d":"The password with which you are connecting to the database."},{"t":"options","d":""},{"t":"autocommit","d":"Passing the DB2_AUTOCOMMIT_ON value turns\n           autocommit on for this connection handle."},{"t":"DB2_ATTR_CASE","d":"Passing the DB2_CASE_NATURAL value specifies\n           that column names are returned in natural case."},{"t":"CURSOR","d":"Passing the DB2_FORWARD_ONLY value specifies a\n           forward-only cursor for a statement resource. This is the default\n           cursor type and is supported on all database servers."},{"t":"trustedcontext","d":"Passing the DB2_TRUSTED_CONTEXT_ENABLE value turns trusted context \n           on for this connection handle. This parameter cannot be set using \n           db2_set_option()."},{"t":"i5_lib","d":"A character value that indicates the default library that will be \n           used for resolving unqualified file references. This is not valid \n           if the connection is using system naming mode."},{"t":"i5_naming","d":"DB2_I5_NAMING_ON value turns on DB2 UDB CLI iSeries \n           system naming mode. Files are qualified using the slash (\/) delimiter. \n           Unqualified files are resolved using the library list for the job."},{"t":"i5_commit","d":"The i5_commit attribute should be set before the \n           db2_connect(). If the value is changed after the \n           connection has been established, and the connection is to a remote data \n           source, the change does not take effect until the next successful \n           db2_connect() for the connection handle.\n           Note: \n            \n             The php.ini setting ibm_db2.i5_allow_commit==0 \n             or DB2_I5_TXN_NO_COMMIT is the default, but may be \n             overridden with the i5_commit option."},{"t":"i5_query_optimize","d":"DB2_FIRST_IO All queries are optimized with the goal of \n            returning the first page of output as fast as possible. This goal works well \n            when the output is controlled by a user who is most likely to cancel the query \n            after viewing the first page of output data. Queries coded with an \n            OPTIMIZE FOR nnn ROWS clause honor the goal specified by the clause."},{"t":"i5_dbcs_alloc","d":"DB2_I5_DBCS_ALLOC_ON value turns on DB2 6X allocation scheme \n           for DBCS translation column size growth."},{"t":"i5_date_fmt","d":"DB2_I5_FMT_ISO - The International Organization for Standardization \n           (ISO) date format yyyy-mm-dd is used. This is the default."},{"t":"i5_date_sep","d":"DB2_I5_SEP_SLASH - A slash ( \/ ) is used as the date separator. \n           This is the default."},{"t":"i5_time_fmt","d":"DB2_I5_FMT_ISO - The International Organization for \n           Standardization (ISO) time format hh.mm.ss is used. This is the default."},{"t":"i5_time_sep","d":"DB2_I5_SEP_COLON - A colon ( : ) is used as the time \n           separator. This is the default."},{"t":"i5_decimal_sep","d":"DB2_I5_SEP_PERIOD - A period ( . ) is used as \n           the decimal separator. This is the default."},{"t":"i5_libl","d":"A character value that indicates the library list that will be used for \n           resolving unqualified file references. Specify the library list \n           elements separated by blanks &#039;i5_libl&#039;=&gt;&quot;MYLIB YOURLIB ANYLIB&quot;."}]},"db2_conn_error":{"s":"","p":[{"t":"connection","d":"A connection resource associated with a connection that initially\n       succeeded, but which over time became invalid."}]},"db2_conn_errormsg":{"s":"","p":[{"t":"connection","d":"A connection resource associated with a connection that initially\n        succeeded, but which over time became invalid."}]},"db2_cursor_type":{"s":"","p":[{"t":"stmt","d":"A valid statement resource."}]},"db2_escape_string":{"s":"","p":[{"t":"string_literal","d":"The string that contains special characters that need to be modified. \n       Characters that are prepended with a backslash are \\x00, \n       \\n, \\r, \\, \n       &#039;, &quot; and \\x1a."}]},"db2_exec":{"s":"","p":[{"t":"connection","d":"A valid database connection resource variable as returned from\n       db2_connect() or db2_pconnect()."},{"t":"statement","d":"An SQL statement. The statement cannot contain any parameter markers."},{"t":"options","d":"An associative array containing statement options. You can use this\n       parameter to request a scrollable cursor on database servers that\n       support this functionality."}]},"db2_execute":{"s":"","p":[{"t":"stmt","d":"A prepared statement returned from db2_prepare()."},{"t":"parameters","d":"An array of input parameters matching any parameter markers contained\n       in the prepared statement."}]},"db2_fetch_array":{"s":"","p":[{"t":"stmt","d":"A valid stmt resource containing a result set."},{"t":"row_number","d":"Requests a specific 1-indexed row from the result set. Passing this\n       parameter results in a PHP warning if the result set uses a\n       forward-only cursor."}]},"db2_fetch_assoc":{"s":"","p":[{"t":"stmt","d":"A valid stmt resource containing a result set."},{"t":"row_number","d":"Requests a specific 1-indexed row from the result set. Passing this\n       parameter results in a PHP warning if the result set uses a\n       forward-only cursor."}]},"db2_fetch_both":{"s":"","p":[{"t":"stmt","d":"A valid stmt resource containing a result set."},{"t":"row_number","d":"Requests a specific 1-indexed row from the result set. Passing this\n       parameter results in a PHP warning if the result set uses a\n       forward-only cursor."}]},"db2_fetch_object":{"s":"","p":[{"t":"stmt","d":"A valid stmt resource containing a result set."},{"t":"row_number","d":"Requests a specific 1-indexed row from the result set. Passing this\n       parameter results in a PHP warning if the result set uses a\n       forward-only cursor."}]},"db2_fetch_row":{"s":"","p":[{"t":"stmt","d":"A valid stmt resource."},{"t":"row_number","d":"With scrollable cursors, you can request a specific row number in the\n       result set. Row numbering is 1-indexed."}]},"db2_field_display_size":{"s":"","p":[{"t":"stmt","d":"Specifies a statement resource containing a result set."},{"t":"column","d":"Specifies the column in the result set. This can either be an integer\n        representing the 0-indexed position of the column, or a string\n        containing the name of the column."}]},"db2_field_name":{"s":"","p":[{"t":"stmt","d":"Specifies a statement resource containing a result set."},{"t":"column","d":"Specifies the column in the result set. This can either be an integer\n        representing the 0-indexed position of the column, or a string\n        containing the name of the column."}]},"db2_field_num":{"s":"","p":[{"t":"stmt","d":"Specifies a statement resource containing a result set."},{"t":"column","d":"Specifies the column in the result set. This can either be an integer\n        representing the 0-indexed position of the column, or a string\n        containing the name of the column."}]},"db2_field_precision":{"s":"","p":[{"t":"stmt","d":"Specifies a statement resource containing a result set."},{"t":"column","d":"Specifies the column in the result set. This can either be an integer\n        representing the 0-indexed position of the column, or a string\n        containing the name of the column."}]},"db2_field_scale":{"s":"","p":[{"t":"stmt","d":"Specifies a statement resource containing a result set."},{"t":"column","d":"Specifies the column in the result set. This can either be an integer\n        representing the 0-indexed position of the column, or a string\n        containing the name of the column."}]},"db2_field_type":{"s":"","p":[{"t":"stmt","d":"Specifies a statement resource containing a result set."},{"t":"column","d":"Specifies the column in the result set. This can either be an integer\n        representing the 0-indexed position of the column, or a string\n        containing the name of the column."}]},"db2_field_width":{"s":"","p":[{"t":"stmt","d":"Specifies a statement resource containing a result set."},{"t":"column","d":"Specifies the column in the result set. This can either be an integer\n        representing the 0-indexed position of the column, or a string\n        containing the name of the column."}]},"db2_foreign_keys":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the tables. If schema\n       is NULL, db2_foreign_keys() matches the schema for\n       the current connection."},{"t":"table-name","d":"The name of the table."}]},"db2_free_result":{"s":"","p":[{"t":"stmt","d":"A valid statement resource."}]},"db2_free_stmt":{"s":"","p":[{"t":"stmt","d":"A valid statement resource."}]},"db2_get_option":{"s":"Retrieves an option value for a statement resource or a connection resource","p":[{"t":"resource","d":"A valid statement resource as returned from\n      db2_prepare() or a valid connection resource as\n      returned from db2_connect() or\n      db2_pconnect()."},{"t":"option","d":"A valid statement or connection options. The following new options are available \n      as of ibm_db2 version 1.6.0. They provide useful tracking information \n      that can be set during execution with db2_get_option().\n      Note: \n       \n        Prior versions of ibm_db2 do not support these new options."},{"t":"userid","d":"SQL_ATTR_INFO_USERID - A pointer to a null-terminated \n           character string used to identify the client user ID sent to the host \n           database server when using DB2 Connect.\n           Note: \n            \n             DB2 for z\/OS and OS\/390 servers support up to a length of 16 characters. \n             This user-id is not to be confused with the authentication user-id, it is for \n             identification purposes only and is not used for any authorization."},{"t":"acctstr","d":"SQL_ATTR_INFO_ACCTSTR - A pointer to a null-terminated \n           character string used to identify the client accounting string sent to the \n           host database server when using DB2 Connect.\n           Note: \n            \n             DB2 for z\/OS and OS\/390 servers support up to a length of 200 characters."},{"t":"applname","d":"SQL_ATTR_INFO_APPLNAME - A pointer to a null-terminated \n           character string used to identify the client application name sent to the \n           host database server when using DB2 Connect.\n           Note: \n            \n             DB2 for z\/OS and OS\/390 servers support up to a length of 32 characters."},{"t":"wrkstnname","d":"SQL_ATTR_INFO_WRKSTNNAME - A pointer to a null-terminated \n           character string used to identify the client workstation name sent to the \n           host database server when using DB2 Connect.\n           Note: \n            \n             DB2 for z\/OS and OS\/390 servers support up to a length of 18 characters."}]},"db2_last_insert_id":{"s":"","p":[{"t":"resource","d":"A valid connection resource as returned from db2_connect() \n       or db2_pconnect(). The value of this parameter cannot be a \n       statement resource or result set resource."}]},"db2_lob_read":{"s":"","p":[{"t":"stmt","d":"A valid stmt resource containing LOB data."},{"t":"colnum","d":"A valid column number in the result set of the stmt resource."},{"t":"length","d":"The size of the LOB data to be retrieved from the stmt resource."}]},"db2_next_result":{"s":"","p":[{"t":"stmt","d":"A prepared statement returned from db2_exec() or\n       db2_execute()."}]},"db2_num_fields":{"s":"","p":[{"t":"stmt","d":"A valid statement resource containing a result set."}]},"db2_num_rows":{"s":"","p":[{"t":"stmt","d":"A valid stmt resource containing a result set."}]},"db2_pclose":{"s":"Closes a persistent database connection","p":[{"t":"connection","d":"Specifies an active DB2 client connection."}]},"db2_pconnect":{"s":"","p":[{"t":"database","d":"The database alias in the DB2 client catalog."},{"t":"username","d":"The username with which you are connecting to the database."},{"t":"password","d":"The password with which you are connecting to the database."},{"t":"options","d":""},{"t":"autocommit","d":"Passing the DB2_AUTOCOMMIT_ON value turns\n           autocommit on for this connection handle."},{"t":"DB2_ATTR_CASE","d":"Passing the DB2_CASE_NATURAL value specifies\n           that column names are returned in natural case."},{"t":"CURSOR","d":"Passing the DB2_FORWARD_ONLY value specifies a\n           forward-only cursor for a statement resource. This is the default\n           cursor type and is supported on all database servers."},{"t":"trustedcontext","d":"Passing the DB2_TRUSTED_CONTEXT_ENABLE value turns trusted context \n           on for this connection handle. This parameter cannot be set using \n           db2_set_option()."}]},"db2_prepare":{"s":"","p":[{"t":"connection","d":"A valid database connection resource variable as returned from\n       db2_connect() or db2_pconnect()."},{"t":"statement","d":"An SQL statement, optionally containing one or more parameter markers.."},{"t":"options","d":"An associative array containing statement options. You can use this\n       parameter to request a scrollable cursor on database servers that\n       support this functionality."}]},"db2_primary_keys":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the tables. If schema\n       is NULL, db2_primary_keys() matches the schema for\n       the current connection."},{"t":"table-name","d":"The name of the table."}]},"db2_procedures":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the procedures. This parameter accepts a\n       search pattern containing _ and %\n       as wildcards."},{"t":"procedure","d":"The name of the procedure. This parameter accepts a\n       search pattern containing _ and %\n       as wildcards."}]},"db2_procedure_columns":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the procedures. This parameter accepts a\n       search pattern containing _ and %\n       as wildcards."},{"t":"procedure","d":"The name of the procedure. This parameter accepts a\n       search pattern containing _ and %\n       as wildcards."},{"t":"parameter","d":"The name of the parameter. This parameter accepts a search pattern\n       containing _ and % as wildcards.\n       If this parameter is NULL, all parameters for the specified stored\n       procedures are returned."}]},"db2_result":{"s":"","p":[{"t":"stmt","d":"A valid stmt resource."},{"t":"column","d":"Either an integer mapping to the 0-indexed field in the result set, or\n        a string matching the name of the column."}]},"db2_rollback":{"s":"","p":[{"t":"connection","d":"A valid database connection resource variable as returned from\n       db2_connect() or db2_pconnect()."}]},"db2_server_info":{"s":"Returns an object with properties that describe the DB2 database server","p":[{"t":"connection","d":"Specifies an active DB2 client connection."}]},"db2_set_option":{"s":"Set options for connection or statement resources","p":[{"t":"resource","d":"A valid statement resource as returned from\n             db2_prepare() or a valid connection resource as\n             returned from db2_connect() or\n             db2_pconnect()."},{"t":"options","d":""},{"t":"autocommit","d":"Passing DB2_AUTOCOMMIT_ON turns\n                     autocommit on for the specified connection resource."},{"t":"cursor","d":"Passing DB2_FORWARD_ONLY specifies a\n                     forward-only cursor for a statement resource. This is the\n                     default cursor type, and is supported by all database\n                     servers."},{"t":"binmode","d":"Passing DB2_BINARY specifies that\n                     binary data will be returned as is. This is the default\n                     mode. This is the equivalent of setting\n                     ibm_db2.binmode=1 in php.ini."},{"t":"db2_attr_case","d":"Passing DB2_CASE_LOWER specifies that\n                     column names of the result set are returned in lower case."},{"t":"deferred_prepare","d":"Passing DB2_DEFERRED_PREPARE_ON turns deferred \n                   prepare on for the specified statement resource."},{"t":"i5_fetch_only","d":"DB2_I5_FETCH_ON - Cursors are read-only \n                     and cannot be used for positioned updates or deletes. This \n                     is the default unless SQL_ATTR_FOR_FETCH_ONLY \n                     environment has been set to SQL_FALSE."},{"t":"rowcount","d":"DB2_ROWCOUNT_PREFETCH_ON - Client can request \n                     the full row count prior to fetching, which means that \n                     db2_num_rows() returns the number of rows selected \n                     even when a ROLLFORWARD_ONLY cursor is used."},{"t":"trusted_user","d":"To switch the user to a trusted user, pass the User ID (String) \n                     of the trusted user as the value of this key. This option can \n                     be set on a connection resource only. To use this option, trusted\n                     context must be enabled on the connection resource."},{"t":"trusted_password","d":"The password (String) that corresponds to the user specified\n                     by the trusted_user key."},{"t":"userid","d":"SQL_ATTR_INFO_USERID - A pointer to a null-terminated \n                 character string used to identify the client user ID sent to the host \n                 database server when using DB2 Connect.\n                 Note: \n                  \n                   DB2 for z\/OS and OS\/390 servers support up to a length of 16 characters. \n                   This user-id is not to be confused with the authentication user-id, it is for \n                   identification purposes only and is not used for any authorization."},{"t":"acctstr","d":"SQL_ATTR_INFO_ACCTSTR - A pointer to a null-terminated \n                 character string used to identify the client accounting string sent to the \n                 host database server when using DB2 Connect.\n                 Note: \n                  \n                   DB2 for z\/OS and OS\/390 servers support up to a length of 200 characters."},{"t":"applname","d":"SQL_ATTR_INFO_APPLNAME - A pointer to a null-terminated \n                 character string used to identify the client application name sent to the \n                 host database server when using DB2 Connect.\n                 Note: \n                  \n                   DB2 for z\/OS and OS\/390 servers support up to a length of 32 characters."},{"t":"wrkstnname","d":"SQL_ATTR_INFO_WRKSTNNAME - A pointer to a null-terminated \n                 character string used to identify the client workstation name sent to the \n                 host database server when using DB2 Connect.\n                 Note: \n                  \n                   DB2 for z\/OS and OS\/390 servers support up to a length of 18 characters."},{"t":"type","d":"An integer value that specifies the type of resource that was\n             passed into the function. The type of resource and this value\n             must correspond."}]},"db2_special_columns":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the tables."},{"t":"table_name","d":"The name of the table."},{"t":"scope","d":"Integer value representing the minimum duration for which the\n       unique row identifier is valid. This can be one of the following\n       values:\n       \n        \n         \n          \n           Integer value\n           SQL constant\n           Description\n          \n\n         \n\n         \n          \n           0\n           SQL_SCOPE_CURROW\n           Row identifier is valid only while the cursor is positioned\n           on the row.\n          \n\n          \n           1\n           SQL_SCOPE_TRANSACTION\n           Row identifier is valid for the duration of the\n            transaction.\n          \n\n          \n           2\n           SQL_SCOPE_SESSION\n           Row identifier is valid for the duration of the\n            connection."}]},"db2_statistics":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema that contains the targeted table. If this parameter is\n       NULL, the statistics and indexes are returned for the schema of the\n       current user."},{"t":"table_name","d":"The name of the table."},{"t":"unique","d":""},{"t":"0","d":"Return only the information for unique indexes on the table."},{"t":"1","d":"Return the information for all indexes on the table."}]},"db2_stmt_error":{"s":"","p":[{"t":"stmt","d":"A valid statement resource."}]},"db2_stmt_errormsg":{"s":"","p":[{"t":"stmt","d":"A valid statement resource."}]},"db2_tables":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the tables. This parameter accepts a\n       search pattern containing _ and %\n       as wildcards."},{"t":"table-name","d":"The name of the table.  This parameter accepts a search pattern\n       containing _ and % as wildcards."},{"t":"table-type","d":"A list of comma-delimited table type identifiers. To match all table\n       types, pass NULL or an empty string. Valid table type identifiers\n       include: ALIAS, HIERARCHY TABLE, INOPERATIVE VIEW, NICKNAME,\n       MATERIALIZED QUERY TABLE, SYSTEM TABLE, TABLE, TYPED TABLE, TYPED VIEW,\n       and VIEW."}]},"db2_table_privileges":{"s":"","p":[{"t":"connection","d":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"t":"qualifier","d":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For\n       other databases, pass NULL or an empty string."},{"t":"schema","d":"The schema which contains the tables. This parameter accepts a\n       search pattern containing _ and %\n       as wildcards."},{"t":"table_name","d":"The name of the table. This parameter accepts a search pattern\n       containing _ and % as wildcards."}]},"dbase_add_record":{"s":"Adds a record to a database","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."},{"t":"record","d":"An indexed array of data. The number of items must be equal to the number of \n       fields in the database, otherwise dbase_add_record()\n       will fail."}]},"dbase_close":{"s":"Closes a database","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."}]},"dbase_create":{"s":"Creates a database","p":[{"t":"filename","d":"The name of the database. It can be a relative or absolute path to\n       the file where dBase will store your data."},{"t":"fields","d":"An array of arrays, each array describing the format of one field of the\n       database. Each field consists of a name, a character indicating the field\n       type, and optionally, a length, and a precision."}]},"dbase_delete_record":{"s":"Deletes a record from a database","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."},{"t":"record_number","d":"An integer which spans from 1 to the number of records in the database\n       (as returned by dbase_numrecords())."}]},"dbase_get_header_info":{"s":"Gets the header info of a database","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."}]},"dbase_get_record":{"s":"","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."},{"t":"record_number","d":"The index of the record."}]},"dbase_get_record_with_names":{"s":"","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."},{"t":"record_number","d":"The index of the record."}]},"dbase_numfields":{"s":"Gets the number of fields of a database","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."}]},"dbase_numrecords":{"s":"Gets the number of records in a database","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."}]},"dbase_open":{"s":"Opens a database","p":[{"t":"filename","d":"The name of the database. It can be a relative or absolute path to\n       the file where dBase will store your data."},{"t":"mode","d":"An integer which correspond to those for the open() \n       system call (Typically 0 means read-only, 1 means write-only, and 2 \n       means read and write)."}]},"dbase_pack":{"s":"Packs a database","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."}]},"dbase_replace_record":{"s":"Replaces a record in a database","p":[{"t":"dbase_identifier","d":"The database link identifier, returned by dbase_open()\n       or dbase_create()."},{"t":"record","d":"An indexed array of data. The number of items must be equal to the\n       number of fields in the database, otherwise\n       dbase_replace_record() will fail."},{"t":"record_number","d":"An integer which spans from 1 to the number of records in the database\n       (as returned by dbase_numrecords())."}]},"dba_close":{"s":"Close a DBA database","p":[{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_delete":{"s":"Delete DBA entry specified by key","p":[{"t":"key","d":"The key of the entry which is deleted."},{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_exists":{"s":"Check whether key exists","p":[{"t":"key","d":"The key the check is performed for."},{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_fetch":{"s":"Fetch data specified by key","p":[{"t":"key","d":"The key the data is specified by."},{"t":"skip","d":"The number of key-value pairs to ignore when using cdb databases. \n       This value is ignored for all other databases which do not support\n       multiple keys with the same name."},{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_firstkey":{"s":"Fetch first key","p":[{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_handlers":{"s":"List all the handlers available","p":[{"t":"full_info","d":"Turns on\/off full information display in the result."}]},"dba_insert":{"s":"Insert entry","p":[{"t":"key","d":"The key of the entry to be inserted. If this key already exist in the \n       database, this function will fail. Use dba_replace()\n       if you need to replace an existent key."},{"t":"value","d":"The value to be inserted."},{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_key_split":{"s":"","p":[{"t":"key","d":"The key in string representation."}]},"dba_list":{"s":"List all open database files","p":null},"dba_nextkey":{"s":"Fetch next key","p":[{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_open":{"s":"Open database","p":[{"t":"path","d":"Commonly a regular path in your filesystem."},{"t":"mode","d":"It is r for read access, w for\n       read\/write access to an already existing database, c\n       for read\/write access and database creation if it doesn&#039;t currently exist,\n       and n for create, truncate and read\/write access.\n       The database is created in BTree mode, other modes (like Hash or Queue)\n       are not supported."},{"t":"handler","d":"The name of the handler which\n       shall be used for accessing path. It is passed \n       all optional parameters given to dba_open() and \n       can act on behalf of them."}]},"dba_optimize":{"s":"Optimize database","p":[{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_popen":{"s":"Open database persistently","p":[{"t":"path","d":"Commonly a regular path in your filesystem."},{"t":"mode","d":"It is r for read access, w for\n       read\/write access to an already existing database, c\n       for read\/write access and database creation if it doesn&#039;t currently exist,\n       and n for create, truncate and read\/write access."},{"t":"handler","d":"The name of the handler which\n       shall be used for accessing path. It is passed \n       all optional parameters given to dba_popen() and \n       can act on behalf of them."}]},"dba_replace":{"s":"Replace or insert entry","p":[{"t":"key","d":"The key of the entry to be replaced."},{"t":"value","d":"The value to be replaced."},{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dba_sync":{"s":"Synchronize database","p":[{"t":"handle","d":"The database handler, returned by dba_open() or\n       dba_popen()."}]},"dbplus_add":{"s":"Add a tuple to a relation","p":[{"t":"relation","d":""},{"t":"tuple","d":"An array of attribute\/value pairs to be inserted into the given\n       relation."}]},"dbplus_aql":{"s":"Perform AQL query","p":[{"t":"query","d":"The AQL query to be executed. Further information on the AQL (Algebraic\n       Query Language) is provided in the original db++ manual."},{"t":"server","d":""},{"t":"dbpath","d":""}]},"dbplus_chdir":{"s":"Get\/Set database virtual current directory","p":[{"t":"newdir","d":"The new directory for relation files. You can omit this parameter to\n       query the current working directory."}]},"dbplus_close":{"s":"Close a relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_curr":{"s":"Get current tuple from relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":"The data will be passed back in this parameter, as an associative\n       array."}]},"dbplus_errcode":{"s":"Get error string for given errorcode or last error","p":[{"t":"errno","d":"The error code. If not provided, the result code of the last db++\n       operation is assumed."}]},"dbplus_errno":{"s":"Get error code for last operation","p":null},"dbplus_find":{"s":"Set a constraint on a relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"constraints","d":"Constraints are triplets of strings containing of a domain name,\n       a comparison operator and a comparison value. The\n       constraints parameter array may consist of\n       a collection of string arrays, each of which contains a domain, an\n       operator and a value, or of a single string array containing a\n       multiple of three elements."},{"t":"tuple","d":""}]},"dbplus_first":{"s":"Get first tuple from relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":""}]},"dbplus_flush":{"s":"Flush all changes made on a relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_freealllocks":{"s":"Free all locks held by this client","p":null},"dbplus_freelock":{"s":"Release write lock on tuple","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":""}]},"dbplus_freerlocks":{"s":"Free all tuple locks on given relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_getlock":{"s":"Get a write lock on a tuple","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":""}]},"dbplus_getunique":{"s":"Get an id number unique to a relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"uniqueid","d":""}]},"dbplus_info":{"s":"Get information about a relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"key","d":""},{"t":"result","d":""}]},"dbplus_last":{"s":"Get last tuple from relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":""}]},"dbplus_lockrel":{"s":"Request write lock on relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_next":{"s":"Get next tuple from relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":""}]},"dbplus_open":{"s":"Open relation file","p":[{"t":"name","d":"Can be either a file name or a relative or absolute path name. This\n       will be mapped in any case to an absolute relation file path on a\n       specific host machine and server."}]},"dbplus_prev":{"s":"Get previous tuple from relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":""}]},"dbplus_rchperm":{"s":"Change relation permissions","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"mask","d":""},{"t":"user","d":""},{"t":"group","d":""}]},"dbplus_rcreate":{"s":"Creates a new DB++ relation","p":[{"t":"name","d":""},{"t":"domlist","d":"A combination of domains. May be passed as a single domain name string\n       or as an array of domain names."},{"t":"overwrite","d":""}]},"dbplus_rcrtexact":{"s":"Creates an exact but empty copy of a relation including indices","p":[{"t":"name","d":""},{"t":"relation","d":"The copied relation, opened by dbplus_open()."},{"t":"overwrite","d":"An existing relation by the same name will only\n       be overwritten if this parameter is set to TRUE and no other process\n       is currently using the relation."}]},"dbplus_rcrtlike":{"s":"Creates an empty copy of a relation with default indices","p":[{"t":"name","d":""},{"t":"relation","d":"The copied relation, opened by dbplus_open()."},{"t":"overwrite","d":"An existing relation by the same name will only\n       be overwritten if this parameter is set to TRUE and no other process\n       is currently using the relation."}]},"dbplus_resolve":{"s":"Resolve host information for relation","p":[{"t":"relation_name","d":"The relation name."}]},"dbplus_restorepos":{"s":"Restore position","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":""}]},"dbplus_rkeys":{"s":"Specify new primary key for a relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"domlist","d":"A combination of domains. May be passed as a single domain name\n        string or as an array of domain names."}]},"dbplus_ropen":{"s":"Open relation file local","p":[{"t":"name","d":""}]},"dbplus_rquery":{"s":"Perform local (raw) AQL query","p":[{"t":"query","d":""},{"t":"dbpath","d":""}]},"dbplus_rrename":{"s":"Rename a relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"name","d":""}]},"dbplus_rsecindex":{"s":"Create a new secondary index for a relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"domlist","d":"A combination of domains. May be passed as a single domain name\n       string or as an array of domain names."},{"t":"type","d":""}]},"dbplus_runlink":{"s":"Remove relation from filesystem","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_rzap":{"s":"Remove all tuples from relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_savepos":{"s":"Save position","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_setindex":{"s":"Set index","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"idx_name","d":""}]},"dbplus_setindexbynumber":{"s":"Set index by number","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"idx_number","d":""}]},"dbplus_sql":{"s":"Perform SQL query","p":[{"t":"query","d":""},{"t":"server","d":""},{"t":"dbpath","d":""}]},"dbplus_tcl":{"s":"Execute TCL code on server side","p":[{"t":"sid","d":""},{"t":"script","d":""}]},"dbplus_tremove":{"s":"Remove tuple and return new current tuple","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"tuple","d":""},{"t":"current","d":""}]},"dbplus_undo":{"s":"Undo","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_undoprepare":{"s":"Prepare undo","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_unlockrel":{"s":"Give up write lock on relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_unselect":{"s":"Remove a constraint from relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_update":{"s":"Update specified tuple in relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."},{"t":"old","d":"The old tuple."},{"t":"new","d":"The new tuple."}]},"dbplus_xlockrel":{"s":"Request exclusive lock on relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbplus_xunlockrel":{"s":"Free exclusive lock on relation","p":[{"t":"relation","d":"A relation opened by dbplus_open()."}]},"dbx_close":{"s":"Close an open connection\/database","p":[{"t":"link_identifier","d":"The DBX link object to close."}]},"dbx_compare":{"s":"Compare two rows for sorting purposes","p":[{"t":"row_a","d":"First row"},{"t":"row_b","d":"Second row"},{"t":"column_key","d":"The compared column"},{"t":"flags","d":"The flags can be set to specify comparison\n       direction: \n       \n        \n         \n          DBX_CMP_ASC - ascending order\n         \n        \n        \n         \n          DBX_CMP_DESC - descending order\n         \n        \n       \n       and the preferred comparison type:\n       \n        \n         \n          DBX_CMP_NATIVE - no type conversion\n         \n        \n        \n         \n          DBX_CMP_TEXT - compare items as strings\n         \n        \n        \n         \n          DBX_CMP_NUMBER - compare items numerically\n         \n        \n       \n       One of the direction and one of the type constant can be combined with\n       bitwise OR operator (|)."}]},"dbx_connect":{"s":"Open a connection\/database","p":[{"t":"module","d":"The module parameter can be either a string or a\n       constant, though the latter form is preferred. The possible values are \n       given below, but keep in mind that they only work if the module is \n       actually loaded."},{"t":"host","d":"The SQL server host"},{"t":"database","d":"The database name"},{"t":"username","d":"The username"},{"t":"password","d":"The password"},{"t":"persistent","d":"The persistent parameter can be set to \n       DBX_PERSISTENT, if so, a persistent connection\n       will be created."}]},"dbx_error":{"s":"","p":[{"t":"link_identifier","d":"The DBX link object returned by dbx_connect()"}]},"dbx_escape_string":{"s":"","p":[{"t":"link_identifier","d":"The DBX link object returned by dbx_connect()"},{"t":"text","d":"The string to escape."}]},"dbx_fetch_row":{"s":"","p":[{"t":"result_identifier","d":"A result set returned by dbx_query()."}]},"dbx_query":{"s":"Send a query and fetch all results (if any)","p":[{"t":"link_identifier","d":"The DBX link object returned by dbx_connect()"},{"t":"sql_statement","d":"SQL statement."},{"t":"flags","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"flags","d":""}]},"dbx_sort":{"s":"","p":[{"t":"result","d":"A result set returned by dbx_query()."},{"t":"user_compare_function","d":"The user-defined comparison function. It must accept two arguments and\n       return an integer less than, equal to, or greater than zero if the \n       first argument is considered to be respectively less than, equal to, \n       or greater than the second."}]},"dcgettext":{"s":"Overrides the domain for a single lookup","p":[{"t":"domain","d":"The domain"},{"t":"message","d":"The message"},{"t":"category","d":"The category"}]},"dcngettext":{"s":"Plural version of dcgettext","p":[{"t":"domain","d":"The domain"},{"t":"msgid1","d":""},{"t":"msgid2","d":""},{"t":"n","d":""},{"t":"category","d":""}]},"debug_backtrace":{"s":"Generates a backtrace","p":[{"t":"options","d":"As of 5.3.6, this parameter is a bitmask for the following options:\n       \n        debug_backtrace() options\n        \n         \n          \n           DEBUG_BACKTRACE_PROVIDE_OBJECT\n           \n            Whether or not to populate the &quot;object&quot; index.\n           \n          \n\n          \n           DEBUG_BACKTRACE_IGNORE_ARGS\n           \n            Whether or not to omit the &quot;args&quot; index, and thus all the function\/method arguments,\n            to save memory.\n           \n          \n\n         \n        \n       \n\n       Before 5.3.6, the only values recognized are TRUE or FALSE, which are the same as \n       setting or not setting the DEBUG_BACKTRACE_PROVIDE_OBJECT option respectively."},{"t":"limit","d":"As of 5.4.0, this parameter can be used to limit the number of stack frames returned.\n       By default (limit=0) it returns all stack frames."}]},"debug_print_backtrace":{"s":"","p":[{"t":"options","d":"As of 5.3.6, this parameter is a bitmask for the following options:\n       \n        debug_print_backtrace() options\n        \n         \n          \n           DEBUG_BACKTRACE_IGNORE_ARGS\n           \n            Whether or not to omit the &quot;args&quot; index, and thus all the function\/method arguments,\n            to save memory."},{"t":"limit","d":"As of 5.4.0, this parameter can be used to limit the number of stack frames printed.\n       By default (limit=0) it prints all stack frames."}]},"decbin":{"s":"Decimal to binary","p":[{"t":"number","d":"Decimal value to convert"}]},"dechex":{"s":"Decimal to hexadecimal","p":[{"t":"number","d":"The decimal value to convert."}]},"decoct":{"s":"Decimal to octal","p":[{"t":"number","d":"Decimal value to convert"}]},"define":{"s":"Defines a named constant","p":[{"t":"name","d":"The name of the constant."},{"t":"value","d":"The value of the constant; only scalar and null values are allowed. \n       Scalar values are integer, \n       float, string or boolean values. It is \n       possible to define resource constants, however it is not recommended \n       and may cause unpredictable behavior."},{"t":"case_insensitive","d":"If set to TRUE, the constant will be defined case-insensitive. \n       The default behavior is case-sensitive; i.e. \n       CONSTANT and Constant represent\n       different values."}]},"defined":{"s":"Checks whether a given named constant exists","p":[{"t":"name","d":"The constant name."}]},"define_syslog_variables":{"s":"Initializes all syslog related variables","p":null},"deg2rad":{"s":"","p":[{"t":"number","d":"Angular value in degrees"}]},"delete":{"s":"See unlink()","p":null},"dgettext":{"s":"Override the current domain","p":[{"t":"domain","d":"The domain"},{"t":"message","d":"The message"}]},"die":{"s":"Equivalent to exit","p":null},"dio_close":{"s":"Closes the file descriptor given by fd","p":[{"t":"fd","d":"The file descriptor returned by dio_open()."}]},"dio_fcntl":{"s":"Performs a c library fcntl on fd","p":[{"t":"fd","d":"The file descriptor returned by dio_open()."},{"t":"cmd","d":"Can be one of the following operations:\n       \n        \n         \n          F_SETLK - Lock is set or cleared. If the lock\n          is held by someone else dio_fcntl() returns\n          -1."},{"t":"args","d":"args is an associative array, when\n       cmd is F_SETLK or\n       F_SETLLW, with the following keys:\n       \n        \n         \n          start - offset where lock begins"}]},"dio_open":{"s":"","p":[{"t":"filename","d":"The pathname of the file to open."},{"t":"flags","d":"The flags parameter is a bitwise-ORed\n       value comprising flags from the following list. This value\n       must include one of\n       O_RDONLY, O_WRONLY,\n       or O_RDWR. Additionally, it may include\n       any combination of the other flags from this list.\n       \n        \n         \n          O_RDONLY - opens the file for read access."},{"t":"mode","d":"If flags contains\n       O_CREAT, mode will\n       set the permissions of the file (creation\n       permissions). Mode is required for\n       correct operation when O_CREAT is\n       specified in mode and is ignored\n       otherwise."}]},"dio_read":{"s":"Reads bytes from a file descriptor","p":[{"t":"fd","d":"The file descriptor returned by dio_open()."},{"t":"len","d":"The number of bytes to read. If not specified,\n       dio_read() reads 1K sized block."}]},"dio_seek":{"s":"Seeks to pos on fd from whence","p":[{"t":"fd","d":"The file descriptor returned by dio_open()."},{"t":"pos","d":"The new position."},{"t":"whence","d":"Specifies how the position pos should be \n       interpreted:\n       \n        \n         \n          SEEK_SET (default) - specifies that \n          pos is specified from the beginning of the \n          file."}]},"dio_stat":{"s":"","p":[{"t":"fd","d":"The file descriptor returned by dio_open()."}]},"dio_tcsetattr":{"s":"","p":[{"t":"fd","d":"The file descriptor returned by dio_open()."},{"t":"options","d":"The currently available options are: \n       \n        \n         \n          &#039;baud&#039; - baud rate of the port - can be 38400,19200,9600,4800,2400,1800,\n          1200,600,300,200,150,134,110,75 or 50, default value is 9600."}]},"dio_truncate":{"s":"","p":[{"t":"fd","d":"The file descriptor returned by dio_open()."},{"t":"offset","d":"The offset in bytes."}]},"dio_write":{"s":"","p":[{"t":"fd","d":"The file descriptor returned by dio_open()."},{"t":"data","d":"The written data."},{"t":"len","d":"The length of data to write in bytes. If not specified, the \n       function writes all the data to the specified file."}]},"dir":{"s":"Return an instance of the Directory class","p":[{"t":"directory","d":"Directory to open"},{"t":"context","d":"Note: Context support was added\nwith PHP 5.0.0. For a description of contexts, refer to\nStreams."}]},"dirname":{"s":"Returns parent directory&#039;s path","p":[{"t":"path","d":"A path."}]},"diskfreespace":{"s":"Alias of disk_free_space()","p":null},"disk_free_space":{"s":"Returns available space on filesystem or disk partition","p":[{"t":"directory","d":"A directory of the filesystem or disk partition."}]},"disk_total_space":{"s":"Returns the total size of a filesystem or disk partition","p":[{"t":"directory","d":"A directory of the filesystem or disk partition."}]},"dl":{"s":"Loads a PHP extension at runtime","p":[{"t":"library","d":"This parameter is only the filename of the\n       extension to load which also depends on your platform. For example,\n       the sockets extension (if compiled\n       as a shared module, not the default!) would be called \n       sockets.so on Unix platforms whereas it is called\n       php_sockets.dll on the Windows platform."}]},"dngettext":{"s":"Plural version of dgettext","p":[{"t":"domain","d":"The domain"},{"t":"msgid1","d":""},{"t":"msgid2","d":""},{"t":"n","d":""}]},"dns_check_record":{"s":"Alias of checkdnsrr()","p":null},"dns_get_mx":{"s":"Alias of getmxrr()","p":null},"dns_get_record":{"s":"Fetch DNS Resource Records associated with a hostname","p":[{"t":"hostname","d":"hostname should be a valid DNS hostname such\n       as &quot;www.example.com&quot;. Reverse lookups can be generated\n       using in-addr.arpa notation, but\n       gethostbyaddr() is more suitable for\n       the majority of reverse lookups."},{"t":"type","d":"By default, dns_get_record() will search for any\n       resource records associated with hostname. \n       To limit the query, specify the optional type\n       parameter. May be any one of the following:\n       DNS_A, DNS_CNAME,\n       DNS_HINFO, DNS_MX,\n       DNS_NS, DNS_PTR,\n       DNS_SOA, DNS_TXT,\n       DNS_AAAA, DNS_SRV,\n       DNS_NAPTR, DNS_A6,\n       DNS_ALL or DNS_ANY."},{"t":"authns","d":"Passed by reference and, if given, will be populated with Resource\n       Records for the Authoritative Name Servers."},{"t":"addtl","d":"Passed by reference and, if given, will be populated with any\n       Additional Records."},{"t":"raw","d":"In case of raw mode, we query only the requestd type instead of looping\n       type by type before going with the additional info stuff."}]},"each":{"s":"Return the current key and value pair from an array and advance the array cursor","p":[{"t":"array","d":"The input array."}]},"easter_date":{"s":"Get Unix timestamp for midnight on Easter of a given year","p":[{"t":"year","d":"The year as a number between 1970 an 2037"}]},"easter_days":{"s":"Get number of days after March 21 on which Easter falls for a given year","p":[{"t":"year","d":"The year as a positive number"},{"t":"method","d":"Allows to calculate easter dates based\n       on the Gregorian calendar during the years 1582 - 1752 when set to\n       CAL_EASTER_ROMAN. See the calendar constants for more valid\n       constants."}]},"echo":{"s":"Output one or more strings","p":[{"t":"arg1","d":"The parameter to output."},{"t":"...","d":""}]},"eio_busy":{"s":"","p":[{"t":"delay","d":"Delay in seconds"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":"This callback is called when all the group requests are done."},{"t":"data","d":"Arbitrary variable passed to callback."}]},"eio_cancel":{"s":"Cancels a request","p":[{"t":"req","d":"The request resource"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_chmod":{"s":"Change file\/direcrory permissions.","p":[{"t":"path","d":"Path to the target file or directory\n     WarningAvoid relative\npaths"}]},"eio_chown":{"s":"Change file\/direcrory permissions.","p":[{"t":"path","d":"Path to file or directory.\n     WarningAvoid relative\npaths"}]},"eio_close":{"s":"Close file","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_custom":{"s":"Execute custom request like any other eio_* call.","p":[{"t":"execute","d":""}]},"eio_dup2":{"s":"Duplicate a file descriptor","p":[{"t":"fd","d":"Source stream, Socket resource, or numeric file descriptor"},{"t":"fd2","d":"Target stream, Socket resource, or numeric file descriptor"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_event_loop":{"s":"Polls libeio until all requests proceeded","p":null},"eio_fallocate":{"s":"","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor, e.g. returned by eio_open()."},{"t":"mode","d":"Currently only one flag is supported for mode:\n     EIO_FALLOC_FL_KEEP_SIZE (the same as POSIX constant\n       FALLOC_FL_KEEP_SIZE)."},{"t":"offset","d":"Specifies start of the byte range."},{"t":"length","d":"Specifies length the byte range."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_fchmod":{"s":"Change file permissions.","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor, e.g. returned by eio_open()."},{"t":"mode","d":"The new permissions. E.g. 0644."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_fchown":{"s":"Change file ownership","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor."},{"t":"uid","d":"User ID. Is ignored when equal to -1."},{"t":"gid","d":"Group ID. Is ignored when equal to -1."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_fdatasync":{"s":"Synchronize a file&#039;s in-core state with storage device.","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor, e.g. returned by eio_open()."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_fstat":{"s":"Get file status","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_fstatvfs":{"s":"Get file system statistics","p":[{"t":"fd","d":"A file descriptor of a file within the mounted file system."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_fsync":{"s":"Synchronize a file&#039;s in-core state with storage device","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_ftruncate":{"s":"Truncate a file","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor."},{"t":"offset","d":"Offset from beginning of the file"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_futime":{"s":"Change file last access and modification times","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor, e.g. returned by eio_open()"},{"t":"atime","d":"Access time"},{"t":"mtime","d":"Modification time"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_get_event_stream":{"s":"Get stream representing a variable used in internal communications with libeio.","p":null},"eio_get_last_error":{"s":"Returns string describing the last error associated with a request resource","p":[{"t":"req","d":"The request resource"}]},"eio_grp":{"s":"Createsa request group.","p":[{"t":"callback","d":""}]},"eio_grp_add":{"s":"Adds a request to the request group.","p":[{"t":"grp","d":"The request group resource returned by eio_grp()"},{"t":"req","d":"The request resource"}]},"eio_grp_cancel":{"s":"Cancels a request group","p":[{"t":"grp","d":"The request group resource returned by eio_grp()."}]},"eio_grp_limit":{"s":"Set group limit","p":[{"t":"grp","d":"The request group resource."},{"t":"limit","d":"Number of requests in the group."}]},"eio_init":{"s":"(Re-)initialize Eio","p":null},"eio_link":{"s":"Create a hardlink for file","p":[{"t":"path","d":"Source file path."},{"t":"new_path","d":"Target file path."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_lstat":{"s":"Get file status","p":[{"t":"path","d":"The file path"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_mkdir":{"s":"Create directory","p":[{"t":"path","d":"Path for the new directory."},{"t":"mode","d":"Access mode, e.g. 0755"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_mknod":{"s":"Create a special or ordinary file.","p":[{"t":"path","d":"Path for the new node(file)."},{"t":"mode","d":"Specifies both the permissions to use and the type of node to be\n      created. It should be a combination (using bitwise OR) of one of the\n      file types listed below and the permissions for the new node(e.g. 0640).\n\n      Possible file types are: EIO_S_IFREG(regular file),\n      EIO_S_IFCHR(character file),\n      EIO_S_IFBLK(block special file),\n      EIO_S_IFIFO(FIFO - named pipe) and\n      EIO_S_IFSOCK(UNIX domain socket).\n\n      To specify permissions EIO_S_I* constants could be\n      used."},{"t":"dev","d":"If  the  file type is EIO_S_IFCHR or\n     EIO_S_IFBLK then dev specifies the major and minor\n     numbers of the newly created device special file. Otherwise\n     dev ignored. See mknod(2) man page for\n     details."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_nop":{"s":"Does nothing, except go through the whole request cycle.","p":[{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_npending":{"s":"Returns number of finished, but unhandled requests","p":null},"eio_nready":{"s":"Returns number of not-yet handled requests","p":null},"eio_nreqs":{"s":"Returns number of requests to be processed","p":null},"eio_nthreads":{"s":"Returns number of threads currently in use","p":null},"eio_open":{"s":"Opens a file","p":[{"t":"path","d":"Path of the file to be opened.\n     Warning\n     In some SAPIs(e.g. PHP-FPM) it could fail, if you\n     don&#039;t specify full path."}]},"eio_poll":{"s":"Can be to be called whenever there are pending requests that need finishing.","p":null},"eio_read":{"s":"Read from a file descriptor at given offset.","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor"},{"t":"length","d":"Maximum number of bytes to read."},{"t":"offset","d":"Offset within the file."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_readahead":{"s":"Perform file readahead into page cache","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor"},{"t":"offset","d":"Starting point from which data is to be read."},{"t":"length","d":"Number of bytes to be read."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_readdir":{"s":"Reads through a whole directory","p":[{"t":"path","d":"Directory path."},{"t":"flags","d":"Combination of EIO_READDIR_* constants."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_readlink":{"s":"Read value of a symbolic link.","p":[{"t":"path","d":"Source symbolic link path"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_realpath":{"s":"Get the canonicalized absolute pathname.","p":[{"t":"path","d":"Short pathname"},{"t":"pri","d":""},{"t":"callback","d":""},{"t":"data","d":""}]},"eio_rename":{"s":"Change the name or location of a file.","p":[{"t":"path","d":"Source path"},{"t":"new_path","d":"Target path"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_rmdir":{"s":"Remove a directory","p":[{"t":"path","d":"Directory path"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_seek":{"s":"Repositions the offset of the open file associated with the fd argument to the argument offset according to the directive whence","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor"},{"t":"offset","d":"Starting point from which data is to be read."},{"t":"length","d":"Number of bytes to be read."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_sendfile":{"s":"Transfer data between file descriptors","p":[{"t":"out_fd","d":"Output stream, Socket resource, or file descriptor. Should be opened for writing."},{"t":"in_fd","d":"Input stream, Socket resource, or file descriptor. Should be opened for reading."},{"t":"offset","d":"Offset within the source file."},{"t":"length","d":"Number of bytes to copy."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_set_max_idle":{"s":"Set maximum number of idle threads.","p":[{"t":"nthreads","d":"Number of idle threads."}]},"eio_set_max_parallel":{"s":"Set maximum parallel threads","p":[{"t":"nthreads","d":"Number of parallel threads"}]},"eio_set_max_poll_reqs":{"s":"Set maximum number of requests processed in a poll.","p":[{"t":"nreqs","d":"Number of requests"}]},"eio_set_max_poll_time":{"s":"Set maximum poll time","p":[{"t":"nseconds","d":"Number of seconds"}]},"eio_set_min_parallel":{"s":"Set minimum parallel thread number","p":[{"t":"nthreads","d":"Number of parallel threads."}]},"eio_stat":{"s":"Get file status","p":[{"t":"path","d":"The file path"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_statvfs":{"s":"Get file system statistics","p":[{"t":"path","d":"Pathname of any file within the mounted file system"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_symlink":{"s":"Create a symbolic link","p":[{"t":"path","d":"Source path"},{"t":"new_path","d":"Target path"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_sync":{"s":"Commit buffer cache to disk","p":null},"eio_syncfs":{"s":"Calls Linux&#039; syncfs syscall, if available","p":[{"t":"fd","d":"File descriptor"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_sync_file_range":{"s":"Sync a file segment with disk","p":[{"t":"fd","d":"File descriptor"},{"t":"offset","d":"The starting byte of the file range to be synchronized"},{"t":"nbytes","d":"Specifies the length of the range to be synchronized, in bytes. If\n     nbytes is zero, then all bytes from offset through\n     to the end of file are synchronized."},{"t":"flags","d":"A bit-mask. Can include any of the following values:\n     EIO_SYNC_FILE_RANGE_WAIT_BEFORE,\n     EIO_SYNC_FILE_RANGE_WRITE,\n     EIO_SYNC_FILE_RANGE_WAIT_AFTER. These flags have\n     the same meaning as their SYNC_FILE_RANGE_*\n     counterparts(see SYNC_FILE_RANGE(2) man page)."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_truncate":{"s":"Truncate a file","p":[{"t":"path","d":"File path"},{"t":"offset","d":"Offset from beginning of the file."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_unlink":{"s":"Delete a name and possibly the file it refers to","p":[{"t":"path","d":"Path to file"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_utime":{"s":"Change file last access and modification times.","p":[{"t":"path","d":"Path to the file."},{"t":"atime","d":"Access time"},{"t":"mtime","d":"Modification time"},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"eio_write":{"s":"Write to file","p":[{"t":"fd","d":"Stream, Socket resource, or numeric file descriptor, e.g. returned by eio_open()"},{"t":"str","d":"Source string"},{"t":"length","d":"Maximum number of bytes to write."},{"t":"offset","d":"Offset from the beginning of file."},{"t":"pri","d":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL.\nIf NULL passed, pri internally is set to\nEIO_PRI_DEFAULT."},{"t":"callback","d":""}]},"enchant_broker_describe":{"s":"Enumerates the Enchant providers","p":[{"t":"broker","d":"Broker resource"}]},"enchant_broker_dict_exists":{"s":"Whether a dictionary exists or not. Using non-empty tag","p":[{"t":"broker","d":"Broker resource"},{"t":"tag","d":"non-empty tag in the LOCALE format, ex: us_US, ch_DE, etc."}]},"enchant_broker_free":{"s":"Free the broker resource and its dictionnaries","p":[{"t":"broker","d":"Broker resource"}]},"enchant_broker_free_dict":{"s":"Free a dictionary resource","p":[{"t":"dict","d":"Dictionary resource."}]},"enchant_broker_get_error":{"s":"Returns the last error of the broker","p":[{"t":"broker","d":"Broker resource."}]},"enchant_broker_init":{"s":"create a new broker object capable of requesting","p":null},"enchant_broker_list_dicts":{"s":"Returns a list of available dictionaries","p":[{"t":"broker","d":"Broker resource"}]},"enchant_broker_request_dict":{"s":"create a new dictionary using a tag","p":[{"t":"broker","d":"Broker resource"},{"t":"tag","d":"A tag describing the locale, for example en_US, de_DE"}]},"enchant_broker_request_pwl_dict":{"s":"creates a dictionary using a PWL file","p":[{"t":"broker","d":"Broker resource"},{"t":"filename","d":"Path to the PWL file."}]},"enchant_broker_set_ordering":{"s":"Declares a preference of dictionaries to use for the language","p":[{"t":"broker","d":"Broker resource"},{"t":"tag","d":"Language tag. The special &quot;*&quot; tag can be used as a language tag\n       to declare a default ordering for any language that does not\n       explicitly declare an ordering."},{"t":"ordering","d":"Comma delimited list of provider names"}]},"enchant_dict_add_to_personal":{"s":"add a word to personal word list","p":[{"t":"dict","d":"Dictionary resource"},{"t":"word","d":"The word to add"}]},"enchant_dict_add_to_session":{"s":"add &#039;word&#039; to this spell-checking session","p":[{"t":"dict","d":"Dictionary resource"},{"t":"word","d":"The word to add"}]},"enchant_dict_check":{"s":"Check whether a word is correctly spelled or not","p":[{"t":"dict","d":"Dictionary resource"},{"t":"word","d":"The word to check"}]},"enchant_dict_describe":{"s":"Describes an individual dictionary","p":[{"t":"dict","d":"Dictionary resource"}]},"enchant_dict_get_error":{"s":"Returns the last error of the current spelling-session","p":[{"t":"dict","d":"Dictinaray resource"}]},"enchant_dict_is_in_session":{"s":"whether or not &#039;word&#039; exists in this spelling-session","p":[{"t":"dict","d":"Dictionary resource"},{"t":"word","d":"The word to lookup"}]},"enchant_dict_quick_check":{"s":"Check the word is correctly spelled and provide suggestions","p":[{"t":"dict","d":"Dictionary resource"},{"t":"word","d":"The word to check"},{"t":"suggestions","d":"If the word is not correctly spelled, this variable will\n       contain an array of suggestions."}]},"enchant_dict_store_replacement":{"s":"Add a correction for a word","p":[{"t":"dict","d":"Dictionary resource"},{"t":"mis","d":"The work to fix"},{"t":"cor","d":"The correct word"}]},"enchant_dict_suggest":{"s":"Will return a list of values if any of those pre-conditions are not met","p":[{"t":"dict","d":"Dictionary resource"},{"t":"word","d":"Word to use for the suggestions."}]},"end":{"s":"Set the internal pointer of an array to its last element","p":[{"t":"array","d":"The array.  This array is passed by reference because it is modified by\n       the function.  This means you must pass it a real variable and not\n       a function returning an array because only actual variables may be\n       passed by reference."}]},"ereg":{"s":"Regular expression match","p":[{"t":"pattern","d":"Case sensitive regular expression."},{"t":"string","d":"The input string."},{"t":"regs","d":"If matches are found for parenthesized substrings of\n       pattern and the function is called with the\n       third argument regs, the matches will be stored\n       in the elements of the array regs."}]},"eregi":{"s":"Case insensitive regular expression match","p":[{"t":"pattern","d":"Case insensitive regular expression."},{"t":"string","d":"The input string."},{"t":"regs","d":"If matches are found for parenthesized substrings of\n       pattern and the function is called with the\n       third argument regs, the matches will be stored\n       in the elements of the array regs."}]},"eregi_replace":{"s":"Replace regular expression case insensitive","p":[{"t":"pattern","d":"A POSIX extended regular expression."},{"t":"replacement","d":"If pattern contains parenthesized substrings,\n       replacement may contain substrings of the form\n       \\digit, which will be\n       replaced by the text matching the digit&#039;th parenthesized substring; \n       \\0 will produce the entire contents of string.\n       Up to nine substrings may be used. Parentheses may be nested, in which\n       case they are counted by the opening parenthesis."},{"t":"string","d":"The input string."}]},"ereg_replace":{"s":"Replace regular expression","p":[{"t":"pattern","d":"A POSIX extended regular expression."},{"t":"replacement","d":"If pattern contains parenthesized substrings,\n       replacement may contain substrings of the form\n       \\digit, which will be\n       replaced by the text matching the digit&#039;th parenthesized substring; \n       \\0 will produce the entire contents of string.\n       Up to nine substrings may be used. Parentheses may be nested, in which\n       case they are counted by the opening parenthesis."},{"t":"string","d":"The input string."}]},"error_get_last":{"s":"Get the last occurred error","p":null},"error_log":{"s":"Send an error message to the defined error handling routines","p":[{"t":"message","d":"The error message that should be logged."},{"t":"message_type","d":"Says where the error should go. The possible message types are as \n       follows:"},{"t":"destination","d":"The destination. Its meaning depends on the \n       message_type parameter as described above."},{"t":"extra_headers","d":"The extra headers. It&#039;s used when the message_type\n       parameter is set to 1.\n       This message type uses the same internal function as \n       mail() does."}]},"error_reporting":{"s":"Sets which PHP errors are reported","p":[{"t":"level","d":"The new error_reporting\n       level. It takes on either a bitmask, or named constants. Using named \n       constants is strongly encouraged to ensure compatibility for future \n       versions. As error levels are added, the range of integers increases, \n       so older integer-based error levels will not always behave as expected."}]},"escapeshellarg":{"s":"Escape a string to be used as a shell argument","p":[{"t":"arg","d":"The argument that will be escaped."}]},"escapeshellcmd":{"s":"Escape shell metacharacters","p":[{"t":"command","d":"The command that will be escaped."}]},"eval":{"s":"Evaluate a string as PHP code","p":[{"t":"code","d":"Valid PHP code to be evaluated."}]},"event_add":{"s":"Add an event to the set of monitored events","p":[{"t":"event","d":"Valid event resource."},{"t":"timeout","d":"Optional timeout (in microseconds)."}]},"event_base_free":{"s":"Destroy event base","p":[{"t":"event_base","d":"Valid event base resource."}]},"event_base_loop":{"s":"Handle events","p":[{"t":"event_base","d":"Valid event base resource."},{"t":"flags","d":"Optional parameter, which can take any combination of \n       EVLOOP_ONCE and EVLOOP_NONBLOCK."}]},"event_base_loopbreak":{"s":"Abort event loop","p":[{"t":"event_base","d":"Valid event base resource."}]},"event_base_loopexit":{"s":"Exit loop after a time","p":[{"t":"event_base","d":"Valid event base resource."},{"t":"timeout","d":"Optional timeout parameter (in microseconds)."}]},"event_base_new":{"s":"Create and initialize new event base","p":null},"event_base_priority_init":{"s":"Set the number of event priority levels","p":[{"t":"event_base","d":"Valid event base resource."},{"t":"npriorities","d":"The number of event priority levels."}]},"event_base_set":{"s":"Associate event base with an event","p":[{"t":"event","d":"Valid event resource."},{"t":"event_base","d":"Valid event base resource."}]},"event_buffer_base_set":{"s":"Associate buffered event with an event base","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"event_base","d":"Valid event base resource."}]},"event_buffer_disable":{"s":"Disable a buffered event","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"events","d":"Any combination of EV_READ and\n       EV_WRITE."}]},"event_buffer_enable":{"s":"Enable a buffered event","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"events","d":"Any combination of EV_READ and\n       EV_WRITE."}]},"event_buffer_fd_set":{"s":"Change a buffered event file descriptor","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"fd","d":"Valid PHP stream, must be castable to file descriptor."}]},"event_buffer_free":{"s":"Destroy buffered event","p":[{"t":"bevent","d":"Valid buffered event resource."}]},"event_buffer_new":{"s":"Create new buffered event","p":[{"t":"stream","d":"Valid PHP stream resource. Must be castable to file descriptor."},{"t":"readcb","d":"Callback to invoke where there is data to read, or NULL if\n       no callback is desired."},{"t":"writecb","d":"Callback to invoke where the descriptor is ready for writing, \n       or NULL if no callback is desired."},{"t":"errorcb","d":"Callback to invoke where there is an error on the descriptor, cannot be\n       NULL."},{"t":"arg","d":"An argument that will be passed to each of the callbacks (optional)."}]},"event_buffer_priority_set":{"s":"Assign a priority to a buffered event","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"priority","d":"Priority level. Cannot be less than zero and cannot exceed maximum\n       priority level of the event base (see event_base_priority_init())."}]},"event_buffer_read":{"s":"Read data from a buffered event","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"data_size","d":"Data size in bytes."}]},"event_buffer_set_callback":{"s":"Set or reset callbacks for a buffered event","p":[{"t":"event","d":"Valid buffered event resource."},{"t":"readcb","d":"Callback to invoke where there is data to read, or NULL if\n       no callback is desired."},{"t":"writecb","d":"Callback to invoke where the descriptor is ready for writing, \n       or NULL if no callback is desired."},{"t":"errorcb","d":"Callback to invoke where there is an error on the descriptor, cannot be\n       NULL."},{"t":"arg","d":"An argument that will be passed to each of the callbacks (optional)."}]},"event_buffer_timeout_set":{"s":"Set read and write timeouts for a buffered event","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"read_timeout","d":"Read timeout (in seconds)."},{"t":"write_timeout","d":"Write timeout (in seconds)."}]},"event_buffer_watermark_set":{"s":"Set the watermarks for read and write events","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"events","d":"Any combination of EV_READ and\n       EV_WRITE."},{"t":"lowmark","d":"Low watermark."},{"t":"highmark","d":"High watermark."}]},"event_buffer_write":{"s":"Write data to a buffered event","p":[{"t":"bevent","d":"Valid buffered event resource."},{"t":"data","d":"The data to be written."},{"t":"data_size","d":"Optional size parameter. event_buffer_write() writes\n       all the data by default."}]},"event_del":{"s":"Remove an event from the set of monitored events","p":[{"t":"event","d":"Valid event resource."}]},"event_free":{"s":"Free event resource","p":[{"t":"event","d":"Valid event resource."}]},"event_new":{"s":"Create new event","p":null},"event_set":{"s":"Prepare an event","p":[{"t":"event","d":"Valid event resource."},{"t":"fd","d":"Valid PHP stream resource. The stream must be castable to file\n       descriptor, so you most likely won&#039;t be able to use any of filtered\n       streams."},{"t":"events","d":"A set of flags indicating the desired event, can be\n       EV_READ and\/or EV_WRITE.\n       The additional flag EV_PERSIST makes the event\n       to persist until event_del() is called, otherwise\n       the callback is invoked only once."},{"t":"callback","d":"Callback function to be called when the matching event occurs."},{"t":"arg","d":"Optional callback parameter."}]},"exec":{"s":"Execute an external program","p":[{"t":"command","d":"The command that will be executed."},{"t":"output","d":"If the output argument is present, then the\n       specified array will be filled with every line of output from the\n       command.  Trailing whitespace, such as \\n, is not\n       included in this array.  Note that if the array already contains some\n       elements, exec() will append to the end of the array.\n       If you do not want the function to append elements, call\n       unset() on the array before passing it to\n       exec()."},{"t":"return_var","d":"If the return_var argument is present\n       along with the output argument, then the\n       return status of the executed command will be written to this\n       variable."}]},"exif_imagetype":{"s":"Determine the type of an image","p":[{"t":"filename","d":""}]},"exif_read_data":{"s":"Reads the EXIF headers from JPEG or TIFF","p":[{"t":"filename","d":"The name of the image file being read.  This cannot be an\n       URL."},{"t":"sections","d":"Is a comma separated list of sections that need to be present in file \n       to produce a result array.  If none of the requested \n       sections could be found the return value is FALSE.\n       \n        \n         \n          \n           FILE\n           FileName, FileSize, FileDateTime, SectionsFound\n          \n\n          \n           COMPUTED\n           \n            html, Width, Height, IsColor, and more if available.  Height and \n            Width are computed the same way getimagesize()\n            does so their values must not be part of any header returned. \n            Also, html is a height\/width text string to be used inside normal \n            HTML.\n           \n          \n\n          \n           ANY_TAG\n           Any information that has a Tag e.g. IFD0, EXIF, ...\n          \n\n          \n           IFD0\n           \n            All tagged data of IFD0. In normal imagefiles this contains\n            image size and so forth.\n           \n          \n\n          \n           THUMBNAIL\n           \n            A file is supposed to contain a thumbnail if it has a second IFD.\n            All tagged information about the embedded thumbnail is stored in \n            this section.\n           \n          \n\n          \n           COMMENT\n           Comment headers of JPEG images.\n          \n\n          \n           EXIF\n           \n            The EXIF section is a sub section of IFD0. It contains\n            more detailed information about an image. Most of these entries\n            are digital camera related."},{"t":"arrays","d":"Specifies whether or not each section becomes an array. The \n       sections COMPUTED,\n       THUMBNAIL, and COMMENT \n       always become arrays as they may contain values whose names conflict\n       with other sections."},{"t":"thumbnail","d":"When set to TRUE the thumbnail itself is read.  Otherwise, only the\n       tagged data is read."}]},"exif_tagname":{"s":"Get the header name for an index","p":[{"t":"index","d":"The Tag ID for which a Tag Name will be looked up."}]},"exif_thumbnail":{"s":"Retrieve the embedded thumbnail of a TIFF or JPEG image","p":[{"t":"filename","d":"The name of the image file being read.  This image contains an\n       embedded thumbnail."},{"t":"width","d":"The return width of the returned thumbnail."},{"t":"height","d":"The returned height of the returned thumbnail."},{"t":"imagetype","d":"The returned image type of the returned thumbnail.  This is either\n       TIFF or JPEG."}]},"exit":{"s":"Output a message and terminate the current script","p":[{"t":"status","d":"If status is a string, this function prints the\n       status just before exiting."}]},"exp":{"s":"Calculates the exponent of e","p":[{"t":"arg","d":"The argument to process"}]},"expect_expectl":{"s":"","p":[{"t":"expect","d":"An Expect stream, previously opened with\n       expect_popen()."},{"t":"cases","d":"An array of expect cases. Each expect case is an indexed array,\n       as described in the following table:\n       \n        Expect Case Array\n        \n         \n          \n           Index Key\n           Value Type\n           Description\n           Is Mandatory\n           Default Value\n          \n\n         \n\n         \n          \n           0\n           string\n           pattern, that will be matched against the output from the stream\n           yes\n           &nbsp;\n          \n\n          \n           1\n           mixed\n           value, that will be returned by this function, if the pattern matches\n           yes\n           &nbsp;\n          \n\n          \n           2\n           integer\n           \n            pattern type, one of:\n            EXP_GLOB,\n            EXP_EXACT\n            or\n            EXP_REGEXP\n           \n           no\n           EXP_GLOB"}]},"expect_popen":{"s":"","p":[{"t":"command","d":"Command to execute."}]},"explode":{"s":"Split a string by string","p":[{"t":"delimiter","d":"The boundary string."},{"t":"string","d":"The input string."},{"t":"limit","d":"If limit is set and positive, the returned array will contain\n       a maximum of limit elements with the last\n       element containing the rest of string."}]},"expm1":{"s":"","p":[{"t":"arg","d":"The argument to process"}]},"extension_loaded":{"s":"Find out whether an extension is loaded","p":[{"t":"name","d":"The extension name."}]},"extract":{"s":"Import variables into the current symbol table from an array","p":[{"t":"array","d":"An associative array. This function treats keys as variable names and\n       values as variable values.  For each key\/value pair it will create a\n       variable in the current symbol table, subject to\n       flags and prefix parameters."},{"t":"flags","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"prefix","d":""},{"t":"prefix","d":""},{"t":"prefix","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"array","d":""},{"t":"prefix","d":"Note that prefix is only required if\n       flags is EXTR_PREFIX_SAME,\n       EXTR_PREFIX_ALL, EXTR_PREFIX_INVALID\n       or EXTR_PREFIX_IF_EXISTS. If\n       the prefixed result is not a valid variable name, it is not\n       imported into the symbol table. Prefixes are automatically separated from\n       the array key by an underscore character."}]},"ezmlm_hash":{"s":"Calculate the hash value needed by EZMLM","p":[{"t":"addr","d":"The email address that&#039;s being hashed."}]},"fam_cancel_monitor":{"s":"Terminate monitoring","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"},{"t":"fam_monitor","d":"A resource returned by one of the fam_monitor_XXX\n       functions"}]},"fam_close":{"s":"Close FAM connection","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"}]},"fam_monitor_collection":{"s":"Monitor a collection of files in a directory for changes","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"},{"t":"dirname","d":"Directory path to the monitored files"},{"t":"depth","d":"The maximum search depth starting from this\n       directory"},{"t":"mask","d":"A shell pattern mask restricting the file names\n       to look for"}]},"fam_monitor_directory":{"s":"Monitor a directory for changes","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"},{"t":"dirname","d":"Path to the monitored directory"}]},"fam_monitor_file":{"s":"Monitor a regular file for changes","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"},{"t":"filename","d":"Path to the monitored file"}]},"fam_next_event":{"s":"Get next pending FAM event","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"}]},"fam_open":{"s":"Open connection to FAM daemon","p":[{"t":"appname","d":"A string identifying the application for logging reasons"}]},"fam_pending":{"s":"Check for pending FAM events","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"}]},"fam_resume_monitor":{"s":"Resume suspended monitoring","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"},{"t":"fam_monitor","d":"A resource returned by one of the fam_monitor_XXX\n       functions"}]},"fam_suspend_monitor":{"s":"Temporarily suspend monitoring","p":[{"t":"fam","d":"A resource representing a connection to the FAM service returned by\n       fam_open()"},{"t":"fam_monitor","d":"A resource returned by one of the fam_monitor_XXX\n       functions"}]},"fann_cascadetrain_on_data":{"s":"Trains on an entire dataset, for a period of time using the Cascade2 training algorithm","p":[{"t":"ann","d":"Neural network resource."},{"t":"data","d":"Neural network training data resource."},{"t":"max_neurons","d":"The maximum number of neurons to be added to neural network."},{"t":"neurons_between_reports","d":"The number of neurons between printing a status report. A value of zero means no reports should be printed."},{"t":"desired_error","d":"The desired fann_get_MSE() or fann_get_bit_fail(),\n      depending on which stop function is chosen by fann_set_train_stop_function()"}]},"fann_cascadetrain_on_file":{"s":"Trains on an entire dataset read from file, for a period of time using the Cascade2 training algorithm.","p":[{"t":"ann","d":"Neural network resource."},{"t":"filename","d":"The maximum number of neurons to be added to neural network"},{"t":"max_neurons","d":"The number of neurons between printing a status report to stdout.\n      A value of zero means no reports should be printed."},{"t":"neurons_between_reports","d":"The number of neurons between printing a status report. A value of zero means no reports should be printed."},{"t":"desired_error","d":"The desired fann_get_MSE() or fann_get_bit_fail(),\n      depending on which stop function is chosen by fann_set_train_stop_function()."}]},"fann_clear_scaling_params":{"s":"Clears scaling parameters","p":[{"t":"ann","d":"Neural network resource."}]},"fann_copy":{"s":"Creates a copy of a fann structure","p":[{"t":"ann","d":"Neural network resource."}]},"fann_create_from_file":{"s":"Constructs a backpropagation neural network from a configuration file","p":[{"t":"configuration_file","d":"The configuration file path."}]},"fann_create_shortcut":{"s":"Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections","p":[{"t":"num_layers","d":"The total number of layers including the input and the output layer."},{"t":"num_neurons1","d":"Number of neurons in the first layer."},{"t":"num_neurons2","d":"Number of neurons in the second layer."},{"t":"...","d":"Number of neurons in other layers."}]},"fann_create_shortcut_array":{"s":"Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections","p":[{"t":"num_layers","d":"The total number of layers including the input and the output layer."},{"t":"layers","d":"An array of layers sizes."}]},"fann_create_sparse":{"s":"Creates a standard backpropagation neural network, which is not fully connected","p":[{"t":"connection_rate","d":"The connection rate controls how many connections there will be in the network. If the connection rate\n      is set to 1, the network will be fully connected, but if it is set to 0.5 only half of the connections\n      will be set. A connection rate of 1 will yield the same result as fann_create_standard()."},{"t":"num_layers","d":"The total number of layers including the input and the output layer."},{"t":"num_neurons1","d":"Number of neurons in the first layer."},{"t":"num_neurons2","d":"Number of neurons in the second layer."},{"t":"...","d":"Number of neurons in other layers."}]},"fann_create_sparse_array":{"s":"Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes","p":[{"t":"connection_rate","d":"The connection rate controls how many connections there will be in the network. If the connection rate\n      is set to 1, the network will be fully connected, but if it is set to 0.5 only half of the connections\n      will be set. A connection rate of 1 will yield the same result as fann_create_standard()."},{"t":"num_layers","d":"The total number of layers including the input and the output layer."},{"t":"layers","d":"An array of layer sizes."}]},"fann_create_standard":{"s":"Creates a standard fully connected backpropagation neural network","p":[{"t":"num_layers","d":"The total number of layers including the input and the output layer."},{"t":"num_neurons1","d":"Number of neurons in the first layer."},{"t":"num_neurons2","d":"Number of neurons in the second layer."},{"t":"...","d":"Number of neurons in other layers."}]},"fann_create_standard_array":{"s":"Creates a standard fully connected backpropagation neural network using an array of layer sizes","p":[{"t":"num_layers","d":"The total number of layers including the input and the output layer."},{"t":"layers","d":"An array of layer sizes."}]},"fann_create_train":{"s":"Creates an empty training data struct","p":[{"t":"num_data","d":"The number of training data"},{"t":"num_input","d":"The number of inputs per training data"},{"t":"num_output","d":"The number of ouputs per training data"}]},"fann_create_train_from_callback":{"s":"Creates the training data struct from a user supplied function","p":[{"t":"num_data","d":"The number of training data"},{"t":"num_input","d":"The number of inputs per training data"},{"t":"num_output","d":"The number of ouputs per training data"},{"t":"user_function","d":"The user supplied function with following parameters:\n      \n       num - The number of the training data set\n       num_input - The number of inputs per training data\n       num - The number of ouputs per training dataThe number of inputs per training data"}]},"fann_descale_input":{"s":"Scale data in input vector after get it from ann based on previously calculated parameters","p":[{"t":"ann","d":"Neural network resource."},{"t":"input_vector","d":"Input vector that will be descaled"}]},"fann_descale_output":{"s":"Scale data in output vector after get it from ann based on previously calculated parameters","p":[{"t":"ann","d":"Neural network resource."},{"t":"output_vector","d":"Output vector that will be descaled"}]},"fann_descale_train":{"s":"Descale input and output data based on previously calculated parameters","p":[{"t":"ann","d":"Neural network resource."},{"t":"train_data","d":"Neural network training data resource."}]},"fann_destroy":{"s":"Destroys the entire network and properly freeing all the associated memory","p":[{"t":"ann","d":"Neural network resource."}]},"fann_destroy_train":{"s":"Destructs the training data","p":[{"t":"train_data","d":"Neural network training data resource."}]},"fann_duplicate_train_data":{"s":"Returns an exact copy of a fann train data","p":[{"t":"data","d":"Neural network training data resource."}]},"fann_get_activation_function":{"s":"Returns the activation function","p":[{"t":"ann","d":"Neural network resource."},{"t":"layer","d":"Layer number."},{"t":"neuron","d":"Neuron number."}]},"fann_get_activation_steepness":{"s":"Returns the activation steepness for supplied neuron and layer number","p":[{"t":"ann","d":"Neural network resource."},{"t":"layer","d":"Layer number"},{"t":"neuron","d":"Neuron number"}]},"fann_get_bias_array":{"s":"Get the number of bias in each layer in the network","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_bit_fail":{"s":"The number of fail bits","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_bit_fail_limit":{"s":"Returns the bit fail limit used during training","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_activation_functions":{"s":"Returns the cascade activation functions","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_activation_functions_count":{"s":"Returns the number of cascade activation functions","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_activation_steepnesses":{"s":"Returns the cascade activation steepnesses","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_activation_steepnesses_count":{"s":"The number of activation steepnesses","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_candidate_change_fraction":{"s":"Returns the cascade candidate change fraction","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_candidate_limit":{"s":"Return the candidate limit","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_candidate_stagnation_epochs":{"s":"Returns the number of cascade candidate stagnation epochs","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_max_cand_epochs":{"s":"Returns the maximum candidate epochs","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_max_out_epochs":{"s":"Returns the maximum out epochs","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_min_cand_epochs":{"s":"Returns the minimum candidate epochs","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_min_out_epochs":{"s":"Returns the minimum out epochs","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_num_candidates":{"s":"Returns the number of candidates used during training","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_num_candidate_groups":{"s":"Returns the number of candidate groups","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_output_change_fraction":{"s":"Returns the cascade output change fraction","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_output_stagnation_epochs":{"s":"Returns the number of cascade output stagnation epochs","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_cascade_weight_multiplier":{"s":"Returns the weight multiplier","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_connection_array":{"s":"Get connections in the network","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_connection_rate":{"s":"Get the connection rate used when the network was created","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_errno":{"s":"Returns the last error number","p":[{"t":"errdat","d":"Either neural network resource or neural network trainining data resource."}]},"fann_get_errstr":{"s":"Returns the last errstr","p":[{"t":"errdat","d":"Either neural network resource or neural network trainining data resource."}]},"fann_get_layer_array":{"s":"Get the number of neurons in each layer in the network","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_learning_momentum":{"s":"Returns the learning momentum","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_learning_rate":{"s":"Returns the learning rate","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_network_type":{"s":"Get the type of neural network it was created as","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_num_input":{"s":"Get the number of input neurons","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_num_layers":{"s":"Get the number of layers in the neural network","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_num_output":{"s":"Get the number of output neurons","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_quickprop_decay":{"s":"Returns the decay which is a factor that weights should decrease in each iteration during quickprop training","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_quickprop_mu":{"s":"Returns the mu factor","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_rprop_decrease_factor":{"s":"Returns the increase factor used during RPROP training","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_rprop_delta_max":{"s":"Returns the maximum step-size","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_rprop_delta_min":{"s":"Returns the minimum step-size","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_rprop_delta_zero":{"s":"Returns the initial step-size","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_rprop_increase_factor":{"s":"Returns the increase factor used during RPROP training","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_sarprop_step_error_shift":{"s":"Returns the sarprop step error shift","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_sarprop_step_error_threshold_factor":{"s":"Returns the sarprop step error threshold factor","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_sarprop_temperature":{"s":"Returns the sarprop temperature","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_sarprop_weight_decay_shift":{"s":"Returns the sarprop weight decay shift","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_total_connections":{"s":"Get the total number of connections in the entire network","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_total_neurons":{"s":"Get the total number of neurons in the entire network","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_training_algorithm":{"s":"Returns the training algorithm","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_train_error_function":{"s":"Returns the error function used during training","p":[{"t":"ann","d":"Neural network resource."}]},"fann_get_train_stop_function":{"s":"Returns the the stop function used during training","p":[{"t":"ann","d":"Neural network resource."}]},"fann_init_weights":{"s":"Initialize the weights using Widrow + Nguyen\u2019s algorithm","p":[{"t":"ann","d":"Neural network resource."},{"t":"train_data","d":"Neural network training data resource."}]},"fann_length_train_data":{"s":"Returns the number of training patterns in the train data","p":[{"t":"data","d":"Neural network training data resource."}]},"fann_merge_train_data":{"s":"Merges the train data","p":[{"t":"data1","d":"Neural network training data resource."},{"t":"data2","d":"Neural network training data resource."}]},"fann_num_input_train_data":{"s":"Returns the number of inputs in each of the training patterns in the train data","p":[{"t":"data","d":"Neural network training data resource."}]},"fann_num_output_train_data":{"s":"Returns the number of outputs in each of the training patterns in the train data","p":[{"t":"data","d":"Neural network training data resource."}]},"fann_print_error":{"s":"Prints the error string","p":[{"t":"errdat","d":"Either neural network resource or neural network trainining data resource."}]},"fann_randomize_weights":{"s":"Give each connection a random weight between min_weight and max_weight","p":[{"t":"ann","d":"Neural network resource."},{"t":"min_weight","d":"Minimum weight value"},{"t":"max_weight","d":"Maximum weight value"}]},"fann_read_train_from_file":{"s":"Reads a file that stores training data","p":[{"t":"filename","d":"The input file in the following format:"}]},"fann_reset_errno":{"s":"Resets the last error number","p":[{"t":"errdat","d":"Either neural network resource or neural network trainining data resource."}]},"fann_reset_errstr":{"s":"Resets the last error string","p":[{"t":"errdat","d":"Either neural network resource or neural network trainining data resource."}]},"fann_run":{"s":"Will run input through the neural network","p":[{"t":"ann","d":"Neural network resource."},{"t":"input","d":"Array of input values"}]},"fann_save":{"s":"Saves the entire network to a configuration file","p":[{"t":"ann","d":"Neural network resource."},{"t":"configuration_file","d":"The configuration file path."}]},"fann_save_train":{"s":"Save the training structure to a file","p":[{"t":"data","d":"Neural network training data resource."},{"t":"file_name","d":"The file name of the file where training data is saved to."}]},"fann_scale_input":{"s":"Scale data in input vector before feed it to ann based on previously calculated parameters","p":[{"t":"ann","d":"Neural network resource."},{"t":"input_vector","d":"Input vector that will be scaled"}]},"fann_scale_input_train_data":{"s":"Scales the inputs in the training data to the specified range","p":[{"t":"train_data","d":"Neural network training data resource."},{"t":"new_min","d":"New minimum after scaling inputs in training data."},{"t":"new_max","d":"New maximum after scaling inputs in training data."}]},"fann_scale_output":{"s":"Scale data in output vector before feed it to ann based on previously calculated parameters","p":[{"t":"ann","d":"Neural network resource."},{"t":"output_vector","d":"Output vector that will be scaled"}]},"fann_scale_output_train_data":{"s":"Scales the outputs in the training data to the specified range","p":[{"t":"train_data","d":"Neural network training data resource."},{"t":"new_min","d":"New minimum after scaling outputs in training data."},{"t":"new_max","d":"New maximum after scaling outputs in training data."}]},"fann_scale_train":{"s":"Scale input and output data based on previously calculated parameters","p":[{"t":"ann","d":"Neural network resource."},{"t":"train_data","d":"Neural network training data resource."}]},"fann_scale_train_data":{"s":"Scales the inputs and outputs in the training data to the specified range","p":[{"t":"train_data","d":"Neural network training data resource."},{"t":"new_min","d":"New minimum after scaling inputs and outputs in training data."},{"t":"new_max","d":"New maximum after scaling inputs and outputs in training data."}]},"fann_set_activation_function":{"s":"Sets the activation function for supplied neuron and layer","p":[{"t":"ann","d":"Neural network resource."},{"t":"activation_function","d":"The activation functions constant."},{"t":"layer","d":"Layer number."},{"t":"neuron","d":"Neuron number."}]},"fann_set_activation_function_hidden":{"s":"Sets the activation function for all of the hidden layers","p":[{"t":"ann","d":"Neural network resource."},{"t":"activation_function","d":"The activation functions constant."}]},"fann_set_activation_function_layer":{"s":"Sets the activation function for all the neurons in the supplied layer.","p":[{"t":"ann","d":"Neural network resource."},{"t":"activation_function","d":"The activation functions constant."},{"t":"layer","d":"Layer number."}]},"fann_set_activation_function_output":{"s":"Sets the activation function for the output layer","p":[{"t":"ann","d":"Neural network resource."},{"t":"activation_function","d":"The activation functions constant."}]},"fann_set_activation_steepness":{"s":"Sets the activation steepness for supplied neuron and layer number","p":[{"t":"ann","d":"Neural network resource."},{"t":"activation_steepness","d":"The activation steepness."},{"t":"layer","d":"Layer number."},{"t":"neuron","d":"Neuron number."}]},"fann_set_activation_steepness_hidden":{"s":"Sets the steepness of the activation steepness for all neurons in the all hidden layers","p":[{"t":"ann","d":"Neural network resource."},{"t":"activation_steepness","d":"The activation steepness."}]},"fann_set_activation_steepness_layer":{"s":"Sets the activation steepness for all of the neurons in the supplied layer number","p":[{"t":"ann","d":"Neural network resource."},{"t":"activation_steepness","d":"The activation steepness."},{"t":"layer","d":"Layer number."}]},"fann_set_activation_steepness_output":{"s":"Sets the steepness of the activation steepness in the output layer","p":[{"t":"ann","d":"Neural network resource."},{"t":"activation_steepness","d":"The activation steepness."}]},"fann_set_bit_fail_limit":{"s":"Set the bit fail limit used during training","p":[{"t":"ann","d":"Neural network resource."},{"t":"bit_fail_limit","d":"The bit fail limit."}]},"fann_set_callback":{"s":"Sets the callback function for use during training","p":[{"t":"ann","d":"Neural network resource."},{"t":"callback","d":"The supplied callback function takes following parameters:\n      \n       ann - The neural network resource\n       train - The train data resource\n        or NULL if called from fann_train_on_file()\n       max_epochs - The maximum number of epochs the training should continue\n       epochs_between_reports - The number of epochs between calling this function\n       desired_error - The desired fann_get_MSE() or\n        fann_get_bit_fail(), depending on the stop function chosen by\n        fann_set_train_stop_function()\n       epochs - The current epoch"}]},"fann_set_cascade_activation_functions":{"s":"Sets the array of cascade candidate activation functions","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_activation_functions","d":"The array of cascade candidate activation functions."}]},"fann_set_cascade_activation_steepnesses":{"s":"Sets the array of cascade candidate activation steepnesses","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_activation_steepnesses_count","d":"The array of cascade candidate activation steepnesses."}]},"fann_set_cascade_candidate_change_fraction":{"s":"Sets the cascade candidate change fraction","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_candidate_change_fraction","d":"The cascade candidate change fraction."}]},"fann_set_cascade_candidate_limit":{"s":"Sets the candidate limit","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_candidate_limit","d":"The candidate limit."}]},"fann_set_cascade_candidate_stagnation_epochs":{"s":"Sets the number of cascade candidate stagnation epochs","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_candidate_stagnation_epochs","d":"The number of cascade candidate stagnation epochs."}]},"fann_set_cascade_max_cand_epochs":{"s":"Sets the max candidate epochs","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_max_cand_epochs","d":"The max candidate epochs."}]},"fann_set_cascade_max_out_epochs":{"s":"Sets the maximum out epochs","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_max_out_epochs","d":"The maximum out epochs."}]},"fann_set_cascade_min_cand_epochs":{"s":"Sets the min candidate epochs","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_min_cand_epochs","d":"The minimum candidate epochs."}]},"fann_set_cascade_min_out_epochs":{"s":"Sets the minimum out epochs","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_min_out_epochs","d":"The minimum out epochs."}]},"fann_set_cascade_num_candidate_groups":{"s":"Sets the number of candidate groups","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_num_candidate_groups","d":"The number of candidate groups."}]},"fann_set_cascade_output_change_fraction":{"s":"Sets the cascade output change fraction","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_output_change_fraction","d":"The cascade output change fraction."}]},"fann_set_cascade_output_stagnation_epochs":{"s":"Sets the number of cascade output stagnation epochs","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_output_stagnation_epochs","d":"The number of cascade output stagnation epochs."}]},"fann_set_cascade_weight_multiplier":{"s":"Sets the weight multiplier","p":[{"t":"ann","d":"Neural network resource."},{"t":"cascade_weight_multiplier","d":"The weight multiplier."}]},"fann_set_error_log":{"s":"Sets where the errors are logged to","p":[{"t":"errdat","d":"Either neural network resource or neural network trainining data resource."},{"t":"log_file","d":"The log file path."}]},"fann_set_input_scaling_params":{"s":"Calculate input scaling parameters for future use based on training data","p":[{"t":"ann","d":"Neural network resource."},{"t":"train_data","d":"Neural network training data resource."},{"t":"new_input_min","d":"The desired lower bound in input data after scaling (not strictly followed)"},{"t":"new_input_max","d":"The desired upper bound in input data after scaling (not strictly followed)"}]},"fann_set_learning_momentum":{"s":"Sets the learning momentum","p":[{"t":"ann","d":"Neural network resource."},{"t":"learning_momentum","d":"The learning momentum."}]},"fann_set_learning_rate":{"s":"Sets the learning rate","p":[{"t":"ann","d":"Neural network resource."},{"t":"learning_rate","d":"The learning rate."}]},"fann_set_output_scaling_params":{"s":"Calculate output scaling parameters for future use based on training data","p":[{"t":"ann","d":"Neural network resource."},{"t":"train_data","d":"Neural network training data resource."},{"t":"new_output_min","d":"The desired lower bound in output data after scaling (not strictly followed)"},{"t":"new_output_max","d":"The desired upper bound in output data after scaling (not strictly followed)"}]},"fann_set_quickprop_decay":{"s":"Sets the quickprop decay factor","p":[{"t":"ann","d":"Neural network resource."},{"t":"quickprop_decay","d":"The quickprop decay factor."}]},"fann_set_quickprop_mu":{"s":"Sets the quickprop mu factor","p":[{"t":"ann","d":"Neural network resource."},{"t":"quickprop_mu","d":"The mu factor."}]},"fann_set_rprop_decrease_factor":{"s":"Sets the decrease factor used during RPROP training","p":[{"t":"ann","d":"Neural network resource."},{"t":"rprop_decrease_factor","d":"The decrease factor."}]},"fann_set_rprop_delta_max":{"s":"Sets the maximum step-size","p":[{"t":"ann","d":"Neural network resource."},{"t":"rprop_delta_max","d":"The maximum step-size."}]},"fann_set_rprop_delta_min":{"s":"Sets the minimum step-size","p":[{"t":"ann","d":"Neural network resource."},{"t":"rprop_delta_min","d":"The minimum step-size."}]},"fann_set_rprop_delta_zero":{"s":"Sets the initial step-size","p":[{"t":"ann","d":"Neural network resource."},{"t":"rprop_delta_zero","d":"The initial step-size."}]},"fann_set_rprop_increase_factor":{"s":"Sets the increase factor used during RPROP training","p":[{"t":"ann","d":"Neural network resource."},{"t":"rprop_increase_factor","d":"The increase factor."}]},"fann_set_sarprop_step_error_shift":{"s":"Sets the sarprop step error shift","p":[{"t":"ann","d":"Neural network resource."},{"t":"sarprop_step_error_shift","d":"The sarprop step error shift."}]},"fann_set_sarprop_step_error_threshold_factor":{"s":"Sets the sarprop step error threshold factor","p":[{"t":"ann","d":"Neural network resource."},{"t":"sarprop_step_error_threshold_factor","d":"The sarprop step error threshold factor."}]},"fann_set_sarprop_temperature":{"s":"Sets the sarprop temperature","p":[{"t":"ann","d":"Neural network resource."},{"t":"sarprop_temperature","d":"The sarprop temperature."}]},"fann_set_sarprop_weight_decay_shift":{"s":"Sets the sarprop weight decay shift","p":[{"t":"ann","d":"Neural network resource."},{"t":"sarprop_weight_decay_shift","d":"The sarprop weight decay shift."}]},"fann_set_scaling_params":{"s":"Calculate input and output scaling parameters for future use based on training data","p":[{"t":"ann","d":"Neural network resource."},{"t":"train_data","d":"Neural network training data resource."},{"t":"new_input_min","d":"The desired lower bound in input data after scaling (not strictly followed)"},{"t":"new_input_max","d":"The desired upper bound in input data after scaling (not strictly followed)"},{"t":"new_output_min","d":"The desired lower bound in output data after scaling (not strictly followed)"},{"t":"new_output_max","d":"The desired upper bound in output data after scaling (not strictly followed)"}]},"fann_set_training_algorithm":{"s":"Sets the training algorithm","p":[{"t":"ann","d":"Neural network resource."},{"t":"training_algorithm","d":"Training algorithm constant"}]},"fann_set_train_error_function":{"s":"Sets the error function used during training","p":[{"t":"ann","d":"Neural network resource."},{"t":"error_function","d":"The error function constant"}]},"fann_set_train_stop_function":{"s":"Sets the stop function used during training","p":[{"t":"ann","d":"Neural network resource."},{"t":"stop_function","d":"The stop function constant."}]},"fann_set_weight":{"s":"Set a connection in the network","p":[{"t":"ann","d":"Neural network resource."},{"t":"from_neuron","d":"The neuron where the connection starts"},{"t":"to_neuron","d":"The neuron where the connection ends"},{"t":"weight","d":"Connection weight"}]},"fann_set_weight_array":{"s":"Set connections in the network","p":[{"t":"ann","d":"Neural network resource."},{"t":"connections","d":"An array of FANNConnection objects"}]},"fann_shuffle_train_data":{"s":"Shuffles training data, randomizing the order","p":[{"t":"train_data","d":"Neural network training data resource."}]},"fann_subset_train_data":{"s":"Returns an copy of a subset of the train data","p":[{"t":"data","d":"Neural network training data resource."},{"t":"pos","d":"Starting position."},{"t":"length","d":"The number of copied elements."}]},"fann_test":{"s":"Test with a set of inputs, and a set of desired outputs","p":[{"t":"ann","d":"Neural network resource."},{"t":"input","d":"An array of inputs. This array must be exactly fann_get_num_input() long."},{"t":"desired_output","d":"An array of desired outputs. This array must be exactly fann_get_num_output() long."}]},"fann_test_data":{"s":"Test a set of training data and calculates the MSE for the training data","p":[{"t":"ann","d":"Neural network resource."},{"t":"data","d":"Neural network training data resource."}]},"fann_train":{"s":"Train one iteration with a set of inputs, and a set of desired outputs","p":[{"t":"ann","d":"Neural network resource."},{"t":"input","d":"An array of inputs. This array must be exactly fann_get_num_input() long."},{"t":"desired_output","d":"An array of desired outputs. This array must be exactly fann_get_num_output() long."}]},"fann_train_epoch":{"s":"Train one epoch with a set of training data","p":[{"t":"ann","d":"Neural network resource."},{"t":"data","d":"Neural network training data resource."}]},"fann_train_on_data":{"s":"Trains on an entire dataset for a period of time","p":[{"t":"ann","d":"Neural network resource."},{"t":"data","d":"Neural network training data resource."},{"t":"max_epochs","d":"The maximum number of epochs the training should continue"},{"t":"epochs_between_reports","d":"The number of epochs between calling a callback function. A value of zero means that user function is not called."},{"t":"desired_error","d":"The desired fann_get_MSE() or fann_get_bit_fail(), depending on the stop function\n      chosen by fann_set_train_stop_function()"}]},"fann_train_on_file":{"s":"Trains on an entire dataset, which is read from file, for a period of time","p":[{"t":"ann","d":"Neural network resource."},{"t":"filename","d":"The file containing train data"},{"t":"max_epochs","d":"The maximum number of epochs the training should continue"},{"t":"epochs_between_reports","d":"The number of epochs between calling a user function. A value of zero means that user function is not called."},{"t":"desired_error","d":"The desired fann_get_MSE() or fann_get_bit_fail(), depending on the stop function\n      chosen by fann_set_train_stop_function()"}]},"fastcgi_finish_request":{"s":"Flushes all response data to the client","p":null},"fbsql_affected_rows":{"s":"Get number of affected rows in previous FrontBase operation","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_autocommit":{"s":"Enable or disable autocommit","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"OnOff","d":"If this optional parameter is given the auto commit status will be\n       changed."}]},"fbsql_blob_size":{"s":"Get the size of a BLOB","p":[{"t":"blob_handle","d":"A BLOB handle, returned by fbsql_create_blob()."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_change_user":{"s":"Change logged in user of the active connection","p":[{"t":"user","d":"The new user name."},{"t":"password","d":"The new user password."},{"t":"database","d":"If specified, this will be the default or current database after the\n       user has been changed."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_clob_size":{"s":"Get the size of a CLOB","p":[{"t":"clob_handle","d":"A CLOB handle, returned by fbsql_create_clob()."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_close":{"s":"Close FrontBase connection","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_commit":{"s":"Commits a transaction to the database","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_connect":{"s":"Open a connection to a FrontBase Server","p":[{"t":"hostname","d":"The server host name."},{"t":"username","d":"The user name for the connection."},{"t":"password","d":"The password for the connection."}]},"fbsql_create_blob":{"s":"Create a BLOB","p":[{"t":"blob_data","d":"The BLOB data."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_create_clob":{"s":"Create a CLOB","p":[{"t":"clob_data","d":"The CLOB data."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_create_db":{"s":"Create a FrontBase database","p":[{"t":"database_name","d":"The database name, as a string."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"database_options","d":""}]},"fbsql_database":{"s":"Get or set the database name used with a connection","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"database","d":"The database name. If given, the default database of the connexion\n       will be changed to database."}]},"fbsql_database_password":{"s":"Sets or retrieves the password for a FrontBase database","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"database_password","d":"The database password, as a string. If given, the function sets the\n       database password for the specified link identifier."}]},"fbsql_data_seek":{"s":"Move internal result pointer","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."},{"t":"row_number","d":"The row number. Starts at 0."}]},"fbsql_db_query":{"s":"Send a FrontBase query","p":[{"t":"database","d":"The database to be selected."},{"t":"query","d":"The SQL query to be executed."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_db_status":{"s":"Get the status for a given database","p":[{"t":"database_name","d":"The database name."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_drop_db":{"s":"Drop (delete) a FrontBase database","p":[{"t":"database_name","d":"The database name, as a string."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_errno":{"s":"Returns the error number from previous operation","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_error":{"s":"Returns the error message from previous operation","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_fetch_array":{"s":"Fetch a result row as an associative array, a numeric array, or both","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."},{"t":"result_type","d":"A constant and can take the following values: \n       FBSQL_ASSOC, FBSQL_NUM, or\n       FBSQL_BOTH."}]},"fbsql_fetch_assoc":{"s":"Fetch a result row as an associative array","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_fetch_field":{"s":"Get column information from a result and return as an object","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."},{"t":"field_offset","d":"The numerical offset of the field. The field index starts at 0.\n       If not specified, the next field that wasn&#039;t yet retrieved by \n       fbsql_fetch_field() is retrieved."}]},"fbsql_fetch_lengths":{"s":"Get the length of each output in a result","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_fetch_object":{"s":"Fetch a result row as an object","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_fetch_row":{"s":"Get a result row as an enumerated array","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_field_flags":{"s":"Get the flags associated with the specified field in a result","p":[{"t":"result","d":"A result pointer returned by fbsql_list_fields()."},{"t":"field_offset","d":"The numerical offset of the field. The field index starts at 0."}]},"fbsql_field_len":{"s":"Returns the length of the specified field","p":[{"t":"result","d":"A result pointer returned by fbsql_list_fields()."},{"t":"field_offset","d":"The numerical offset of the field. The field index starts at 0."}]},"fbsql_field_name":{"s":"Get the name of the specified field in a result","p":[{"t":"result","d":"A result pointer returned by fbsql_list_fields()."},{"t":"field_index","d":"The numerical offset of the field. The field index starts at 0."}]},"fbsql_field_seek":{"s":"Set result pointer to a specified field offset","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."},{"t":"field_offset","d":"The numerical offset of the field. The field index starts at 0."}]},"fbsql_field_table":{"s":"Get name of the table the specified field is in","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."},{"t":"field_offset","d":"The numerical offset of the field. The field index starts at 0."}]},"fbsql_field_type":{"s":"Get the type of the specified field in a result","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."},{"t":"field_offset","d":"The numerical offset of the field. The field index starts at 0."}]},"fbsql_free_result":{"s":"Free result memory","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_get_autostart_info":{"s":"","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_hostname":{"s":"Get or set the host name used with a connection","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"host_name","d":"If provided, this will be the new connection host name."}]},"fbsql_insert_id":{"s":"Get the id generated from the previous INSERT operation","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_list_dbs":{"s":"List databases available on a FrontBase server","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_list_fields":{"s":"List FrontBase result fields","p":[{"t":"database_name","d":"The database name."},{"t":"table_name","d":"The table name."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_list_tables":{"s":"List tables in a FrontBase database","p":[{"t":"database","d":"The database name."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_next_result":{"s":"Move the internal result pointer to the next result","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_num_fields":{"s":"Get number of fields in result","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_num_rows":{"s":"Get number of rows in result","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_password":{"s":"Get or set the user password used with a connection","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"password","d":"If provided, this will be the new connection password."}]},"fbsql_pconnect":{"s":"Open a persistent connection to a FrontBase Server","p":[{"t":"hostname","d":"The server host name."},{"t":"username","d":"The user name for the connection."},{"t":"password","d":"The password for the connection."}]},"fbsql_query":{"s":"Send a FrontBase query","p":[{"t":"query","d":"The SQL query to be executed."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"batch_size","d":""}]},"fbsql_read_blob":{"s":"Read a BLOB from the database","p":[{"t":"blob_handle","d":"A BLOB handle, returned by fbsql_create_blob()."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_read_clob":{"s":"Read a CLOB from the database","p":[{"t":"clob_handle","d":"A CLOB handle, returned by fbsql_create_clob()."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_result":{"s":"Get result data","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."},{"t":"row","d":""},{"t":"field","d":"Can be the field&#039;s offset, or the field&#039;s name, or the field&#039;s table\n       dot field&#039;s name (tablename.fieldname)."}]},"fbsql_rollback":{"s":"Rollback a transaction to the database","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_rows_fetched":{"s":"Get the number of rows affected by the last statement","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."}]},"fbsql_select_db":{"s":"Select a FrontBase database","p":[{"t":"database_name","d":"The name of the database to be selected."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_set_characterset":{"s":"Change input\/output character set","p":null},"fbsql_set_lob_mode":{"s":"Set the LOB retrieve mode for a FrontBase result set","p":[{"t":"","d":"A result identifier\nreturned by fbsql_query() or\nfbsql_db_query()."},{"t":"lob_mode","d":"Can be one of:\n       \n        \n         \n          FBSQL_LOB_DIRECT - LOB data is retrieved\n          directly. When data is fetched from the database with\n          fbsql_fetch_row(), and other fetch functions,\n          all CLOB and BLOB columns will be returned as ordinary columns.\n          This is the default value on a new FrontBase result.\n         \n        \n        \n         \n          FBSQL_LOB_HANDLE - LOB data is retrieved as\n          handles to the data.  When data is fetched from the database with\n          fbsql_fetch_row(), and other fetch functions,\n          LOB data will be returned as a handle to the data if the data is\n          stored indirect or the data if it is stored direct.  If a handle\n          is returned it will be a 27 byte string formatted as \n          @&#039;000000000000000000000000&#039;."}]},"fbsql_set_password":{"s":"Change the password for a given user","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"user","d":"The user name."},{"t":"password","d":"The new password to be set."},{"t":"old_password","d":"The old password to be replaced."}]},"fbsql_set_transaction":{"s":"Set the transaction locking and isolation","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"locking","d":"The type of locking to be set. It can be one of the following\n       constants: FBSQL_LOCK_DEFERRED, \n       FBSQL_LOCK_OPTIMISTIC,\n       or FBSQL_LOCK_PESSIMISTIC."},{"t":"isolation","d":"The type of isolation to be set. It can be one of the following\n       constants: FBSQL_ISO_READ_UNCOMMITTED, \n       FBSQL_ISO_READ_COMMITTED,\n       FBSQL_ISO_REPEATABLE_READ,\n       FBSQL_ISO_SERIALIZABLE,\n       or FBSQL_ISO_VERSIONED."}]},"fbsql_start_db":{"s":"Start a database on local or remote server","p":[{"t":"database_name","d":"The database name."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"database_options","d":""}]},"fbsql_stop_db":{"s":"Stop a database on local or remote server","p":[{"t":"database_name","d":"The database name."},{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."}]},"fbsql_tablename":{"s":"Alias of fbsql_table_name()","p":null},"fbsql_table_name":{"s":"Get table name of field","p":[{"t":"result","d":"A result pointer returned by fbsql_list_tables()."},{"t":"index","d":"Integer index for the current table."}]},"fbsql_username":{"s":"Get or set the username for the connection","p":[{"t":"","d":"A FrontBase link identifier\nreturned by fbsql_connect() or\nfbsql_pconnect()."},{"t":"username","d":"If provided, this is the new username to set."}]},"fbsql_warnings":{"s":"Enable or disable FrontBase warnings","p":[{"t":"OnOff","d":"Whether to enable warnings or no."}]},"fclose":{"s":"Closes an open file pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must point to a file successfully\n       opened by fopen() or fsockopen()."}]},"fdf_add_doc_javascript":{"s":"Adds javascript code to the FDF document","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"script_name","d":"The script name."},{"t":"script_code","d":"The script code. It is strongly suggested to use \\r\n       for linebreaks within the script code."}]},"fdf_add_template":{"s":"Adds a template into the FDF document","p":null},"fdf_close":{"s":"Close an FDF document","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."}]},"fdf_create":{"s":"Create a new FDF document","p":null},"fdf_enum_values":{"s":"Call a user defined function for each document value ","p":null},"fdf_errno":{"s":"Return error code for last fdf operation","p":null},"fdf_error":{"s":"Return error description for FDF error code","p":[{"t":"error_code","d":"An error code obtained with fdf_errno().\n       If not provided, this function uses the internal error code set by the\n       last operation."}]},"fdf_get_ap":{"s":"Get the appearance of a field","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"field","d":""},{"t":"face","d":"The possible values are FDFNormalAP, \n       FDFRolloverAP and FDFDownAP."},{"t":"filename","d":"The appearance will be stored in this parameter."}]},"fdf_get_attachment":{"s":"Extracts uploaded file embedded in the FDF","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"fieldname","d":""},{"t":"savepath","d":"May be the name of a plain file or an existing directory in which the\n       file is to be created under its original name. Any existing file under\n       the same name will be overwritten."}]},"fdf_get_encoding":{"s":"Get the value of the \/Encoding key","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."}]},"fdf_get_file":{"s":"Get the value of the \/F key","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."}]},"fdf_get_flags":{"s":"Gets the flags of a field","p":null},"fdf_get_opt":{"s":"Gets a value from the opt array of a field","p":null},"fdf_get_status":{"s":"Get the value of the \/STATUS key","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."}]},"fdf_get_value":{"s":"Get the value of a field","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"fieldname","d":"Name of the FDF field, as a string."},{"t":"which","d":"Elements of an array field can be retrieved by passing this optional\n       parameter, starting at zero. For non-array fields, this parameter will\n       be ignored."}]},"fdf_get_version":{"s":"Gets version number for FDF API or file ","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."}]},"fdf_header":{"s":"Sets FDF-specific output headers","p":null},"fdf_next_field_name":{"s":"Get the next field name","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"fieldname","d":"Name of the FDF field, as a string. If not given, the first field will\n       be assumed."}]},"fdf_open":{"s":"Open a FDF document","p":[{"t":"filename","d":"Path to the FDF file. This file must contain the data as returned from\n       a PDF form or created using fdf_create() and\n       fdf_save()."}]},"fdf_open_string":{"s":"Read a FDF document from a string","p":[{"t":"fdf_data","d":"The data as returned from a PDF form or created using \n       fdf_create() and \n       fdf_save_string()."}]},"fdf_remove_item":{"s":"Sets target frame for form","p":null},"fdf_save":{"s":"Save a FDF document","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"filename","d":"If provided, the resulting FDF will be written in this parameter.\n       Otherwise, this function will write the FDF to the default PHP output\n       stream."}]},"fdf_save_string":{"s":"Returns the FDF document as a string","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."}]},"fdf_set_ap":{"s":"Set the appearance of a field","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"field_name","d":""},{"t":"face","d":"The possible values FDFNormalAP,\n       FDFRolloverAP and\n       FDFDownAP."},{"t":"filename","d":""},{"t":"page_number","d":""}]},"fdf_set_encoding":{"s":"Sets FDF character encoding","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"encoding","d":"The encoding name. The following values are supported: \n       &quot;Shift-JIS&quot;, &quot;UHC&quot;,\n       &quot;GBK&quot; and &quot;BigFive&quot;."}]},"fdf_set_file":{"s":"Set PDF document to display FDF data in","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"url","d":"Should be given as an absolute URL."},{"t":"target_frame","d":"Use this parameter to specify the frame in which the document will be\n       displayed. You can also set the default value for this parameter using\n       fdf_set_target_frame()."}]},"fdf_set_flags":{"s":"Sets a flag of a field","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"fieldname","d":"Name of the FDF field, as a string."},{"t":"whichFlags","d":""},{"t":"newFlags","d":""}]},"fdf_set_javascript_action":{"s":"Sets an javascript action of a field","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"fieldname","d":"Name of the FDF field, as a string."},{"t":"trigger","d":""},{"t":"script","d":""}]},"fdf_set_on_import_javascript":{"s":"Adds javascript code to be executed when Acrobat opens the FDF","p":null},"fdf_set_opt":{"s":"Sets an option of a field","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"fieldname","d":"Name of the FDF field, as a string."},{"t":"element","d":""},{"t":"str1","d":""},{"t":"str2","d":""}]},"fdf_set_status":{"s":"Set the value of the \/STATUS key","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"status","d":""}]},"fdf_set_submit_form_action":{"s":"Sets a submit form action of a field","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"fieldname","d":"Name of the FDF field, as a string."},{"t":"trigger","d":""},{"t":"script","d":""},{"t":"flags","d":""}]},"fdf_set_target_frame":{"s":"Set target frame for form display","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"frame_name","d":"The frame name, as a string."}]},"fdf_set_value":{"s":"Set the value of a field","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"fieldname","d":"Name of the FDF field, as a string."},{"t":"value","d":"This parameter will be stored as a string unless it is an array. In\n       this case all array elements will be stored as a value array."},{"t":"isName","d":""}]},"fdf_set_version":{"s":"Sets version number for a FDF file ","p":[{"t":"fdf_document","d":"The FDF document handle, returned by fdf_create(),\n       fdf_open() or fdf_open_string()."},{"t":"version","d":"The version number. For the current FDF toolkit 5.0, this may be\n       either 1.2, 1.3 or\n       1.4."}]},"feof":{"s":"Tests for end-of-file on a file pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must point to\na file successfully opened by fopen() or\nfsockopen() (and not yet closed by\nfclose())."}]},"fflush":{"s":"Flushes the output to a file","p":[{"t":"handle","d":"The file pointer must be valid, and must point to\na file successfully opened by fopen() or\nfsockopen() (and not yet closed by\nfclose())."}]},"fgetc":{"s":"Gets character from file pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must point to\na file successfully opened by fopen() or\nfsockopen() (and not yet closed by\nfclose())."}]},"fgetcsv":{"s":"Gets line from file pointer and parse for CSV fields","p":[{"t":"handle","d":"A valid file pointer to a file successfully opened by\n       fopen(), popen(), or\n       fsockopen()."},{"t":"length","d":"Must be greater than the longest line (in characters) to be found in\n       the CSV file (allowing for trailing line-end characters). It became\n       optional in PHP 5. Omitting this parameter (or setting it to 0 in PHP\n       5.0.4 and later) the maximum line length is not limited, which is\n       slightly slower."},{"t":"delimiter","d":"Set the field delimiter (one character only)."},{"t":"enclosure","d":"Set the field enclosure character (one character only)."},{"t":"escape","d":"Set the escape character (one character only). Defaults as a backslash."}]},"fgets":{"s":"Gets line from file pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must point to\na file successfully opened by fopen() or\nfsockopen() (and not yet closed by\nfclose())."},{"t":"length","d":"Reading ends when length - 1 bytes have been\n       read, or a newline (which is included in the return value), or an EOF\n       (whichever comes first). If no length is specified, it will keep\n       reading from the stream until it reaches the end of the line."}]},"fgetss":{"s":"Gets line from file pointer and strip HTML tags","p":[{"t":"handle","d":"The file pointer must be valid, and must point to\na file successfully opened by fopen() or\nfsockopen() (and not yet closed by\nfclose())."},{"t":"length","d":"Length of the data to be retrieved."},{"t":"allowable_tags","d":"You can use the optional third parameter to specify tags which should\n       not be stripped."}]},"file":{"s":"Reads entire file into an array","p":[{"t":"filename","d":"Path to the file."}]},"fileatime":{"s":"Gets last access time of file","p":[{"t":"filename","d":"Path to the file."}]},"filectime":{"s":"Gets inode change time of file","p":[{"t":"filename","d":"Path to the file."}]},"filegroup":{"s":"Gets file group","p":[{"t":"filename","d":"Path to the file."}]},"fileinode":{"s":"Gets file inode","p":[{"t":"filename","d":"Path to the file."}]},"filemtime":{"s":"Gets file modification time","p":[{"t":"filename","d":"Path to the file."}]},"fileowner":{"s":"Gets file owner","p":[{"t":"filename","d":"Path to the file."}]},"fileperms":{"s":"Gets file permissions","p":[{"t":"filename","d":"Path to the file."}]},"filepro":{"s":"Read and verify the map file","p":[{"t":"directory","d":"The map directory."}]},"filepro_fieldcount":{"s":"Find out how many fields are in a filePro database","p":null},"filepro_fieldname":{"s":"Gets the name of a field","p":[{"t":"field_number","d":"The field number."}]},"filepro_fieldtype":{"s":"Gets the type of a field","p":[{"t":"field_number","d":"The field number."}]},"filepro_fieldwidth":{"s":"Gets the width of a field","p":[{"t":"field_number","d":"The field number."}]},"filepro_retrieve":{"s":"Retrieves data from a filePro database","p":[{"t":"row_number","d":"The row number. Must be between zero and the total number of rows\n       minus one (0..filepro_rowcount() - 1)"},{"t":"field_number","d":"The field number. Accepts values between zero and the total number of\n       fields minus one (0..filepro_fieldcount() - 1)"}]},"filepro_rowcount":{"s":"Find out how many rows are in a filePro database","p":null},"filesize":{"s":"Gets file size","p":[{"t":"filename","d":"Path to the file."}]},"filetype":{"s":"Gets file type","p":[{"t":"filename","d":"Path to the file."}]},"file_exists":{"s":"Checks whether a file or directory exists","p":[{"t":"filename","d":"Path to the file or directory."}]},"file_get_contents":{"s":"Reads entire file into a string","p":[{"t":"filename","d":"Name of the file to read."},{"t":"use_include_path","d":""},{"t":"context","d":"A valid context resource created with \n       stream_context_create(). If you don&#039;t need to use a\n       custom context, you can skip this parameter by NULL."},{"t":"offset","d":"The offset where the reading starts on the original stream."},{"t":"maxlen","d":"Maximum length of data read. The default is to read until end\n       of file is reached. Note that this parameter is applied to the \n       stream processed by the filters."}]},"file_put_contents":{"s":"Write a string to a file","p":[{"t":"filename","d":"Path to the file where to write the data."},{"t":"data","d":"The data to write. Can be either a string, an\n       array or a stream resource."},{"t":"flags","d":"The value of flags can be any combination of \n       the following flags, joined with the binary OR (|)\n       operator."},{"t":"context","d":"A valid context resource created with \n       stream_context_create()."}]},"finfo_buffer":{"s":"Return information about a string buffer","p":[{"t":"finfo","d":"Fileinfo resource returned by finfo_open()."},{"t":"string","d":"Content of a file to be checked."},{"t":"options","d":"One or disjunction of more Fileinfo\n       constants."},{"t":"context","d":""}]},"finfo_close":{"s":"Close fileinfo resource","p":[{"t":"finfo","d":"Fileinfo resource returned by finfo_open()."}]},"finfo_file":{"s":"Return information about a file","p":[{"t":"finfo","d":"Fileinfo resource returned by finfo_open()."},{"t":"file_name","d":"Name of a file to be checked."},{"t":"options","d":"One or disjunction of more Fileinfo\n       constants."},{"t":"context","d":"For a description of contexts, refer to Stream Functions."}]},"finfo_open":{"s":"Create a new fileinfo resource","p":[{"t":"options","d":"One or disjunction of more Fileinfo\n       constants."},{"t":"magic_file","d":"Name of a magic database file, usually something like\n       \/path\/to\/magic.mime. If not specified, the\n       MAGIC environment variable is used. If the\n       environment variable isn&#039;t set, then PHP&#039;s bundled magic database will\n       be used."}]},"finfo_set_flags":{"s":"Set libmagic configuration options","p":[{"t":"finfo","d":"Fileinfo resource returned by finfo_open()."},{"t":"options","d":"One or disjunction of more Fileinfo\n       constants."}]},"flock":{"s":"Portable advisory file locking","p":[{"t":"handle","d":"A file system pointer resource\nthat is typically created using fopen()."},{"t":"operation","d":"operation is one of the following:\n       \n        \n         \n          LOCK_SH to acquire a shared lock (reader).\n         \n        \n        \n         \n          LOCK_EX to acquire an exclusive lock (writer).\n         \n        \n        \n         \n          LOCK_UN to release a lock (shared or exclusive)."},{"t":"wouldblock","d":"The optional third argument is set to 1 if the lock would block\n       (EWOULDBLOCK errno condition). (not supported on Windows)"}]},"floor":{"s":"Round fractions down","p":[{"t":"value","d":"The numeric value to round"}]},"flush":{"s":"Flush the output buffer","p":null},"fmod":{"s":"","p":[{"t":"x","d":"The dividend"},{"t":"y","d":"The divisor"}]},"fnmatch":{"s":"Match filename against a pattern","p":[{"t":"pattern","d":"The shell wildcard pattern."},{"t":"string","d":"The tested string. This function is especially useful for filenames,\n       but may also be used on regular strings."},{"t":"flags","d":"The value of flags can be any combination of \n       the following flags, joined with the\n       binary OR (|) operator.\n       \n        \n         A list of possible flags for fnmatch()\n        \n        \n         \n          \n           Flag\n           Description\n          \n\n         \n\n         \n          \n           FNM_NOESCAPE\n           \n            Disable backslash escaping.\n           \n          \n\n          \n           FNM_PATHNAME\n           \n            Slash in string only matches slash in the given pattern.\n           \n          \n\n          \n           FNM_PERIOD\n           \n            Leading period in string must be exactly matched by period in the given pattern.\n           \n          \n\n          \n           FNM_CASEFOLD\n           \n            Caseless match. Part of the GNU extension."}]},"fopen":{"s":"Opens file or URL","p":[{"t":"filename","d":"If filename is of the form &quot;scheme:\/\/...&quot;, it\n       is assumed to be a URL and PHP will search for a protocol handler\n       (also known as a wrapper) for that scheme. If no wrappers for that\n       protocol are registered, PHP will emit a notice to help you track\n       potential problems in your script and then continue as though\n       filename specifies a regular file."}]},"fpassthru":{"s":"Output all remaining data on a file pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must point to\na file successfully opened by fopen() or\nfsockopen() (and not yet closed by\nfclose())."}]},"fprintf":{"s":"Write a formatted string to a stream","p":[{"t":"handle","d":"A file system pointer resource\nthat is typically created using fopen()."},{"t":"format","d":"See sprintf() for a description of \n       format."},{"t":"args","d":""},{"t":"...","d":""}]},"fputcsv":{"s":"Format line as CSV and write to file pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must point to\na file successfully opened by fopen() or\nfsockopen() (and not yet closed by\nfclose())."},{"t":"fields","d":"An array of values."},{"t":"delimiter","d":"The optional delimiter parameter sets the field\n       delimiter (one character only)."},{"t":"enclosure","d":"The optional enclosure parameter sets the field\n       enclosure (one character only)."}]},"fputs":{"s":"Alias of fwrite()","p":null},"fread":{"s":"Binary-safe file read","p":[{"t":"handle","d":"A file system pointer resource\nthat is typically created using fopen()."},{"t":"length","d":"Up to length number of bytes read."}]},"fribidi_log2vis":{"s":"Convert a logical string to a visual one","p":[{"t":"str","d":"The logical string."},{"t":"direction","d":"One of  FRIBIDI_RTL, \n       FRIBIDI_LTR or FRIBIDI_AUTO."},{"t":"charset","d":"One of the FRIBIDI_CHARSET_XXX constants."}]},"fscanf":{"s":"Parses input from a file according to a format","p":[{"t":"handle","d":"A file system pointer resource\nthat is typically created using fopen()."},{"t":"format","d":"The specified format as described in the \n       sprintf() documentation."},{"t":"...","d":"The optional assigned values."}]},"fseek":{"s":"Seeks on a file pointer","p":[{"t":"handle","d":"A file system pointer resource\nthat is typically created using fopen()."},{"t":"offset","d":"The offset."},{"t":"whence","d":"whence values are:\n       \n        SEEK_SET - Set position equal to offset bytes.\n        SEEK_CUR - Set position to current location plus offset.\n        SEEK_END - Set position to end-of-file plus offset."}]},"fsockopen":{"s":"Open Internet or Unix domain socket connection","p":[{"t":"hostname","d":"If OpenSSL support is\n       installed, you may prefix the hostname\n       with either ssl:\/\/ or tls:\/\/ to\n       use an SSL or TLS client connection over TCP\/IP to connect to the\n       remote host."},{"t":"port","d":"The port number. This can be omitted and skipped with\n       -1 for transports that do not use ports, such as\n       unix:\/\/."},{"t":"errno","d":"If provided, holds the system level error number that occurred in the\n       system-level connect() call."},{"t":"errstr","d":"The error message as a string."},{"t":"timeout","d":"The connection timeout, in seconds."}]},"fstat":{"s":"Gets information about a file using an open file pointer","p":[{"t":"handle","d":"A file system pointer resource\nthat is typically created using fopen()."}]},"ftell":{"s":"Returns the current position of the file read\/write pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must point to a file successfully\n       opened by fopen() or popen().\n       ftell() gives undefined results for append-only streams\n       (opened with &quot;a&quot; flag)."}]},"ftok":{"s":"Convert a pathname and a project identifier to a System V IPC key","p":[{"t":"pathname","d":"Path to an accessible file."},{"t":"proj","d":"Project identifier. This must be a one character string."}]},"ftp_alloc":{"s":"Allocates space for a file to be uploaded","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"filesize","d":"The number of bytes to allocate."},{"t":"result","d":"A textual representation of the servers response will be returned by \n       reference in result if a variable is provided."}]},"ftp_cdup":{"s":"Changes to the parent directory","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."}]},"ftp_chdir":{"s":"Changes the current directory on a FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"directory","d":"The target directory."}]},"ftp_chmod":{"s":"Set permissions on a file via FTP","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"mode","d":"The new permissions, given as an octal value."},{"t":"filename","d":"The remote file."}]},"ftp_close":{"s":"Closes an FTP connection","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."}]},"ftp_connect":{"s":"Opens an FTP connection","p":[{"t":"host","d":"The FTP server address. This parameter shouldn&#039;t have any trailing \n       slashes and shouldn&#039;t be prefixed with ftp:\/\/."},{"t":"port","d":"This parameter specifies an alternate port to connect to. If it is\n       omitted or set to zero, then the default FTP port, 21, will be used."},{"t":"timeout","d":"This parameter specifies the timeout for all subsequent network operations.\n       If omitted, the default value is 90 seconds. The timeout can be changed and\n       queried at any time with ftp_set_option() and\n       ftp_get_option()."}]},"ftp_delete":{"s":"Deletes a file on the FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"path","d":"The file to delete."}]},"ftp_exec":{"s":"Requests execution of a command on the FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"command","d":"The command to execute."}]},"ftp_fget":{"s":"Downloads a file from the FTP server and saves to an open file","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"handle","d":"An open file pointer in which we store the data."},{"t":"remote_file","d":"The remote file path."},{"t":"mode","d":"The transfer mode. Must be either FTP_ASCII or\n       FTP_BINARY."},{"t":"resumepos","d":"The position in the remote file to start downloading from."}]},"ftp_fput":{"s":"Uploads from an open file to the FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"remote_file","d":"The remote file path."},{"t":"handle","d":"An open file pointer on the local file. Reading stops at end of file."},{"t":"mode","d":"The transfer mode. Must be either FTP_ASCII or\n       FTP_BINARY."},{"t":"startpos","d":"The position in the remote file to start uploading to."}]},"ftp_get":{"s":"Downloads a file from the FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"local_file","d":"The local file path (will be overwritten if the file already exists)."},{"t":"remote_file","d":"The remote file path."},{"t":"mode","d":"The transfer mode. Must be either FTP_ASCII or\n       FTP_BINARY."},{"t":"resumepos","d":"The position in the remote file to start downloading from."}]},"ftp_get_option":{"s":"Retrieves various runtime behaviours of the current FTP stream","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"option","d":"Currently, the following options are supported:\n       \n        Supported runtime FTP options\n        \n         \n          \n           FTP_TIMEOUT_SEC\n           \n            Returns the current timeout used for network related operations.\n           \n          \n\n          \n           FTP_AUTOSEEK\n           \n            Returns TRUE if this option is on, FALSE otherwise."}]},"ftp_login":{"s":"Logs in to an FTP connection","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"username","d":"The username (USER)."},{"t":"password","d":"The password (PASS)."}]},"ftp_mdtm":{"s":"Returns the last modified time of the given file","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"remote_file","d":"The file from which to extract the last modification time."}]},"ftp_mkdir":{"s":"Creates a directory","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"directory","d":"The name of the directory that will be created."}]},"ftp_nb_continue":{"s":"Continues retrieving\/sending a file (non-blocking)","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."}]},"ftp_nb_fget":{"s":"Retrieves a file from the FTP server and writes it to an open file (non-blocking)","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"handle","d":"An open file pointer in which we store the data."},{"t":"remote_file","d":"The remote file path."},{"t":"mode","d":"The transfer mode. Must be either FTP_ASCII or\n       FTP_BINARY."},{"t":"resumepos","d":"The position in the remote file to start downloading from."}]},"ftp_nb_fput":{"s":"Stores a file from an open file to the FTP server (non-blocking)","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"remote_file","d":"The remote file path."},{"t":"handle","d":"An open file pointer on the local file. Reading stops at end of file."},{"t":"mode","d":"The transfer mode. Must be either FTP_ASCII or\n       FTP_BINARY."},{"t":"startpos","d":"The position in the remote file to start uploading to."}]},"ftp_nb_get":{"s":"Retrieves a file from the FTP server and writes it to a local file (non-blocking)","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"local_file","d":"The local file path (will be overwritten if the file already exists)."},{"t":"remote_file","d":"The remote file path."},{"t":"mode","d":"The transfer mode. Must be either FTP_ASCII or\n       FTP_BINARY."},{"t":"resumepos","d":"The position in the remote file to start downloading from."}]},"ftp_nb_put":{"s":"Stores a file on the FTP server (non-blocking)","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"remote_file","d":"The remote file path."},{"t":"local_file","d":"The local file path."},{"t":"mode","d":"The transfer mode. Must be either FTP_ASCII or\n       FTP_BINARY."},{"t":"startpos","d":"The position in the remote file to start uploading to."}]},"ftp_nlist":{"s":"Returns a list of files in the given directory","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"directory","d":"The directory to be listed. This parameter can also include arguments, eg.\n       ftp_nlist($conn_id, &quot;-la \/your\/dir&quot;);\n       Note that this parameter isn&#039;t escaped so there may be some issues with\n       filenames containing spaces and other characters."}]},"ftp_pasv":{"s":"Turns passive mode on or off","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"pasv","d":"If TRUE, the passive mode is turned on, else it&#039;s turned off."}]},"ftp_put":{"s":"Uploads a file to the FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"remote_file","d":"The remote file path."},{"t":"local_file","d":"The local file path."},{"t":"mode","d":"The transfer mode. Must be either FTP_ASCII or\n       FTP_BINARY."},{"t":"startpos","d":"The position in the remote file to start uploading to."}]},"ftp_pwd":{"s":"Returns the current directory name","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."}]},"ftp_quit":{"s":"Alias of ftp_close()","p":null},"ftp_raw":{"s":"Sends an arbitrary command to an FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"command","d":"The command to execute."}]},"ftp_rawlist":{"s":"Returns a detailed list of files in the given directory","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"directory","d":"The directory path. May include arguments for the LIST\n       command."},{"t":"recursive","d":"If set to TRUE, the issued command will be LIST -R."}]},"ftp_rename":{"s":"Renames a file or a directory on the FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"oldname","d":"The old file\/directory name."},{"t":"newname","d":"The new name."}]},"ftp_rmdir":{"s":"Removes a directory","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"directory","d":"The directory to delete. This must be either an absolute or relative\n       path to an empty directory."}]},"ftp_set_option":{"s":"Set miscellaneous runtime FTP options","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"option","d":"Currently, the following options are supported:\n       \n        Supported runtime FTP options\n        \n         \n          \n           FTP_TIMEOUT_SEC\n           \n            Changes the timeout in seconds used for all network related \n            functions. value must be an integer that\n            is greater than 0. The default timeout is 90 seconds.\n           \n          \n\n          \n           FTP_AUTOSEEK\n           \n            When enabled, GET or PUT requests with a \n            resumepos or startpos\n            parameter will first seek to the requested position within the file.\n            This is enabled by default."},{"t":"value","d":"This parameter depends on which option is chosen\n       to be altered."}]},"ftp_site":{"s":"Sends a SITE command to the server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"command","d":"The SITE command. Note that this parameter isn&#039;t escaped so there may\n       be some issues with filenames containing spaces and other characters."}]},"ftp_size":{"s":"Returns the size of the given file","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."},{"t":"remote_file","d":"The remote file."}]},"ftp_ssl_connect":{"s":"Opens an Secure SSL-FTP connection","p":[{"t":"host","d":"The FTP server address. This parameter shouldn&#039;t have any trailing \n       slashes and shouldn&#039;t be prefixed with ftp:\/\/."},{"t":"port","d":"This parameter specifies an alternate port to connect to. If it is\n       omitted or set to zero, then the default FTP port, 21, will be used."},{"t":"timeout","d":"This parameter specifies the timeout for all subsequent network operations.\n       If omitted, the default value is 90 seconds. The timeout can be changed and\n       queried at any time with ftp_set_option() and\n       ftp_get_option()."}]},"ftp_systype":{"s":"Returns the system type identifier of the remote FTP server","p":[{"t":"ftp_stream","d":"The link identifier of the FTP connection."}]},"ftruncate":{"s":"Truncates a file to a given length","p":[{"t":"handle","d":"The file pointer."},{"t":"size","d":"The size to truncate to."}]},"fwrite":{"s":"Binary-safe file write","p":[{"t":"handle","d":"A file system pointer resource\nthat is typically created using fopen()."},{"t":"string","d":"The string that is to be written."},{"t":"length","d":"If the length argument is given, writing will\n       stop after length bytes have been written or\n       the end of string is reached, whichever comes\n       first."}]},"gc_collect_cycles":{"s":"Forces collection of any existing garbage cycles","p":null},"gc_disable":{"s":"Deactivates the circular reference collector","p":null},"gc_enable":{"s":"Activates the circular reference collector","p":null},"gc_enabled":{"s":"Returns status of the circular reference collector","p":null},"gd_info":{"s":"Retrieve information about the currently installed GD library","p":null},"geoip_continent_code_by_name":{"s":"Get the two letter continent code","p":[{"t":"hostname","d":"The hostname or IP address whose location is to be looked-up."}]},"geoip_country_code3_by_name":{"s":"Get the three letter country code","p":[{"t":"hostname","d":"The hostname or IP address whose location is to be looked-up."}]},"geoip_country_code_by_name":{"s":"Get the two letter country code","p":[{"t":"hostname","d":"The hostname or IP address whose location is to be looked-up."}]},"geoip_country_name_by_name":{"s":"Get the full country name","p":[{"t":"hostname","d":"The hostname or IP address whose location is to be looked-up."}]},"geoip_database_info":{"s":"Get GeoIP Database information","p":[{"t":"database","d":"The database type as an integer. You can use the\n       various constants defined with\n       this extension (ie: GEOIP_*_EDITION)."}]},"geoip_db_avail":{"s":"Determine if GeoIP Database is available","p":[{"t":"database","d":"The database type as an integer. You can use the\n       various constants defined with\n       this extension (ie: GEOIP_*_EDITION)."}]},"geoip_db_filename":{"s":"Returns the filename of the corresponding GeoIP Database","p":[{"t":"database","d":"The database type as an integer. You can use the\n       various constants defined with\n       this extension (ie: GEOIP_*_EDITION)."}]},"geoip_db_get_all_info":{"s":"Returns detailed information about all GeoIP database types","p":null},"geoip_id_by_name":{"s":"Get the Internet connection type","p":[{"t":"hostname","d":"The hostname or IP address whose connection type is to be looked-up."}]},"geoip_isp_by_name":{"s":"Get the Internet Service Provider (ISP) name","p":[{"t":"hostname","d":"The hostname or IP address."}]},"geoip_org_by_name":{"s":"Get the organization name","p":[{"t":"hostname","d":"The hostname or IP address."}]},"geoip_record_by_name":{"s":"Returns the detailed City information found in the GeoIP Database","p":[{"t":"hostname","d":"The hostname or IP address whose record is to be looked-up."}]},"geoip_region_by_name":{"s":"Get the country code and region","p":[{"t":"hostname","d":"The hostname or IP address whose region is to be looked-up."}]},"geoip_region_name_by_code":{"s":"Returns the region name for some country and region code combo","p":[{"t":"country_code","d":"The two-letter country code (see\n       geoip_country_code_by_name())"},{"t":"region_code","d":"The two-letter (or digit) region code (see \n       geoip_region_by_name())"}]},"geoip_time_zone_by_country_and_region":{"s":"Returns the time zone for some country and region code combo","p":[{"t":"country_code","d":"The two-letter country code (see\n       geoip_country_code_by_name())"},{"t":"region_code","d":"The two-letter (or digit) region code (see \n       geoip_region_by_name())"}]},"getallheaders":{"s":"Fetch all HTTP request headers","p":null},"getcwd":{"s":"Gets the current working directory","p":null},"getdate":{"s":"Get date\/time information","p":[{"t":"timestamp","d":"The optional timestamp parameter is an\ninteger Unix timestamp that defaults to the current\nlocal time if a timestamp is not given. In other\nwords, it defaults to the value of time()."}]},"getenv":{"s":"Gets the value of an environment variable","p":[{"t":"varname","d":"The variable name."}]},"gethostbyaddr":{"s":"","p":[{"t":"ip_address","d":"The host IP address."}]},"gethostbyname":{"s":"","p":[{"t":"hostname","d":"The host name."}]},"gethostbynamel":{"s":"","p":[{"t":"hostname","d":"The host name."}]},"gethostname":{"s":"Gets the host name","p":null},"getimagesize":{"s":"Get the size of an image","p":[{"t":"filename","d":"This parameter specifies the file you wish to retrieve information\n        about. It can reference a local file or (configuration permitting) a\n        remote file using one of the supported streams."},{"t":"imageinfo","d":"This optional parameter allows you to extract some extended\n       information from the image file. Currently, this will return the\n       different JPG APP markers as an associative array.\n       Some programs use these APP markers to embed text information in \n       images. A very common one is to embed \n       &raquo;&nbsp;IPTC information in the APP13 marker.\n       You can use the iptcparse() function to parse the\n       binary APP13 marker into something readable."}]},"getimagesizefromstring":{"s":"Get the size of an image from a string","p":[{"t":"imagedata","d":"The image data, as a string."},{"t":"imageinfo","d":"See getimagesize()."}]},"getlastmod":{"s":"Gets time of last page modification","p":null},"getmxrr":{"s":"Get MX records corresponding to a given Internet host name","p":[{"t":"hostname","d":"The Internet host name."},{"t":"mxhosts","d":"A list of the MX records found is placed into the array\n       mxhosts."},{"t":"weight","d":"If the weight array is given, it will be filled\n       with the weight information gathered."}]},"getmygid":{"s":"Get PHP script owner&#039;s GID","p":null},"getmyinode":{"s":"Gets the inode of the current script","p":null},"getmypid":{"s":"Gets PHP&#039;s process ID","p":null},"getmyuid":{"s":"Gets PHP script owner&#039;s UID","p":null},"getopt":{"s":"Gets options from the command line argument list","p":[{"t":"options","d":""},{"t":"longopts","d":""}]},"getprotobyname":{"s":"Get protocol number associated with protocol name","p":[{"t":"name","d":"The protocol name."}]},"getprotobynumber":{"s":"Get protocol name associated with protocol number","p":[{"t":"number","d":"The protocol number."}]},"getrandmax":{"s":"Show largest possible random value","p":null},"getrusage":{"s":"Gets the current resource usages","p":[{"t":"who","d":"If who is 1, getrusage will be called with\n       RUSAGE_CHILDREN."}]},"getservbyname":{"s":"Get port number associated with an Internet service and protocol","p":[{"t":"service","d":"The Internet service name, as a string."},{"t":"protocol","d":"protocol is either &quot;tcp&quot;\n       or &quot;udp&quot; (in lowercase)."}]},"getservbyport":{"s":"Get Internet service which corresponds to port and protocol","p":[{"t":"port","d":"The port number."},{"t":"protocol","d":"protocol is either &quot;tcp&quot;\n       or &quot;udp&quot; (in lowercase)."}]},"gettext":{"s":"Lookup a message in the current domain","p":[{"t":"message","d":"The message being translated."}]},"gettimeofday":{"s":"Get current time","p":[{"t":"return_float","d":"When set to TRUE, a float instead of an array is returned."}]},"get_browser":{"s":"Tells what the user&#039;s browser is capable of","p":[{"t":"user_agent","d":"The User Agent to be analyzed. By default, the value of HTTP\n       User-Agent header is used; however, you can alter this (i.e., look up\n       another browser&#039;s info) by passing this parameter."},{"t":"return_array","d":"If set to TRUE, this function will return an array\n       instead of an object."}]},"get_called_class":{"s":"the &quot;Late Static Binding&quot; class name","p":null},"get_cfg_var":{"s":"Gets the value of a PHP configuration option","p":[{"t":"option","d":"The configuration option name."}]},"get_class":{"s":"Returns the name of the class of an object","p":[{"t":"object","d":"The tested object. This parameter may be omitted when inside a class."}]},"get_class_methods":{"s":"Gets the class methods&#039; names","p":[{"t":"class_name","d":"The class name or an object instance"}]},"get_class_vars":{"s":"Get the default properties of the class","p":[{"t":"class_name","d":"The class name"}]},"get_current_user":{"s":"Gets the name of the owner of the current PHP script","p":null},"get_declared_classes":{"s":"Returns an array with the name of the defined classes","p":null},"get_declared_interfaces":{"s":"Returns an array of all declared interfaces","p":null},"get_declared_traits":{"s":"Returns an array of all declared traits","p":null},"get_defined_constants":{"s":"Returns an associative array with the names of all the constants and their values","p":[{"t":"categorize","d":""}]},"get_extension_funcs":{"s":"Returns an array with the names of the functions of a module","p":[{"t":"module_name","d":"The module name."}]},"get_headers":{"s":"Fetches all the headers sent by the server in response to a HTTP request","p":[{"t":"url","d":"The target URL."},{"t":"format","d":"If the optional format parameter is set to non-zero,\n       get_headers() parses the response and sets the \n       array&#039;s keys."}]},"get_html_translation_table":{"s":"Returns the translation table used by htmlspecialchars()","p":[{"t":"table","d":"Which table to return. Either HTML_ENTITIES or\n       HTML_SPECIALCHARS."},{"t":"flags","d":"A bitmask of one or more of the following flags, which specify which quotes the\n       table will contain as well as which document type the table is for. The default is\n       ENT_COMPAT | ENT_HTML401.\n       \n        Available flags constants\n        \n         \n          \n           Constant Name\n           Description\n          \n\n         \n\n         \n          \n           ENT_COMPAT\n           Table will contain entities for double-quotes, but not for single-quotes.\n          \n\n          \n           ENT_QUOTES\n           Table will contain entities for both double and single quotes.\n          \n\n          \n           ENT_NOQUOTES\n           Table will neither contain entities for single quotes nor for double quotes.\n          \n\n          \n           ENT_HTML401\n           Table for HTML 4.01.\n          \n\n          \n           ENT_XML1\n           Table for XML 1.\n          \n\n          \n           ENT_XHTML\n           Table for XHTML.\n          \n\n          \n           ENT_HTML5\n           Table for HTML 5."},{"t":"encoding","d":"Encoding to use.\n       If omitted, the default value for this argument is ISO-8859-1 in\n       versions of PHP prior to 5.4.0, and UTF-8 from PHP 5.4.0 onwards."}]},"get_included_files":{"s":"Returns an array with the names of included or required files","p":null},"get_include_path":{"s":"Gets the current include_path configuration option","p":null},"get_loaded_extensions":{"s":"Returns an array with the names of all modules compiled and loaded","p":[{"t":"zend_extensions","d":"Only return Zend extensions, if not then regular extensions, like \n       mysqli are listed. Defaults to FALSE (return regular extensions)."}]},"get_magic_quotes_gpc":{"s":"Gets the current configuration setting of magic_quotes_gpc","p":null},"get_magic_quotes_runtime":{"s":"Gets the current active configuration setting of magic_quotes_runtime","p":null},"get_meta_tags":{"s":"Extracts all meta tag content attributes from a file and returns an array","p":[{"t":"filename","d":"The path to the HTML file, as a string. This can be a local file or an\n       URL."}]},"get_object_vars":{"s":"Gets the properties of the given object","p":[{"t":"object","d":"An object instance."}]},"get_parent_class":{"s":"Retrieves the parent class name for object or class","p":[{"t":"object","d":"The tested object or class name"}]},"get_required_files":{"s":"Alias of get_included_files()","p":null},"glob":{"s":"Find pathnames matching a pattern","p":[{"t":"pattern","d":"The pattern. No tilde expansion or parameter substitution is done."},{"t":"flags","d":"Valid flags:\n       \n        \n         \n          GLOB_MARK - Adds a slash to each directory returned\n         \n        \n        \n         \n          GLOB_NOSORT - Return files as they appear in the\n          directory (no sorting)\n         \n        \n        \n         \n          GLOB_NOCHECK - Return the search pattern if no\n          files matching it were found\n         \n        \n        \n         \n          GLOB_NOESCAPE - Backslashes do not quote\n          metacharacters\n         \n        \n        \n         \n          GLOB_BRACE - Expands {a,b,c} to match &#039;a&#039;, &#039;b&#039;,\n          or &#039;c&#039;\n         \n        \n        \n         \n          GLOB_ONLYDIR - Return only directory entries\n          which match the pattern\n         \n        \n        \n         \n          GLOB_ERR - Stop on read errors (like unreadable\n          directories), by default errors are ignored."}]},"gmdate":{"s":"Format a GMT\/UTC date\/time","p":[{"t":"format","d":"The format of the outputted date string. See the formatting\n       options for the date() function."},{"t":"timestamp","d":"The optional timestamp parameter is an\ninteger Unix timestamp that defaults to the current\nlocal time if a timestamp is not given. In other\nwords, it defaults to the value of time()."}]},"gmmktime":{"s":"Get Unix timestamp for a GMT date","p":[{"t":"hour","d":"The number of the hour relative to the start of the day determined by\n       month, day and year.\n       Negative values reference the hour before midnight of the day in question.\n       Values greater than 23 reference the appropriate hour in the following day(s)."},{"t":"minute","d":"The number of the minute relative to the start of the hour.\n       Negative values reference the minute in the previous hour.\n       Values greater than 59 reference the appropriate minute in the following hour(s)."},{"t":"second","d":"The number of seconds relative to the start of the minute.\n       Negative values reference the second in the previous minute.\n       Values greater than 59 reference the appropriate second in the following minute(s)."},{"t":"month","d":"The number of the month relative to the end of the previous year.\n       Values 1 to 12 reference the normal calendar months of the year in question.\n       Values less than 1 (including negative values) reference the months in the previous year in reverse order, so 0 is December, -1 is November, etc.\n       Values greater than 12 reference the appropriate month in the following year(s)."},{"t":"day","d":"The number of the day relative to the end of the previous month.\n       Values 1 to 28, 29, 30 or 31 (depending upon the month) reference the normal days in the relevant month.\n       Values less than 1 (including negative values) reference the days in the previous month, so 0 is the last day of the previous month, -1 is the day before that, etc.\n       Values greater than the number of days in the relevant month reference the appropriate day in the following month(s)."},{"t":"year","d":"The year"},{"t":"is_dst","d":"Parameters always represent a GMT date so is_dst\n       doesn&#039;t influence the result."}]},"gmp_abs":{"s":"Absolute value","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_add":{"s":"Add numbers","p":[{"t":"a","d":"A number that will be added."},{"t":"b","d":"A number that will be added."}]},"gmp_and":{"s":"Bitwise AND","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"b","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_clrbit":{"s":"Clear bit","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"index","d":"The index of the bit to clear.  Index 0 represents the least significant bit."}]},"gmp_cmp":{"s":"Compare numbers","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"b","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_com":{"s":"Calculates one&#039;s complement","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_div":{"s":"Alias of gmp_div_q()","p":null},"gmp_divexact":{"s":"Exact division of numbers","p":[{"t":"n","d":"The number being divided."},{"t":"d","d":"The number that a is being divided by."}]},"gmp_div_q":{"s":"Divide numbers","p":[{"t":"a","d":"The number being divided."},{"t":"b","d":"The number that a is being divided by."},{"t":"round","d":"The result rounding is defined by the\n       round, which can have the following\n       values:\n       \n        \n         \n          GMP_ROUND_ZERO: The result is truncated\n          towards 0.\n         \n        \n        \n         \n          GMP_ROUND_PLUSINF: The result is\n          rounded towards +infinity.\n         \n        \n        \n         \n          GMP_ROUND_MINUSINF: The result is\n          rounded towards -infinity."}]},"gmp_div_qr":{"s":"Divide numbers and get quotient and remainder","p":[{"t":"n","d":"The number being divided."},{"t":"d","d":"The number that n is being divided by."},{"t":"round","d":"See the gmp_div_q() function for description\n       of the round argument."}]},"gmp_div_r":{"s":"Remainder of the division of numbers","p":[{"t":"n","d":"The number being divided."},{"t":"d","d":"The number that n is being divided by."},{"t":"round","d":"See the gmp_div_q() function for description\n       of the round argument."}]},"gmp_fact":{"s":"Factorial","p":[{"t":"a","d":"The factorial number."}]},"gmp_gcd":{"s":"Calculate GCD","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"b","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_gcdext":{"s":"Calculate GCD and multipliers","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"b","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_hamdist":{"s":"Hamming distance","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"b","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_init":{"s":"Create GMP number","p":[{"t":"number","d":"An integer or a string. The string representation can be decimal, \n       hexadecimal or octal."},{"t":"base","d":"The base."}]},"gmp_intval":{"s":"Convert GMP number to integer","p":[{"t":"gmpnumber","d":"A GMP number."}]},"gmp_invert":{"s":"Inverse by modulo","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"b","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_jacobi":{"s":"Jacobi symbol","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"p","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_legendre":{"s":"Legendre symbol","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"p","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_mod":{"s":"Modulo operation","p":[{"t":"n","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"d","d":"The modulo that is being evaluated."}]},"gmp_mul":{"s":"Multiply numbers","p":[{"t":"a","d":"A number that will be multiplied by b."},{"t":"b","d":"A number that will be multiplied by a."}]},"gmp_neg":{"s":"Negate number","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_nextprime":{"s":"Find next prime number","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_or":{"s":"Bitwise OR","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"b","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_perfect_square":{"s":"Perfect square check","p":[{"t":"a","d":"The number being checked as a perfect square."}]},"gmp_popcount":{"s":"Population count","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_pow":{"s":"Raise number into power","p":[{"t":"base","d":"The base number."},{"t":"exp","d":"The positive power to raise the base."}]},"gmp_powm":{"s":"Raise number into power with modulo","p":[{"t":"base","d":"The base number."},{"t":"exp","d":"The positive power to raise the base."},{"t":"mod","d":"The modulo."}]},"gmp_prob_prime":{"s":"Check if number is &quot;probably prime&quot;","p":[{"t":"a","d":"The number being checked as a prime."},{"t":"reps","d":"Reasonable values\n       of reps vary from 5 to 10 (default being\n       10); a higher value lowers the probability for a non-prime to\n       pass as a &quot;probable&quot; prime."}]},"gmp_random":{"s":"Random number","p":[{"t":"limiter","d":"The limiter."}]},"gmp_scan0":{"s":"Scan for 0","p":[{"t":"a","d":"The number to scan."},{"t":"start","d":"The starting bit."}]},"gmp_scan1":{"s":"Scan for 1","p":[{"t":"a","d":"The number to scan."},{"t":"start","d":"The starting bit."}]},"gmp_setbit":{"s":"Set bit","p":[{"t":"a","d":"The value to modify."},{"t":"index","d":"The index of the bit to set.  Index 0 represents the least significant bit."},{"t":"bit_on","d":"True to set the bit (set it to 1\/on); false to clear the bit (set it to 0\/off)."}]},"gmp_sign":{"s":"Sign of number","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_sqrt":{"s":"Calculate square root","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmp_sqrtrem":{"s":"Square root with remainder","p":[{"t":"a","d":"The number being square rooted."}]},"gmp_strval":{"s":"Convert GMP number to string","p":[{"t":"gmpnumber","d":"The GMP number that will be converted to a string."},{"t":"base","d":"The base of the returned number. The default base is 10. \n       Allowed values for the base are from 2 to 62 and -2 to -36."}]},"gmp_sub":{"s":"Subtract numbers","p":[{"t":"a","d":"The number being subtracted from."},{"t":"b","d":"The number subtracted from a."}]},"gmp_testbit":{"s":"Tests if a bit is set","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"index","d":"The bit to test"}]},"gmp_xor":{"s":"Bitwise XOR","p":[{"t":"a","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."},{"t":"b","d":"It can be either a GMP number resource, or a\nnumeric string given that it is possible to convert the latter to a number."}]},"gmstrftime":{"s":"Format a GMT\/UTC time\/date according to locale settings","p":[{"t":"format","d":"See description in strftime()."},{"t":"timestamp","d":"The optional timestamp parameter is an\ninteger Unix timestamp that defaults to the current\nlocal time if a timestamp is not given. In other\nwords, it defaults to the value of time()."}]},"gnupg_adddecryptkey":{"s":"Add a key for decryption","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"fingerprint","d":"The fingerprint key."},{"t":"passphrase","d":"The pass phrase."}]},"gnupg_addencryptkey":{"s":"Add a key for encryption","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"fingerprint","d":"The fingerprint key."}]},"gnupg_addsignkey":{"s":"Add a key for signing","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"fingerprint","d":"The fingerprint key."},{"t":"passphrase","d":"The pass phrase."}]},"gnupg_cleardecryptkeys":{"s":"Removes all keys which were set for decryption before","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."}]},"gnupg_clearencryptkeys":{"s":"Removes all keys which were set for encryption before","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."}]},"gnupg_clearsignkeys":{"s":"Removes all keys which were set for signing before","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."}]},"gnupg_decrypt":{"s":"Decrypts a given text","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"text","d":"The text being decrypted."}]},"gnupg_decryptverify":{"s":"Decrypts and verifies a given text","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"text","d":"The text being decrypted."},{"t":"plaintext","d":"The parameter plaintext gets filled with the decrypted\n       text."}]},"gnupg_encrypt":{"s":"Encrypts a given text","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"plaintext","d":"The text being encrypted."}]},"gnupg_encryptsign":{"s":"Encrypts and signs a given text","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"plaintext","d":"The text being encrypted."}]},"gnupg_export":{"s":"Exports a key","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"fingerprint","d":"The fingerprint key."}]},"gnupg_geterror":{"s":"Returns the errortext, if a function fails","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."}]},"gnupg_getprotocol":{"s":"Returns the currently active protocol for all operations","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."}]},"gnupg_import":{"s":"Imports a key","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"keydata","d":"The data key that is being imported."}]},"gnupg_init":{"s":"Initialize a connection","p":null},"gnupg_keyinfo":{"s":"Returns an array with information about all keys that matches the given pattern","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"pattern","d":"The pattern being checked against the keys."}]},"gnupg_setarmor":{"s":"Toggle armored output","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"armor","d":"Pass a non-zero integer-value to this function to enable armored-output\n       (default).\n       Pass 0 to disable armored output."}]},"gnupg_seterrormode":{"s":"Sets the mode for error_reporting","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"errormode","d":"The error mode."}]},"gnupg_setsignmode":{"s":"Sets the mode for signing","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"sigmode","d":"The mode for signing."}]},"gnupg_sign":{"s":"Signs a given text","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"plaintext","d":"The plain text being signed."}]},"gnupg_verify":{"s":"Verifies a signed text","p":[{"t":"identifier","d":"The gnupg identifier, from a call to\ngnupg_init() or gnupg."},{"t":"signed_text","d":"The signed text."},{"t":"signature","d":"The signature.\n       To verify a clearsigned text, set signature to FALSE."},{"t":"plaintext","d":"The plain text.\n       If this optional parameter is passed, it is\n       filled with the plain text."}]},"gopher_parsedir":{"s":"Translate a gopher formatted directory entry into an associative array.","p":[{"t":"dirent","d":"The directory entry."}]},"grapheme_extract":{"s":"Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.","p":[{"t":"haystack","d":"String to search."},{"t":"size","d":"Maximum number items - based on the $extract_type - to return."},{"t":"extract_type","d":"Defines the type of units referred to by the $size parameter:"},{"t":"start","d":"Starting position in $haystack in bytes - if given, it must be zero or a\n       positive value that is less than or equal to the length of $haystack in\n       bytes. If $start does not point to the first byte of a UTF-8\n       character, the start position is moved to the next character boundary."},{"t":"next","d":"Reference to a value that will be set to the next starting position.\n       When the call returns, this may point to the first byte position past the end of the string."}]},"grapheme_stripos":{"s":"Find position (in grapheme units) of first occurrence of a case-insensitive string","p":[{"t":"haystack","d":"The string to look in. Must be valid UTF-8."},{"t":"needle","d":"The string to look for. Must be valid UTF-8."},{"t":"offset","d":"The optional $offset parameter allows you to specify where in haystack to\n       start searching as an offset in grapheme units (not bytes or characters).\n       The position returned is still relative to the beginning of haystack\n       regardless of the value of $offset."}]},"grapheme_stristr":{"s":"Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.","p":[{"t":"haystack","d":"The input string. Must be valid UTF-8."},{"t":"needle","d":"The string to look for. Must be valid UTF-8."},{"t":"before_needle","d":"If TRUE, grapheme_strstr() returns the part of the\n       haystack before the first occurrence of the needle (excluding needle)."}]},"grapheme_strlen":{"s":"Get string length in grapheme units","p":[{"t":"input","d":"The string being measured for length. It must be a valid UTF-8 string."}]},"grapheme_strpos":{"s":"Find position (in grapheme units) of first occurrence of a string","p":[{"t":"haystack","d":"The string to look in. Must be valid UTF-8."},{"t":"needle","d":"The string to look for. Must be valid UTF-8."},{"t":"offset","d":"The optional $offset parameter allows you to specify where in $haystack to\n       start searching as an offset in grapheme units (not bytes or characters).\n       The position returned is still relative to the beginning of haystack\n       regardless of the value of $offset."}]},"grapheme_strripos":{"s":"Find position (in grapheme units) of last occurrence of a case-insensitive string","p":[{"t":"haystack","d":"The string to look in. Must be valid UTF-8."},{"t":"needle","d":"The string to look for. Must be valid UTF-8."},{"t":"offset","d":"The optional $offset parameter allows you to specify where in $haystack to\n       start searching as an offset in grapheme units (not bytes or characters).\n       The position returned is still relative to the beginning of haystack\n       regardless of the value of $offset."}]},"grapheme_strrpos":{"s":"Find position (in grapheme units) of last occurrence of a string","p":[{"t":"haystack","d":"The string to look in. Must be valid UTF-8."},{"t":"needle","d":"The string to look for. Must be valid UTF-8."},{"t":"offset","d":"The optional $offset parameter allows you to specify where in $haystack to\n       start searching as an offset in grapheme units (not bytes or characters).\n       The position returned is still relative to the beginning of haystack\n       regardless of the value of $offset."}]},"grapheme_strstr":{"s":"Returns part of haystack string from the first occurrence of needle to the end of haystack.","p":[{"t":"haystack","d":"The input string. Must be valid UTF-8."},{"t":"needle","d":"The string to look for. Must be valid UTF-8."},{"t":"before_needle","d":"If TRUE, grapheme_strstr() returns the part of the\n       haystack before the first occurrence of the needle (excluding the needle)."}]},"grapheme_substr":{"s":"Return part of a string","p":[{"t":"string","d":"The input string. Must be valid UTF-8."},{"t":"start","d":"Start position in default grapheme units.\n       If $start is non-negative, the returned string will start at the\n       $start&#039;th position in $string, counting from zero. If $start is negative,\n       the returned string will start at the $start&#039;th grapheme unit from the \n       end of string."},{"t":"length","d":"Length in grapheme units.\n       If $length  is given and is positive, the string returned will contain\n       at most $length grapheme units beginning from $start (depending on the \n       length of string). If $length is given and is negative, then\n       that many grapheme units will be omitted from the end of string (after the\n       start position has been calculated when a start is negative). If $start\n       denotes a position beyond this truncation, FALSE will be returned."}]},"gupnp_context_get_host_ip":{"s":"Get the IP address","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."}]},"gupnp_context_get_port":{"s":"Get the port","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."}]},"gupnp_context_get_subscription_timeout":{"s":"Get the event subscription timeout","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."}]},"gupnp_context_host_path":{"s":"Start hosting","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."},{"t":"local_path","d":"Path to the local file or folder to be hosted."},{"t":"server_path","d":"Web server path where local_path should be hosted."}]},"gupnp_context_new":{"s":"Create a new context","p":[{"t":"host_ip","d":"The local host&#039;s IP address, or NULL to use the IP address of the first non-loopback network interface."},{"t":"port","d":"Port to run on, or 0 if you don&#039;t care what port is used."}]},"gupnp_context_set_subscription_timeout":{"s":"Sets the event subscription timeout","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."},{"t":"timeout","d":"The event subscription timeout in seconds.\n       Use 0 if you don&#039;t want subscriptions to time out."}]},"gupnp_context_timeout_add":{"s":"Sets a function to be called at regular intervals","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."},{"t":"timeout","d":"A timeout in miliseconds."},{"t":"callback","d":"The callback function calling every timeout period of time. \n       Typically, callback function takes on arg parameter."},{"t":"arg","d":"User data for callback."}]},"gupnp_context_unhost_path":{"s":"Stop hosting","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."},{"t":"server_path","d":"Web server path where the file or folder is hosted."}]},"gupnp_control_point_browse_start":{"s":"Start browsing","p":[{"t":"cpoint","d":"A control point identifier, returned by gupnp_control_point_new()."}]},"gupnp_control_point_browse_stop":{"s":"Stop browsing","p":[{"t":"cpoint","d":"A control point identifier, returned by gupnp_control_point_new()."}]},"gupnp_control_point_callback_set":{"s":"Set control point callback","p":[{"t":"cpoint","d":"A control point identifier, returned by gupnp_control_point_new()."},{"t":"signal","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"callback","d":"The callback function for the certain signal. Typically, callback function \n       takes on two parameters. The proxy parameter&#039;s \n       identifier being the first, and the arg second."},{"t":"arg","d":"User data for callback."}]},"gupnp_control_point_new":{"s":"Create a new control point","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."},{"t":"target","d":"The search target. target should be a service \n       or device name, such as urn:schemas-upnp-org:service:WANIPConnection:1 or\n       urn:schemas-upnp-org:device:MediaRenderer:1."}]},"gupnp_device_action_callback_set":{"s":"Set device callback function","p":[{"t":"root_device","d":"A root device identifier, returned by gupnp_root_device_new()."},{"t":"signal","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"action_name","d":"The name of action."},{"t":"callback","d":"The callback function for the certain signal. Typically, callback function \n       takes on three parameters. The service parameter&#039;s \n       identifier being the first, action parameter&#039;s \n       identifier (in case GUPNP_SIGNAL_ACTION_INVOKED signal) or \n       error parameter&#039;s message (in case GUPNP_SIGNAL_NOTIFY_FAILED \n       signal) being the second, and the arg is third."},{"t":"arg","d":"User data for callback."}]},"gupnp_device_info_get":{"s":"Get info of root device","p":[{"t":"root_device","d":"A root device identifier, returned by gupnp_root_device_new()."}]},"gupnp_device_info_get_service":{"s":"Get the service with type","p":[{"t":"root_device","d":"A root device identifier, returned by gupnp_root_device_new()."},{"t":"type","d":"The type of the service to be retrieved."}]},"gupnp_root_device_get_available":{"s":"Check whether root device is available","p":[{"t":"root_device","d":"A root device identifier, returned by gupnp_root_device_new()."}]},"gupnp_root_device_get_relative_location":{"s":"Get the relative location of root device.","p":[{"t":"root_device","d":"A root device identifier, returned by gupnp_root_device_new()."}]},"gupnp_root_device_new":{"s":"Create a new root device","p":[{"t":"context","d":"A context identifier, returned by gupnp_context_new()."},{"t":"location","d":"Location of the description file for this device, relative to the HTTP root"}]},"gupnp_root_device_set_available":{"s":"Set whether or not root_device is available","p":[{"t":"root_device","d":"A root device identifier, returned by gupnp_root_device_new()."},{"t":"available","d":"Set TRUE if root_device should be available."}]},"gupnp_root_device_start":{"s":" Start main loop","p":[{"t":"root_device","d":"A root device identifier, returned by gupnp_root_device_new()."}]},"gupnp_root_device_stop":{"s":"Stop main loop","p":[{"t":"root_device","d":"A root device identifier, returned by gupnp_root_device_new()."}]},"gupnp_service_action_get":{"s":"Retrieves the specified action arguments","p":[{"t":"action","d":"A service action identifier."},{"t":"name","d":"The name of the variable to retrieve."},{"t":"type","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""}]},"gupnp_service_action_return":{"s":"Return successfully","p":[{"t":"action","d":"A service action identifier."}]},"gupnp_service_action_return_error":{"s":"Return error code","p":[{"t":"action","d":"A service action identifier."},{"t":"error_code","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"error_description","d":"The error description."}]},"gupnp_service_action_set":{"s":"Sets the specified action return values","p":[{"t":"action","d":"A service action identifier."},{"t":"name","d":"The name of the variable to retrieve."},{"t":"type","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"value","d":"The value of the variable to retrieve."}]},"gupnp_service_freeze_notify":{"s":"Freeze new notifications","p":[{"t":"service","d":"A service identifier."}]},"gupnp_service_info_get":{"s":"Get full info of service","p":[{"t":"proxy","d":"A service proxy identifier."}]},"gupnp_service_info_get_introspection":{"s":"Get resource introspection of service","p":[{"t":"proxy","d":"A service proxy identifier."},{"t":"callback","d":"The callback function to be called when introspection object is ready.\n       Typically, callback function takes on three parameters. The introspection \n       parameter&#039;s identifier being the first, error parameter&#039;s message \n       being the second, and the arg is third."},{"t":"arg","d":"User data for callback."}]},"gupnp_service_introspection_get_state_variable":{"s":"Returns the state variable data","p":[{"t":"introspection","d":"A introspection identifier."},{"t":"variable_name","d":"The name of the variable to retreive."}]},"gupnp_service_notify":{"s":"Notifies listening clients","p":[{"t":"service","d":"A service identifier."},{"t":"name","d":"The name of the variable."},{"t":"type","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"value","d":"The value of the variable."}]},"gupnp_service_proxy_action_get":{"s":"Send action to the service and get value","p":[{"t":"proxy","d":"A service proxy identifier."},{"t":"action","d":"An action."},{"t":"name","d":"The action name."},{"t":"type","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""}]},"gupnp_service_proxy_action_set":{"s":"Send action to the service and set value","p":[{"t":"proxy","d":"A service proxy identifier."},{"t":"action","d":"An action."},{"t":"name","d":"The action name."},{"t":"value","d":"The action value."},{"t":"type","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""}]},"gupnp_service_proxy_add_notify":{"s":"Sets up callback for variable change notification","p":[{"t":"proxy","d":"A service proxy identifier."},{"t":"value","d":"The variable to add notification for."},{"t":"type","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"callback","d":"The callback to call when variable changes. Typically, callback function \n       takes on three parameters. The variable \n       parameter being the first, value parameter\n       being the second, and the arg is third."},{"t":"arg","d":"User data for callback."}]},"gupnp_service_proxy_callback_set":{"s":"Set service proxy callback for signal","p":[{"t":"proxy","d":"A service proxy identifier."},{"t":"signal","d":""},{"t":"","d":""},{"t":"callback","d":"The callback function for the certain signal. Typically, callback function \n       takes on two parameters.  error parameter&#039;s message \n       being the first, and the arg is second."},{"t":"arg","d":"User data for callback."}]},"gupnp_service_proxy_get_subscribed":{"s":"Check whether subscription is valid to the service","p":[{"t":"proxy","d":"A service proxy identifier."}]},"gupnp_service_proxy_remove_notify":{"s":"Cancels the variable change notification","p":[{"t":"proxy","d":"A service proxy identifier."},{"t":"value","d":"The variable to add notification for."}]},"gupnp_service_proxy_set_subscribed":{"s":"(Un)subscribes to the service.","p":[{"t":"proxy","d":"A service proxy identifier."},{"t":"subscribed","d":"Set TRUE to subscribe to this service."}]},"gupnp_service_thaw_notify":{"s":"Sends out any pending notifications and stops queuing of new ones.","p":[{"t":"service","d":"A service identifier."}]},"gzclose":{"s":"Close an open gz-file pointer","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."}]},"gzcompress":{"s":"Compress a string","p":[{"t":"data","d":"The data to compress."},{"t":"level","d":"The level of compression. Can be given as 0 for no compression up to 9\n       for maximum compression."},{"t":"encoding","d":"One of ZLIB_ENCODING_* constants."}]},"gzdecode":{"s":"Decodes a gzip compressed string","p":[{"t":"data","d":"The data to decode, encoded by gzencode()."},{"t":"length","d":"The maximum length of data to decode."}]},"gzdeflate":{"s":"Deflate a string","p":[{"t":"data","d":"The data to deflate."},{"t":"level","d":"The level of compression. Can be given as 0 for no compression up to 9\n       for maximum compression. If not given, the default compression level will\n       be the default compression level of the zlib library."},{"t":"encoding","d":"One of ZLIB_ENCODING_* constants."}]},"gzencode":{"s":"Create a gzip compressed string","p":[{"t":"data","d":"The data to encode."},{"t":"level","d":"The level of compression. Can be given as 0 for no compression up to 9\n       for maximum compression. If not given, the default compression level will\n       be the default compression level of the zlib library."},{"t":"encoding_mode","d":"The encoding mode. Can be FORCE_GZIP (the default)\n       or FORCE_DEFLATE."}]},"gzeof":{"s":"Test for EOF on a gz-file pointer","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."}]},"gzfile":{"s":"Read entire gz-file into an array","p":[{"t":"filename","d":"The file name."},{"t":"use_include_path","d":"You can set this optional parameter to 1, if you\n       want to search for the file in the include_path too."}]},"gzgetc":{"s":"Get character from gz-file pointer","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."}]},"gzgets":{"s":"Get line from file pointer","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."},{"t":"length","d":"The length of data to get."}]},"gzgetss":{"s":"","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."},{"t":"length","d":"The length of data to get."},{"t":"allowable_tags","d":"You can use this optional parameter to specify tags which should not \n       be stripped."}]},"gzinflate":{"s":"Inflate a deflated string","p":[{"t":"data","d":"The data compressed by gzdeflate()."},{"t":"length","d":"The maximum length of data to decode."}]},"gzopen":{"s":"Open gz-file","p":[{"t":"filename","d":"The file name."},{"t":"mode","d":"As in fopen() (rb or \n       wb) but can also include a compression level \n       (wb9) or a strategy: f for\n       filtered data as in wb6f, h for\n       Huffman only compression as in wb1h.\n       (See the description of deflateInit2\n       in zlib.h for \n       more information about the strategy parameter.)"},{"t":"use_include_path","d":"You can set this optional parameter to 1, if you\n       want to search for the file in the include_path too."}]},"gzpassthru":{"s":"","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."}]},"gzputs":{"s":"Alias of gzwrite()","p":null},"gzread":{"s":"Binary-safe gz-file read","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."},{"t":"length","d":"The number of bytes to read."}]},"gzrewind":{"s":"Rewind the position of a gz-file pointer","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."}]},"gzseek":{"s":"Seek on a gz-file pointer","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."},{"t":"offset","d":"The seeked offset."},{"t":"whence","d":"whence values are:\n       \n        SEEK_SET - Set position equal to offset bytes.\n        SEEK_CUR - Set position to current location plus offset."}]},"gztell":{"s":"Tell gz-file pointer read\/write position","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."}]},"gzuncompress":{"s":"Uncompress a compressed string","p":[{"t":"data","d":"The data compressed by gzcompress()."},{"t":"length","d":"The maximum length of data to decode."}]},"gzwrite":{"s":"Binary-safe gz-file write","p":[{"t":"zp","d":"The gz-file pointer. It must be valid, and must point to a file\n       successfully opened by gzopen()."},{"t":"string","d":"The string to write."},{"t":"length","d":"The number of uncompressed bytes to write. If supplied, writing will \n       stop after length (uncompressed) bytes have been\n       written or the end of string is reached,\n       whichever comes first."}]},"hash":{"s":"Generate a hash value (message digest)","p":[{"t":"algo","d":"Name of selected hashing algorithm (i.e. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..)"},{"t":"data","d":"Message to be hashed."},{"t":"raw_output","d":"When set to TRUE, outputs raw binary data.\n       FALSE outputs lowercase hexits."}]},"hash_algos":{"s":"Return a list of registered hashing algorithms","p":null},"hash_copy":{"s":"Copy hashing context","p":[{"t":"context","d":"Hashing context returned by hash_init()."}]},"hash_file":{"s":"Generate a hash value using the contents of a given file","p":[{"t":"algo","d":"Name of selected hashing algorithm (i.e. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..)"},{"t":"filename","d":"URL describing location of file to be hashed; Supports fopen wrappers."},{"t":"raw_output","d":"When set to TRUE, outputs raw binary data.\n       FALSE outputs lowercase hexits."}]},"hash_final":{"s":"Finalize an incremental hash and return resulting digest","p":[{"t":"context","d":"Hashing context returned by hash_init()."},{"t":"raw_output","d":"When set to TRUE, outputs raw binary data.\n       FALSE outputs lowercase hexits."}]},"hash_hmac":{"s":"Generate a keyed hash value using the HMAC method","p":[{"t":"algo","d":"Name of selected hashing algorithm (i.e. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..) See hash_algos() for a list of supported algorithms."},{"t":"data","d":"Message to be hashed."},{"t":"key","d":"Shared secret key used for generating the HMAC variant of the message digest."},{"t":"raw_output","d":"When set to TRUE, outputs raw binary data.\n       FALSE outputs lowercase hexits."}]},"hash_hmac_file":{"s":"Generate a keyed hash value using the HMAC method and the contents of a given file","p":[{"t":"algo","d":"Name of selected hashing algorithm (i.e. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..) See hash_algos() for a list of supported algorithms."},{"t":"filename","d":"URL describing location of file to be hashed; Supports fopen wrappers."},{"t":"key","d":"Shared secret key used for generating the HMAC variant of the message digest."},{"t":"raw_output","d":"When set to TRUE, outputs raw binary data.\n       FALSE outputs lowercase hexits."}]},"hash_init":{"s":"Initialize an incremental hashing context","p":[{"t":"algo","d":"Name of selected hashing algorithm (i.e. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..). For a list of supported algorithms see hash_algos()."},{"t":"options","d":"Optional settings for hash generation, currently supports only one option:\n       HASH_HMAC.  When specified, the key\n       must be specified."},{"t":"key","d":"When HASH_HMAC is specified for options,\n       a shared secret key to be used with the HMAC hashing method must be supplied in this\n       parameter."}]},"hash_pbkdf2":{"s":"Generate a PBKDF2 key derivation of a supplied password","p":[{"t":"algo","d":"Name of selected hashing algorithm (i.e. md5,\n       sha256, haval160,4, etc..) See\n       hash_algos() for a list of supported algorithms."},{"t":"password","d":"The password to use for the derivation."},{"t":"salt","d":"The salt to use for the derivation. This value should be generated randomly."},{"t":"iterations","d":"The number of internal iterations to perform for the derivation."},{"t":"length","d":"The length of the output string. If raw_output\n       is TRUE this corresponds to the byte-length of the derived key, if\n       raw_output is FALSE this corresponds to twice the\n       byte-length of the derived key (as every byte of the key is returned as\n       two hexits)."},{"t":"raw_output","d":"When set to TRUE, outputs raw binary data. FALSE outputs lowercase\n       hexits."}]},"hash_update":{"s":"Pump data into an active hashing context","p":[{"t":"context","d":"Hashing context returned by hash_init()."},{"t":"data","d":"Message to be included in the hash digest."}]},"hash_update_file":{"s":"Pump data into an active hashing context from a file","p":[{"t":"hcontext","d":"Hashing context returned by hash_init()."},{"t":"filename","d":"URL describing location of file to be hashed; Supports fopen wrappers."},{"t":"scontext","d":"Stream context as returned by stream_context_create()."}]},"hash_update_stream":{"s":"Pump data into an active hashing context from an open stream","p":[{"t":"context","d":"Hashing context returned by hash_init()."},{"t":"handle","d":"Open file handle as returned by any stream creation function."},{"t":"length","d":"Maximum number of characters to copy from handle\n       into the hashing context."}]},"header":{"s":"Send a raw HTTP header","p":[{"t":"string","d":"The header string."}]},"headers_list":{"s":"Returns a list of response headers sent (or ready to send)","p":null},"headers_sent":{"s":"Checks if or where headers have been sent","p":[{"t":"file","d":"If the optional file and\n       line parameters are set, \n       headers_sent() will put the PHP source file name\n       and line number where output started in the file\n       and line variables."},{"t":"line","d":"The line number where the output started."}]},"header_register_callback":{"s":"Call a header function","p":[{"t":"callback","d":"Function called just before the headers are sent. It gets no parameters\n      and the return value is ignored."}]},"header_remove":{"s":"Remove previously set headers","p":[{"t":"name","d":"The header name to be removed."}]},"hebrev":{"s":"Convert logical Hebrew text to visual text","p":[{"t":"hebrew_text","d":"A Hebrew input string."},{"t":"max_chars_per_line","d":"This optional parameter indicates maximum number of characters per\n       line that will be returned."}]},"hebrevc":{"s":"Convert logical Hebrew text to visual text with newline conversion","p":[{"t":"hebrew_text","d":"A Hebrew input string."},{"t":"max_chars_per_line","d":"This optional parameter indicates maximum number of characters per\n       line that will be returned."}]},"hex2bin":{"s":"Decodes a hexadecimally encoded binary string","p":[{"t":"data","d":"Hexadecimal representation of data."}]},"hexdec":{"s":"Hexadecimal to decimal","p":[{"t":"hex_string","d":"The hexadecimal string to convert"}]},"highlight_file":{"s":"Syntax highlighting of a file","p":[{"t":"filename","d":"Path to the PHP file to be highlighted."},{"t":"return","d":"Set this parameter to TRUE to make this function return the\n       highlighted code."}]},"highlight_string":{"s":"Syntax highlighting of a string","p":[{"t":"str","d":"The PHP code to be highlighted. This should include the opening tag."},{"t":"return","d":"Set this parameter to TRUE to make this function return the\n       highlighted code."}]},"htmlentities":{"s":"Convert all applicable characters to HTML entities","p":[{"t":"string","d":"The input string."},{"t":"flags","d":"A bitmask of one or more of the following flags, which specify how to handle quotes,\n       invalid code unit sequences and the used document type. The default is\n       ENT_COMPAT | ENT_HTML401.\n       \n        Available flags constants\n        \n         \n          \n           Constant Name\n           Description\n          \n\n         \n\n         \n          \n           ENT_COMPAT\n           Will convert double-quotes and leave single-quotes alone.\n          \n\n          \n           ENT_QUOTES\n           Will convert both double and single quotes.\n          \n\n          \n           ENT_NOQUOTES\n           Will leave both double and single quotes unconverted.\n          \n\n          \n           ENT_IGNORE\n           \n            Silently discard invalid code unit sequences instead of returning\n            an empty string. Using this flag is discouraged as it\n            &raquo;&nbsp;may have security implications.\n           \n          \n\n          \n           ENT_SUBSTITUTE\n           \n            Replace invalid code unit sequences with a Unicode Replacement Character\n            U+FFFD (UTF-8) or &amp;#FFFD; (otherwise) instead of returning an empty string.\n           \n          \n\n          \n           ENT_DISALLOWED\n           \n            Replace invalid code points for the given document type with a\n            Unicode Replacement Character U+FFFD (UTF-8) or &amp;#FFFD;\n            (otherwise) instead of leaving them as is. This may be useful, for\n            instance, to ensure the well-formedness of XML documents with\n            embedded external content.\n           \n          \n\n          \n           ENT_HTML401\n           \n            Handle code as HTML 4.01.\n           \n          \n\n          \n           ENT_XML1\n           \n            Handle code as XML 1.\n           \n          \n\n          \n           ENT_XHTML\n           \n            Handle code as XHTML.\n           \n          \n\n          \n           ENT_HTML5\n           \n            Handle code as HTML 5."},{"t":"encoding","d":"Like htmlspecialchars(),\n       htmlentities() takes an optional third argument\n       encoding which defines encoding used in\n       conversion.\n       From PHP 5.6.0, default_charset\n       value is used as default. From PHP 5.4.0, UTF-8 is the default.\n       PHP prior to 5.4.0, ISO-8859-1 is used as the default.\n       Although this argument is technically optional, you are highly\n       encouraged to specify the correct value for your code."},{"t":"double_encode","d":"When double_encode is turned off PHP will not\n       encode existing html entities. The default is to convert everything."}]},"htmlspecialchars":{"s":"Convert special characters to HTML entities","p":[{"t":"string","d":"The string being converted."},{"t":"flags","d":"A bitmask of one or more of the following flags, which specify how to handle quotes,\n       invalid code unit sequences and the used document type. The default is\n       ENT_COMPAT | ENT_HTML401.\n       \n        Available flags constants\n        \n         \n          \n           Constant Name\n           Description\n          \n\n         \n\n         \n          \n           ENT_COMPAT\n           Will convert double-quotes and leave single-quotes alone.\n          \n\n          \n           ENT_QUOTES\n           Will convert both double and single quotes.\n          \n\n          \n           ENT_NOQUOTES\n           Will leave both double and single quotes unconverted.\n          \n\n          \n           ENT_IGNORE\n           \n            Silently discard invalid code unit sequences instead of returning\n            an empty string. Using this flag is discouraged as it\n            &raquo;&nbsp;may have security implications.\n           \n          \n\n          \n           ENT_SUBSTITUTE\n           \n            Replace invalid code unit sequences with a Unicode Replacement Character\n            U+FFFD (UTF-8) or &amp;#FFFD; (otherwise) instead of returning an empty string.\n           \n          \n\n          \n           ENT_DISALLOWED\n           \n            Replace invalid code points for the given document type with a\n            Unicode Replacement Character U+FFFD (UTF-8) or &amp;#FFFD;\n            (otherwise) instead of leaving them as is. This may be useful, for\n            instance, to ensure the well-formedness of XML documents with\n            embedded external content.\n           \n          \n\n          \n           ENT_HTML401\n           \n            Handle code as HTML 4.01.\n           \n          \n\n          \n           ENT_XML1\n           \n            Handle code as XML 1.\n           \n          \n\n          \n           ENT_XHTML\n           \n            Handle code as XHTML.\n           \n          \n\n          \n           ENT_HTML5\n           \n            Handle code as HTML 5."},{"t":"encoding","d":"From PHP 5.6.0, default_charset\n       value is used as default. From PHP 5.4.0, UTF-8 is the default.\n       PHP prior to 5.4.0, ISO-8859-1 is used as the default.\n       Although this argument is technically optional, you are highly\n       encouraged to specify the correct value for your code."},{"t":"double_encode","d":"When double_encode is turned off PHP will not\n       encode existing html entities, the default is to convert everything."}]},"htmlspecialchars_decode":{"s":"","p":[{"t":"string","d":"The string to decode."},{"t":"flags","d":"A bitmask of one or more of the following flags, which specify how to handle quotes and\n       which document type to use. The default is ENT_COMPAT | ENT_HTML401.\n       \n        Available flags constants\n        \n         \n          \n           Constant Name\n           Description\n          \n\n         \n\n         \n          \n           ENT_COMPAT\n           Will convert double-quotes and leave single-quotes alone.\n          \n\n          \n           ENT_QUOTES\n           Will convert both double and single quotes.\n          \n\n          \n           ENT_NOQUOTES\n           Will leave both double and single quotes unconverted.\n          \n\n          \n           ENT_HTML401\n           \n            Handle code as HTML 4.01.\n           \n          \n\n          \n           ENT_XML1\n           \n            Handle code as XML 1.\n           \n          \n\n          \n           ENT_XHTML\n           \n            Handle code as XHTML.\n           \n          \n\n          \n           ENT_HTML5\n           \n            Handle code as HTML 5."}]},"html_entity_decode":{"s":"Convert all HTML entities to their applicable characters","p":[{"t":"string","d":"The input string."},{"t":"flags","d":"A bitmask of one or more of the following flags, which specify how to handle quotes and\n       which document type to use. The default is ENT_COMPAT | ENT_HTML401.\n       \n        Available flags constants\n        \n         \n          \n           Constant Name\n           Description\n          \n\n         \n\n         \n          \n           ENT_COMPAT\n           Will convert double-quotes and leave single-quotes alone.\n          \n\n          \n           ENT_QUOTES\n           Will convert both double and single quotes.\n          \n\n          \n           ENT_NOQUOTES\n           Will leave both double and single quotes unconverted.\n          \n\n          \n           ENT_HTML401\n           \n            Handle code as HTML 4.01.\n           \n          \n\n          \n           ENT_XML1\n           \n            Handle code as XML 1.\n           \n          \n\n          \n           ENT_XHTML\n           \n            Handle code as XHTML.\n           \n          \n\n          \n           ENT_HTML5\n           \n            Handle code as HTML 5."},{"t":"encoding","d":"Encoding to use.\n       If omitted, the default value for this argument is ISO-8859-1 in\n       versions of PHP prior to 5.4.0, and UTF-8 from PHP 5.4.0 onwards."}]},"http_build_cookie":{"s":"Build cookie string","p":[{"t":"cookie","d":"a cookie list like returned from http_parse_cookie()"}]},"http_build_query":{"s":"Generate URL-encoded query string","p":[{"t":"query_data","d":"May be an array or object containing properties."},{"t":"numeric_prefix","d":"If numeric indices are used in the base array and this parameter is\n       provided, it will be prepended to the numeric index for elements in\n       the base array only."},{"t":"arg_separator","d":"arg_separator.output\n       is used to separate arguments, unless this parameter is specified,\n       and is then used."},{"t":"enc_type","d":"By default, PHP_QUERY_RFC1738."}]},"http_build_str":{"s":"Build query string","p":[{"t":"query","d":"associative array of query string parameters"},{"t":"prefix","d":"top level prefix"},{"t":"arg_separator","d":"argument separator to use (by default the INI setting arg_separator.output will be used, or &quot;&amp;&quot; if neither is set"}]},"http_build_url":{"s":"Build a URL","p":[{"t":"url","d":"(part(s) of) an URL in form of a string or associative array like parse_url() returns"},{"t":"parts","d":"same as the first argument"},{"t":"flags","d":"a bitmask of binary or&#039;ed HTTP_URL constants;\n       HTTP_URL_REPLACE is the default"},{"t":"new_url","d":"if set, it will be filled with the parts of the composed url like parse_url() would return"}]},"http_cache_etag":{"s":"Caching by ETag","p":[{"t":"etag","d":"custom ETag"}]},"http_cache_last_modified":{"s":"Caching by last modification","p":[{"t":"timestamp_or_expires","d":"Unix timestamp"}]},"http_chunked_decode":{"s":"Decode chunked-encoded data","p":[{"t":"encoded","d":"chunked encoded string"}]},"http_date":{"s":"Compose HTTP RFC compliant date","p":[{"t":"timestamp","d":"Unix timestamp; current time if omitted"}]},"http_deflate":{"s":"Deflate data","p":[{"t":"data","d":"String containing the data that should be encoded"},{"t":"flags","d":"deflate options"}]},"http_get":{"s":"Perform GET request","p":[{"t":"url","d":"URL"},{"t":"options","d":"request options"},{"t":"info","d":"Will be filled with request\/response information"}]},"http_get_request_body":{"s":"Get request body as string","p":null},"http_get_request_body_stream":{"s":"Get request body as stream","p":null},"http_get_request_headers":{"s":"Get request headers as array","p":null},"http_head":{"s":"Perform HEAD request","p":[{"t":"url","d":"URL"},{"t":"options","d":"request options"},{"t":"info","d":"Request\/response information"}]},"http_inflate":{"s":"Inflate data","p":[{"t":"data","d":"string containing the compressed data"}]},"http_match_etag":{"s":"Match ETag","p":[{"t":"etag","d":"the ETag to match"},{"t":"for_range","d":"if set to TRUE, the header usually used to validate HTTP ranges will be checked"}]},"http_match_modified":{"s":"Match last modification","p":[{"t":"timestamp","d":"Unix timestamp; current time, if omitted"},{"t":"for_range","d":"if set to TRUE, the header usually used to validate HTTP ranges will be checked"}]},"http_match_request_header":{"s":"Match any header","p":[{"t":"header","d":"the header name (case-insensitive)"},{"t":"value","d":"the header value that should be compared"},{"t":"match_case","d":"whether the value should be compared case sensitively"}]},"http_negotiate_charset":{"s":"Negotiate client&#039;s preferred character set","p":[{"t":"supported","d":"array containing the supported charsets as values"},{"t":"result","d":"will be filled with an array containing the negotiation results"}]},"http_negotiate_content_type":{"s":"Negotiate client&#039;s preferred content type","p":[{"t":"supported","d":"array containing the supported content types as values"},{"t":"result","d":"will be filled with an array containing the negotiation results"}]},"http_negotiate_language":{"s":"Negotiate client&#039;s preferred language","p":[{"t":"supported","d":"array containing the supported languages as values"},{"t":"result","d":"will be filled with an array containing the negotiation results"}]},"http_parse_cookie":{"s":"Parse HTTP cookie","p":[{"t":"cookie","d":"string containing the value of a Set-Cookie response header"},{"t":"flags","d":"parse flags (HTTP_COOKIE_PARSE_RAW)"},{"t":"allowed_extras","d":"array containing recognized extra keys;\n       by default all unknown keys will be treated as cookie names"}]},"http_parse_headers":{"s":"Parse HTTP headers","p":[{"t":"header","d":"string containing HTTP headers"}]},"http_parse_message":{"s":"Parse HTTP messages","p":[{"t":"message","d":"string containing a single HTTP message or several consecutive HTTP messages"}]},"http_parse_params":{"s":"Parse parameter list","p":[{"t":"param","d":"Parameters"},{"t":"flags","d":"Parse flags"}]},"http_persistent_handles_clean":{"s":"Clean up persistent handles","p":[{"t":"clean","d":"the identification string"}]},"http_persistent_handles_count":{"s":"Stat persistent handles","p":null},"http_persistent_handles_ident":{"s":"Get\/set ident of persistent handles","p":[{"t":"ident","d":"the identification string"}]},"http_post_data":{"s":"Perform POST request with pre-encoded data","p":[{"t":"url","d":"URL"},{"t":"data","d":"String containing the pre-encoded post data"},{"t":"options","d":"request options"},{"t":"info","d":"Request\/response information"}]},"http_post_fields":{"s":"Perform POST request with data to be encoded","p":[{"t":"url","d":"URL"},{"t":"data","d":"Associative array of POST values"},{"t":"files","d":"Array of files to post"},{"t":"options","d":"request options"},{"t":"info","d":"Request\/response information"}]},"http_put_data":{"s":"Perform PUT request with data","p":[{"t":"url","d":"URL"},{"t":"data","d":"PUT request body"},{"t":"options","d":"request options"},{"t":"info","d":"Request\/response information"}]},"http_put_file":{"s":"Perform PUT request with file","p":[{"t":"url","d":"URL"},{"t":"file","d":"The file to put"},{"t":"options","d":"request options"},{"t":"info","d":"Request\/response information"}]},"http_put_stream":{"s":"Perform PUT request with stream","p":[{"t":"url","d":"URL"},{"t":"stream","d":"The stream to read the PUT request body from"},{"t":"options","d":"request options"},{"t":"info","d":"Request\/response information"}]},"http_redirect":{"s":"Issue HTTP redirect","p":[{"t":"url","d":"the URL to redirect to"},{"t":"params","d":"associative array of query parameters"},{"t":"session","d":"whether to append session information"},{"t":"status","d":"custom response status code"}]},"http_request":{"s":"Perform custom request","p":[{"t":"method","d":"Request method"},{"t":"url","d":"URL"},{"t":"body","d":"Request body"},{"t":"options","d":"request options"},{"t":"info","d":"Request\/response information"}]},"http_request_body_encode":{"s":"Encode request body","p":[{"t":"fields","d":"POST fields"},{"t":"files","d":"POST files"}]},"http_request_method_exists":{"s":"Check whether request method exists","p":[{"t":"method","d":"request method name or ID"}]},"http_request_method_name":{"s":"Get request method name","p":[{"t":"method","d":"request method ID"}]},"http_request_method_register":{"s":"Register request method","p":[{"t":"method","d":"the request method name to register"}]},"http_request_method_unregister":{"s":"Unregister request method","p":[{"t":"method","d":"The request method name or ID"}]},"http_response_code":{"s":"Get or Set the HTTP response code","p":[{"t":"response_code","d":"The optional response_code will set the response code."}]},"http_send_content_disposition":{"s":"Send Content-Disposition","p":[{"t":"filename","d":"the file name the &quot;Save as...&quot; dialog should display"},{"t":"inline","d":"if set to TRUE and the user agent knows how to handle the content type,\n       it will probably not cause the popup window to be shown"}]},"http_send_content_type":{"s":"Send Content-Type","p":[{"t":"content_type","d":"the desired content type  (primary\/secondary)"}]},"http_send_data":{"s":"Send arbitrary data","p":[{"t":"data","d":"data to send"}]},"http_send_file":{"s":"Send file","p":[{"t":"file","d":"the file to send"}]},"http_send_last_modified":{"s":"Send Last-Modified","p":[{"t":"timestamp","d":"a Unix timestamp, converted to a valid HTTP date;\n       if omitted, the current time will be sent"}]},"http_send_status":{"s":"Send HTTP response status","p":[{"t":"status","d":"HTTP status code (100-599)"}]},"http_send_stream":{"s":"Send stream","p":[{"t":"stream","d":"stream to read from (must be seekable)"}]},"http_support":{"s":"Check built-in HTTP support","p":[{"t":"feature","d":"feature to probe for"}]},"http_throttle":{"s":"HTTP throttling","p":[{"t":"sec","d":"seconds to sleep after each chunk sent"},{"t":"bytes","d":"the chunk size in bytes"}]},"hwapi_attribute_new":{"s":"Creates instance of class hw_api_attribute","p":[{"t":"name","d":"The attribute name."},{"t":"value","d":"The attribute value."}]},"hwapi_content_new":{"s":"Create new instance of class hw_api_content","p":[{"t":"content","d":""},{"t":"mimetype","d":"The mimetype for the contents."}]},"hwapi_hgcsp":{"s":"Returns object of class hw_api","p":[{"t":"hostname","d":"The host name."},{"t":"port","d":"If you do not pass a port number, 418 is used."}]},"hwapi_object_new":{"s":"Creates a new instance of class hwapi_object_new","p":[{"t":"parameter","d":""}]},"hw_changeobject":{"s":"Changes attributes of an object (obsolete)","p":null},"hw_connection_info":{"s":"Prints information about the connection to Hyperwave server","p":null},"hw_cp":{"s":"Copies objects","p":[{"t":"connection","d":"The connection identifier."},{"t":"object_id_array","d":"An array of object ids."},{"t":"destination_id","d":"The target collection id."}]},"hw_dummy":{"s":"Hyperwave dummy function","p":null},"hw_getrellink":{"s":"Get link from source to dest relative to rootid","p":null},"hw_getremotechildren":{"s":"Gets children of remote document","p":[{"t":"connection","d":"The connection identifier."},{"t":"object_record","d":"The object record."}]},"hw_getusername":{"s":"Name of currently logged in user","p":[{"t":"connection","d":"The connection identifier."}]},"hw_insertanchors":{"s":"Inserts only anchors into text","p":null},"hw_mapid":{"s":"Maps global id on virtual local id","p":[{"t":"connection","d":"The connection identifier."},{"t":"server_id","d":"The server id is the first part of the global object id (GOid) of the\n       object which is actually the IP number as an integer."},{"t":"object_id","d":"The object identifier."}]},"hw_mv":{"s":"Moves objects","p":[{"t":"connection","d":"The connection identifier."},{"t":"object_id_array","d":"An array of object ids."},{"t":"source_id","d":"The source collection id."},{"t":"destination_id","d":"The target collection id. If set to 0 the objects will be unlinked\n       from the source collection. If this is the last instance of that\n       object it will be deleted. If you want to delete all instances at\n       once, use hw_deleteobject()."}]},"hw_objrec2array":{"s":"Convert attributes from object record to object array","p":[{"t":"object_record","d":"The object record."},{"t":"format","d":"An associative array with the attribute name as its key and the value\n       being one of HW_ATTR_LANG or\n       HW_ATTR_NONE."}]},"hw_setlinkroot":{"s":"Set the id to which links are calculated","p":null},"hw_stat":{"s":"Returns status string","p":null},"hypot":{"s":"","p":[{"t":"x","d":"Length of first side"},{"t":"y","d":"Length of second side"}]},"ibase_add_user":{"s":"Add a user to a security database","p":null},"ibase_affected_rows":{"s":"Return the number of rows that were affected by the previous query","p":[{"t":"link_identifier","d":"A transaction context. If link_identifier is a\n       connection resource, its default transaction is used."}]},"ibase_backup":{"s":"Initiates a backup task in the service manager and returns immediately","p":null},"ibase_blob_add":{"s":"Add data into a newly created blob","p":[{"t":"blob_handle","d":"A blob handle opened with ibase_blob_create()."},{"t":"data","d":"The data to be added."}]},"ibase_blob_cancel":{"s":"Cancel creating blob","p":[{"t":"blob_handle","d":"A BLOB handle opened with ibase_blob_create()."}]},"ibase_blob_close":{"s":"Close blob","p":[{"t":"blob_handle","d":"A BLOB handle opened with ibase_blob_create() or\n       ibase_blob_open()."}]},"ibase_blob_create":{"s":"Create a new blob for adding data","p":[{"t":"link_identifier","d":"An InterBase link identifier. If omitted, the last opened link is\n       assumed."}]},"ibase_blob_echo":{"s":"Output blob contents to browser","p":[{"t":"link_identifier","d":"An InterBase link identifier. If omitted, the last opened link is\n       assumed."},{"t":"blob_id","d":""}]},"ibase_blob_get":{"s":"Get len bytes data from open blob","p":[{"t":"blob_handle","d":"A BLOB handle opened with ibase_blob_open()."},{"t":"len","d":"Size of returned data."}]},"ibase_blob_import":{"s":"Create blob, copy file in it, and close it","p":[{"t":"link_identifier","d":"An InterBase link identifier. If omitted, the last opened link is\n       assumed."},{"t":"file_handle","d":"The file handle is a handle returned by fopen()."}]},"ibase_blob_info":{"s":"Return blob length and other useful info","p":[{"t":"link_identifier","d":"An InterBase link identifier. If omitted, the last opened link is\n       assumed."},{"t":"blob_id","d":"A BLOB id."}]},"ibase_blob_open":{"s":"Open blob for retrieving data parts","p":[{"t":"link_identifier","d":"An InterBase link identifier. If omitted, the last opened link is\n       assumed."},{"t":"blob_id","d":"A BLOB id."}]},"ibase_close":{"s":"Close a connection to an InterBase database","p":[{"t":"connection_id","d":"An InterBase link identifier returned from\n       ibase_connect(). If omitted, the last opened link\n       is assumed."}]},"ibase_commit":{"s":"Commit a transaction","p":[{"t":"link_or_trans_identifier","d":"If called without an argument, this function commits the default\n       transaction of the default link. If the argument is a connection\n       identifier, the default transaction of the corresponding connection\n       will be committed. If the argument is a transaction identifier, the\n       corresponding transaction will be committed."}]},"ibase_commit_ret":{"s":"Commit a transaction without closing it","p":[{"t":"link_or_trans_identifier","d":"If called without an argument, this function commits the default\n       transaction of the default link. If the argument is a connection\n       identifier, the default transaction of the corresponding connection\n       will be committed. If the argument is a transaction identifier, the\n       corresponding transaction will be committed. The transaction context\n       will be retained, so statements executed from within this transaction\n       will not be invalidated."}]},"ibase_connect":{"s":"Open a connection to a database","p":[{"t":"database","d":"The database argument has to be a valid path to\n       database file on the server it resides on. If the server is not local,\n       it must be prefixed with either &#039;hostname:&#039; (TCP\/IP), &#039;\/\/hostname\/&#039;\n       (NetBEUI), depending on the connection\n       protocol used."},{"t":"username","d":"The user name. Can be set with the\n       ibase.default_user php.ini directive."},{"t":"password","d":"The password for username. Can be set with the\n       ibase.default_password php.ini directive."},{"t":"charset","d":"charset is the default character set for a\n       database."},{"t":"buffers","d":"buffers is the number of database buffers to\n       allocate for the server-side cache. If 0 or omitted, server chooses\n       its own default."},{"t":"dialect","d":"dialect selects the default SQL dialect for any\n       statement executed within a connection, and it defaults to the highest\n       one supported by client libraries."},{"t":"role","d":"Functional only with InterBase 5 and up."},{"t":"sync","d":""}]},"ibase_db_info":{"s":"Request statistics about a database","p":null},"ibase_delete_user":{"s":"Delete a user from a security database","p":null},"ibase_drop_db":{"s":"Drops a database","p":[{"t":"connection","d":"An InterBase link identifier. If omitted, the last opened link is\n       assumed."}]},"ibase_errcode":{"s":"Return an error code","p":null},"ibase_errmsg":{"s":"Return error messages","p":null},"ibase_execute":{"s":"Execute a previously prepared query","p":[{"t":"query","d":"An InterBase query prepared by ibase_prepare()."},{"t":"bind_arg","d":""},{"t":"...","d":""}]},"ibase_fetch_assoc":{"s":"Fetch a result row from a query as an associative array","p":[{"t":"result","d":"The result handle."},{"t":"fetch_flag","d":"fetch_flag is a combination of the constants\n       IBASE_TEXT and IBASE_UNIXTIME\n       ORed together. Passing IBASE_TEXT will cause this\n       function to return BLOB contents instead of BLOB ids. Passing\n       IBASE_UNIXTIME will cause this function to return\n       date\/time values as Unix timestamps instead of as formatted strings."}]},"ibase_fetch_object":{"s":"Get an object from a InterBase database","p":[{"t":"result_id","d":"An InterBase result identifier obtained either by\n       ibase_query() or ibase_execute()."},{"t":"fetch_flag","d":"fetch_flag is a combination of the constants\n       IBASE_TEXT and IBASE_UNIXTIME\n       ORed together. Passing IBASE_TEXT will cause this\n       function to return BLOB contents instead of BLOB ids. Passing\n       IBASE_UNIXTIME will cause this function to return\n       date\/time values as Unix timestamps instead of as formatted strings."}]},"ibase_fetch_row":{"s":"Fetch a row from an InterBase database","p":[{"t":"result_identifier","d":"An InterBase result identifier."},{"t":"fetch_flag","d":"fetch_flag is a combination of the constants\n       IBASE_TEXT and IBASE_UNIXTIME\n       ORed together. Passing IBASE_TEXT will cause this\n       function to return BLOB contents instead of BLOB ids. Passing\n       IBASE_UNIXTIME will cause this function to return\n       date\/time values as Unix timestamps instead of as formatted strings."}]},"ibase_field_info":{"s":"Get information about a field","p":[{"t":"result","d":"An InterBase result identifier."},{"t":"field_number","d":"Field offset."}]},"ibase_free_event_handler":{"s":"Cancels a registered event handler","p":[{"t":"event","d":"An event resource, created by\n       ibase_set_event_handler()."}]},"ibase_free_query":{"s":"Free memory allocated by a prepared query","p":[{"t":"query","d":"A query prepared with ibase_prepare()."}]},"ibase_free_result":{"s":"Free a result set","p":[{"t":"result_identifier","d":"A result set created by ibase_query() or\n       ibase_execute()."}]},"ibase_gen_id":{"s":"Increments the named generator and returns its new value","p":null},"ibase_maintain_db":{"s":"Execute a maintenance command on the database server","p":null},"ibase_modify_user":{"s":"Modify a user to a security database","p":null},"ibase_name_result":{"s":"Assigns a name to a result set","p":[{"t":"result","d":"An InterBase result set."},{"t":"name","d":"The name to be assigned."}]},"ibase_num_fields":{"s":"Get the number of fields in a result set","p":[{"t":"result_id","d":"An InterBase result identifier."}]},"ibase_num_params":{"s":"Return the number of parameters in a prepared query","p":[{"t":"query","d":"The prepared query handle."}]},"ibase_param_info":{"s":"Return information about a parameter in a prepared query","p":[{"t":"query","d":"An InterBase prepared query handle."},{"t":"param_number","d":"Parameter offset."}]},"ibase_pconnect":{"s":"Open a persistent connection to an InterBase database","p":[{"t":"database","d":"The database argument has to be a valid path to\n       database file on the server it resides on. If the server is not local,\n       it must be prefixed with either &#039;hostname:&#039; (TCP\/IP), &#039;\/\/hostname\/&#039;\n       (NetBEUI) or &#039;hostname@&#039; (IPX\/SPX), depending on the connection\n       protocol used."},{"t":"username","d":"The user name. Can be set with the\n       ibase.default_user php.ini directive."},{"t":"password","d":"The password for username. Can be set with the\n       ibase.default_password php.ini directive."},{"t":"charset","d":"charset is the default character set for a\n       database."},{"t":"buffers","d":"buffers is the number of database buffers to\n       allocate for the server-side cache. If 0 or omitted, server chooses\n       its own default."},{"t":"dialect","d":"dialect selects the default SQL dialect for any\n       statement executed within a connection, and it defaults to the highest\n       one supported by client libraries. Functional only with InterBase 6\n       and up."},{"t":"role","d":"Functional only with InterBase 5 and up."},{"t":"sync","d":""}]},"ibase_prepare":{"s":"Prepare a query for later binding of parameter placeholders and execution","p":[{"t":"query","d":"An InterBase query."}]},"ibase_query":{"s":"Execute a query on an InterBase database","p":[{"t":"link_identifier","d":"An InterBase link identifier. If omitted, the last opened link is\n       assumed."},{"t":"query","d":"An InterBase query."},{"t":"bind_args","d":""}]},"ibase_restore":{"s":"Initiates a restore task in the service manager and returns immediately","p":null},"ibase_rollback":{"s":"Roll back a transaction","p":[{"t":"link_or_trans_identifier","d":"If called without an argument, this function rolls back the default\n       transaction of the default link. If the argument is a connection\n       identifier, the default transaction of the corresponding connection\n       will be rolled back. If the argument is a transaction identifier, the\n       corresponding transaction will be rolled back."}]},"ibase_rollback_ret":{"s":"Roll back a transaction without closing it","p":[{"t":"link_or_trans_identifier","d":"If called without an argument, this function rolls back the default\n       transaction of the default link. If the argument is a connection\n       identifier, the default transaction of the corresponding connection\n       will be rolled back. If the argument is a transaction identifier, the\n       corresponding transaction will be rolled back. The transaction context\n       will be retained, so statements executed from within this transaction\n       will not be invalidated."}]},"ibase_server_info":{"s":"Request information about a database server","p":null},"ibase_service_attach":{"s":"Connect to the service manager","p":null},"ibase_service_detach":{"s":"Disconnect from the service manager","p":null},"ibase_set_event_handler":{"s":"Register a callback function to be called when events are posted","p":[{"t":"event_handler","d":"The callback is called with the event name and the link resource as\n       arguments whenever one of the specified events is posted by the\n       database."},{"t":"event_name1","d":"An event name."},{"t":"event_name2","d":"At most 15 events allowed."}]},"ibase_trans":{"s":"Begin a transaction","p":[{"t":"trans_args","d":"trans_args can be a combination of\n       IBASE_READ,\n       IBASE_WRITE,\n       IBASE_COMMITTED, \n       IBASE_CONSISTENCY,\n       IBASE_CONCURRENCY, \n       IBASE_REC_VERSION, \n       IBASE_REC_NO_VERSION,\n       IBASE_WAIT and \n       IBASE_NOWAIT."},{"t":"link_identifier","d":"An InterBase link identifier. If omitted, the last opened link is\n       assumed."}]},"ibase_wait_event":{"s":"Wait for an event to be posted by the database","p":[{"t":"event_name1","d":"The event name."},{"t":"event_name2","d":""},{"t":"...","d":""}]},"iconv":{"s":"Convert string to requested character encoding","p":[{"t":"in_charset","d":"The input charset."},{"t":"out_charset","d":"The output charset."},{"t":"str","d":"The string to be converted."}]},"iconv_get_encoding":{"s":"Retrieve internal configuration variables of iconv extension","p":[{"t":"type","d":"The value of the optional type can be:\n       \n        all\n        input_encoding\n        output_encoding\n        internal_encoding"}]},"iconv_mime_decode":{"s":"Decodes a MIME header field","p":[{"t":"encoded_header","d":"The encoded header, as a string."},{"t":"mode","d":"mode determines the behaviour in the event\n       iconv_mime_decode() encounters a malformed\n       MIME header field. You can specify any combination\n       of the following bitmasks.\n       \n        Bitmasks acceptable to iconv_mime_decode()\n        \n         \n          \n           Value\n           Constant\n           Description\n          \n\n         \n\n         \n          \n           1\n           ICONV_MIME_DECODE_STRICT\n           \n            If set, the given header is decoded in full conformance with the\n            standards defined in &raquo;&nbsp;RFC2047.\n            This option is disabled by default because there are a lot of\n            broken mail user agents that don&#039;t follow the specification and don&#039;t\n            produce correct MIME headers.\n           \n          \n\n          \n           2\n           ICONV_MIME_DECODE_CONTINUE_ON_ERROR\n           \n            If set, iconv_mime_decode_headers()\n            attempts to ignore any grammatical errors and continue to process\n            a given header."},{"t":"charset","d":"The optional charset parameter specifies the\n       character set to represent the result by. If omitted,\n       iconv.internal_encoding\n       will be used."}]},"iconv_mime_decode_headers":{"s":"Decodes multiple MIME header fields at once","p":[{"t":"encoded_headers","d":"The encoded headers, as a string."},{"t":"mode","d":"mode determines the behaviour in the event\n       iconv_mime_decode_headers() encounters a malformed\n       MIME header field. You can specify any combination\n       of the following bitmasks.\n       \n        Bitmasks acceptable to iconv_mime_decode_headers()\n        \n         \n          \n           Value\n           Constant\n           Description\n          \n\n         \n\n         \n          \n           1\n           ICONV_MIME_DECODE_STRICT\n           \n            If set, the given header is decoded in full conformance with the\n            standards defined in &raquo;&nbsp;RFC2047.\n            This option is disabled by default because there are a lot of\n            broken mail user agents that don&#039;t follow the specification and don&#039;t\n            produce correct MIME headers.\n           \n          \n\n          \n           2\n           ICONV_MIME_DECODE_CONTINUE_ON_ERROR\n           \n            If set, iconv_mime_decode_headers()\n            attempts to ignore any grammatical errors and continue to process\n            a given header."},{"t":"charset","d":"The optional charset parameter specifies the\n       character set to represent the result by. If omitted,\n       iconv.internal_encoding\n       will be used."}]},"iconv_mime_encode":{"s":"Composes a MIME header field","p":[{"t":"field_name","d":"The field name."},{"t":"field_value","d":"The field value."},{"t":"preferences","d":"You can control the behaviour of iconv_mime_encode()\n       by specifying an associative array that contains configuration items\n       to the optional third parameter preferences.\n       The items supported by iconv_mime_encode() are\n       listed below. Note that item names are treated case-sensitive.\n       \n        Configuration items supported by iconv_mime_encode()\n        \n         \n          \n           Item\n           Type\n           Description\n           Default value\n           Example\n          \n\n         \n\n         \n          \n           scheme\n           string\n           \n            Specifies the method to encode a field value by. The value of\n            this item may be either &quot;B&quot; or &quot;Q&quot;, where &quot;B&quot; stands for\n            base64 encoding scheme and &quot;Q&quot; stands for\n            quoted-printable encoding scheme.\n           \n           B\n           B\n          \n\n          \n           input-charset\n           string\n           \n            Specifies the character set in which the first parameter\n            field_name and the second parameter\n            field_value are presented. If not given,\n            iconv_mime_encode() assumes those parameters\n            are presented to it in the\n            iconv.internal_encoding\n            ini setting.\n           \n           \n            iconv.internal_encoding\n           \n           ISO-8859-1\n          \n\n          \n           output-charset\n           string\n           \n            Specifies the character set to use to compose the\n            MIME header.\n           \n           \n            iconv.internal_encoding\n           \n           UTF-8\n          \n\n          \n           line-length\n           integer\n           \n            Specifies the maximum length of the header lines. The resulting\n            header is &quot;folded&quot; to a set of multiple lines in case\n            the resulting header field would be longer than the value of this\n            parameter, according to\n            &raquo;&nbsp;RFC2822 - Internet Message Format.\n            If not given, the length will be limited to 76 characters.\n           \n           76\n           996\n          \n\n          \n           line-break-chars\n           string\n           \n            Specifies the sequence of characters to append to each line\n            as an end-of-line sign when &quot;folding&quot; is performed on a long header\n            field. If not given, this defaults to &quot;\\r\\n&quot;\n            (CR LF). Note that\n            this parameter is always treated as an ASCII string regardless\n            of the value of input-charset.\n           \n           \\r\\n\n           \\n"}]},"iconv_set_encoding":{"s":"Set current setting for character encoding conversion","p":[{"t":"type","d":"The value of type can be any one of these:\n       \n        input_encoding\n        output_encoding\n        internal_encoding"},{"t":"charset","d":"The character set."}]},"iconv_strlen":{"s":"Returns the character count of string","p":[{"t":"str","d":"The string."},{"t":"charset","d":"If charset parameter is omitted,\n       str is assumed to be encoded in\n       iconv.internal_encoding."}]},"iconv_strpos":{"s":"Finds position of first occurrence of a needle within a haystack","p":[{"t":"haystack","d":"The entire string."},{"t":"needle","d":"The searched substring."},{"t":"offset","d":"The optional offset parameter specifies\n       the position from which the search should be performed."},{"t":"charset","d":"If charset parameter is omitted,\n       string are assumed to be encoded in\n       iconv.internal_encoding."}]},"iconv_strrpos":{"s":"Finds the last occurrence of a needle within a haystack","p":[{"t":"haystack","d":"The entire string."},{"t":"needle","d":"The searched substring."},{"t":"charset","d":"If charset parameter is omitted,\n       string are assumed to be encoded in\n       iconv.internal_encoding."}]},"iconv_substr":{"s":"Cut out part of a string","p":[{"t":"str","d":"The original string."},{"t":"offset","d":"If offset is non-negative,\n       iconv_substr() cuts the portion out of\n       str beginning at offset&#039;th\n       character, counting from zero."},{"t":"length","d":"If length is given and is positive, the return\n       value will contain at most length characters\n       of the portion that begins at offset\n       (depending on the length of string)."},{"t":"charset","d":"If charset parameter is omitted,\n       string are assumed to be encoded in\n       iconv.internal_encoding."}]},"id3_get_frame_long_name":{"s":"Get the long name of an ID3v2 frame","p":[{"t":"frameId","d":"An ID3v2 frame"}]},"id3_get_frame_short_name":{"s":"Get the short name of an ID3v2 frame","p":[{"t":"frameId","d":"An ID3v2 frame"}]},"id3_get_genre_id":{"s":"Get the id for a genre","p":[{"t":"genre","d":"Genre name as string."}]},"id3_get_genre_list":{"s":"Get all possible genre values","p":null},"id3_get_genre_name":{"s":"Get the name for a genre id","p":[{"t":"genre_id","d":"An integer ranging from 0 to 147"}]},"id3_get_tag":{"s":"Get all information stored in an ID3 tag","p":[{"t":"filename","d":"The path to the MP3 file"},{"t":"version","d":"Allows you to specify the version of the tag as MP3 files may contain\n       both, version 1.x and version 2.x tags"}]},"id3_get_version":{"s":"Get version of an ID3 tag","p":[{"t":"filename","d":"The path to the MP3 file"}]},"id3_remove_tag":{"s":"Remove an existing ID3 tag","p":[{"t":"filename","d":"The path to the MP3 file"},{"t":"version","d":"Allows you to specify the version of the tag as MP3 files may contain\n       both, version 1.x and version 2.x tags."}]},"id3_set_tag":{"s":"Update information stored in an ID3 tag","p":[{"t":"filename","d":"The path to the MP3 file"},{"t":"tag","d":"An associative array of tag keys and values"},{"t":"version","d":"Allows you to specify the version of the tag as MP3 files may contain\n       both, version 1.x and version 2.x tags"}]},"idate":{"s":"Format a local time\/date as integer","p":[{"t":"format","d":"The following characters are recognized in the\n        format parameter string\n        \n         \n          \n           format character\n           Description\n          \n\n         \n\n         \n          \n           B\n           Swatch Beat\/Internet Time\n          \n\n          \n           d\n           Day of the month\n          \n\n          \n           h\n           Hour (12 hour format)\n          \n\n          \n           H\n           Hour (24 hour format)\n          \n\n          \n           i\n           Minutes\n          \n\n          \n           I (uppercase i)\n           returns 1 if DST is activated,\n            0 otherwise\n          \n\n          \n           L (uppercase l)\n           returns 1 for leap year,\n            0 otherwise\n          \n\n          \n           m\n           Month number\n          \n\n          \n           s\n           Seconds\n          \n\n          \n           t\n           Days in current month\n          \n\n          \n           U\n           Seconds since the Unix Epoch - January 1 1970 00:00:00 UTC -\n            this is the same as time()\n          \n\n          \n           w\n           Day of the week (0 on Sunday)\n          \n\n          \n           W\n           ISO-8601 week number of year, weeks starting on\n            Monday\n          \n\n          \n           y\n           Year (1 or 2 digits - check note below)\n          \n\n          \n           Y\n           Year (4 digits)\n          \n\n          \n           z\n           Day of the year\n          \n\n          \n           Z\n           Timezone offset in seconds"},{"t":"timestamp","d":"The optional timestamp parameter is an\ninteger Unix timestamp that defaults to the current\nlocal time if a timestamp is not given. In other\nwords, it defaults to the value of time()."}]},"idn_to_ascii":{"s":"Convert domain name to IDNA ASCII form.","p":[{"t":"domain","d":"Domain to convert. In PHP 5 must be UTF-8 encoded."},{"t":"options","d":"Conversion options - combination of IDNA_* constants\n       (except IDNA_ERROR_* constants)."},{"t":"variant","d":"Either INTL_IDNA_VARIANT_2003 for IDNA 2003 or\n       INTL_IDNA_VARIANT_UTS46 for UTS #46."},{"t":"idna_info","d":"This parameter can be used only if\n       INTL_IDNA_VARIANT_UTS46 was used for\n       variant. In that case, it will be filled with an\n       array with the keys &#039;result&#039;, the possibly illegal\n       result of the transformation,\n       &#039;isTransitionalDifferent&#039;, a boolean indicating\n       whether the usage of the transitional mechanisms of UTS #46 either has\n       or would have changed the result and &#039;errors&#039;,\n       which is an int representing a bitset of the error\n       constants IDNA_ERROR_*."}]},"idn_to_unicode":{"s":"Alias of idn_to_utf8()","p":null},"idn_to_utf8":{"s":"Convert domain name from IDNA ASCII to Unicode.","p":[{"t":"domain","d":"Domain to convert in IDNA ASCII-compatible format."},{"t":"options","d":"Conversion options - combination of IDNA_* constants\n       (except IDNA_ERROR_* constants)."},{"t":"variant","d":"Either INTL_IDNA_VARIANT_2003 for IDNA 2003 or\n       INTL_IDNA_VARIANT_UTS46 for UTS #46."},{"t":"idna_info","d":"This parameter can be used only if\n       INTL_IDNA_VARIANT_UTS46 was used for\n       variant. In that case, it will be filled with an\n       array with the keys &#039;result&#039;, the possibly illegal\n       result of the transformation,\n       &#039;isTransitionalDifferent&#039;, a boolean indicating\n       whether the usage of the transitional mechanisms of UTS #46 either has\n       or would have changed the result and &#039;errors&#039;,\n       which is an int representing a bitset of the error\n       constants IDNA_ERROR_*."}]},"ifxus_close_slob":{"s":"Deletes the slob object","p":[{"t":"bid","d":"An existing slob id."}]},"ifxus_create_slob":{"s":"Creates an slob object and opens it","p":[{"t":"mode","d":"A combination of IFX_LO_RDONLY, \n       IFX_LO_WRONLY, IFX_LO_APPEND\n       IFX_LO_RDWR, IFX_LO_BUFFER,\n       IFX_LO_NOBUFFER."}]},"ifxus_free_slob":{"s":"Deletes the slob object","p":[{"t":"bid","d":"An existing slob id."}]},"ifxus_open_slob":{"s":"Opens an slob object","p":[{"t":"bid","d":"An existing slob id."},{"t":"mode","d":"A combination of IFX_LO_RDONLY, \n       IFX_LO_WRONLY, IFX_LO_APPEND\n       IFX_LO_RDWR, IFX_LO_BUFFER,\n       IFX_LO_NOBUFFER."}]},"ifxus_read_slob":{"s":"Reads nbytes of the slob object","p":[{"t":"bid","d":"An existing slob id."},{"t":"nbytes","d":"The number of bytes to read."}]},"ifxus_seek_slob":{"s":"Sets the current file or seek position","p":[{"t":"bid","d":"An existing slob id."},{"t":"mode","d":"0 = LO_SEEK_SET, 1 = LO_SEEK_CUR, 2 = LO_SEEK_END."},{"t":"offset","d":"A byte offset."}]},"ifxus_tell_slob":{"s":"Returns the current file or seek position","p":[{"t":"bid","d":"An existing slob id."}]},"ifxus_write_slob":{"s":"Writes a string into the slob object","p":[{"t":"bid","d":"An existing slob id."},{"t":"content","d":"The content to write, as a string."}]},"ifx_affected_rows":{"s":"Get number of rows affected by a query","p":[{"t":"result_id","d":"A valid result id returned by ifx_query() or\n       ifx_prepare()."}]},"ifx_blobinfile_mode":{"s":"Set the default blob mode for all select queries","p":[{"t":"mode","d":"Mode &quot;0&quot; means save Byte-Blobs in memory, and mode &quot;1&quot; means save\n       Byte-Blobs in a file."}]},"ifx_byteasvarchar":{"s":"Set the default byte mode","p":[{"t":"mode","d":"Mode &quot;0&quot; will return a blob id, and mode &quot;1&quot; will return a varchar\n       with text content."}]},"ifx_close":{"s":"Close Informix connection","p":[{"t":"link_identifier","d":"The link identifier. If not specified, the last opened link is\n       assumed."}]},"ifx_connect":{"s":"Open Informix server connection","p":[{"t":"database","d":"The database name, as a string."},{"t":"userid","d":"The username, as a string."},{"t":"password","d":"The password, as a string."}]},"ifx_copy_blob":{"s":"Duplicates the given blob object","p":[{"t":"bid","d":"A BLOB identifier."}]},"ifx_create_blob":{"s":"Creates an blob object","p":[{"t":"type","d":"1 = TEXT, 0 = BYTE"},{"t":"mode","d":"0 = blob-object holds the content in memory,\n       1 = blob-object holds the content in file."},{"t":"param","d":"if mode = 0: pointer to the content,\n       if mode = 1: pointer to the filestring."}]},"ifx_create_char":{"s":"Creates an char object","p":[{"t":"param","d":"The char content."}]},"ifx_do":{"s":"Execute a previously prepared SQL-statement","p":[{"t":"result_id","d":"result_id is a valid resultid returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."}]},"ifx_error":{"s":"Returns error code of last Informix call","p":[{"t":"link_identifier","d":"The link identifier."}]},"ifx_errormsg":{"s":"Returns error message of last Informix call","p":[{"t":"errorcode","d":"If specified, the function will return the message corresponding to\n       the specified code."}]},"ifx_fetch_row":{"s":"Get row as an associative array","p":[{"t":"result_id","d":"result_id is a valid resultid returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."},{"t":"position","d":"An optional parameter for a &quot;fetch&quot; operation on &quot;scroll&quot; cursors:\n       NEXT, PREVIOUS,\n       CURRENT, FIRST, \n       LAST or a number.  If you specify a number, an\n       &quot;absolute&quot; row fetch is executed.  This parameter is optional, and\n       only valid for SCROLL cursors."}]},"ifx_fieldproperties":{"s":"List of SQL fieldproperties","p":[{"t":"result_id","d":"result_id is a valid resultid returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."}]},"ifx_fieldtypes":{"s":"List of Informix SQL fields","p":[{"t":"result_id","d":"result_id is a valid resultid returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."}]},"ifx_free_blob":{"s":"Deletes the blob object","p":[{"t":"bid","d":"The BLOB object id."}]},"ifx_free_char":{"s":"Deletes the char object","p":[{"t":"bid","d":"The char object id."}]},"ifx_free_result":{"s":"Releases resources for the query","p":[{"t":"result_id","d":"result_id is a valid resultid returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."}]},"ifx_getsqlca":{"s":"Get the contents of sqlca.sqlerrd[0..5] after a query","p":[{"t":"result_id","d":"result_id is a valid result id returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."}]},"ifx_get_blob":{"s":"Return the content of a blob object","p":[{"t":"bid","d":"The BLOB object id."}]},"ifx_get_char":{"s":"Return the content of the char object","p":[{"t":"bid","d":"The char object-id."}]},"ifx_htmltbl_result":{"s":"Formats all rows of a query into a HTML table","p":[{"t":"result_id","d":"result_id is a valid resultid returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."},{"t":"html_table_options","d":"This optional argument is a string of &lt;table&gt; tag options."}]},"ifx_nullformat":{"s":"Sets the default return value on a fetch row","p":[{"t":"mode","d":"Mode &quot;0&quot; returns &quot;&quot;, and mode &quot;1&quot; returns &quot;NULL&quot;."}]},"ifx_num_fields":{"s":"Returns the number of columns in the query","p":[{"t":"result_id","d":"result_id is a valid resultid returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."}]},"ifx_num_rows":{"s":"Count the rows already fetched from a query","p":[{"t":"result_id","d":"result_id is a valid resultid returned by\n       ifx_query() or\n       ifx_prepare() (select type queries only!)."}]},"ifx_pconnect":{"s":"Open persistent Informix connection","p":[{"t":"database","d":"The database name, as a string."},{"t":"userid","d":"The username, as a string."},{"t":"password","d":"The password, as a string."}]},"ifx_prepare":{"s":"Prepare an SQL-statement for execution","p":[{"t":"query","d":"The query string."},{"t":"link_identifier","d":"The link identifier."},{"t":"cursor_def","d":"This optional parameter allows you to make this a \n       scroll and\/or hold cursor.\n       It&#039;s a bitmask and can be either IFX_SCROLL,\n       IFX_HOLD, or both or&#039;ed together."},{"t":"blobidarray","d":"If you have BLOB (BYTE or TEXT) columns in the query, you can add\n       a blobidarray parameter containing the\n       corresponding &quot;blob ids&quot;, and you should replace those columns\n       with a &quot;?&quot; in the query text."}]},"ifx_query":{"s":"Send Informix query","p":[{"t":"query","d":"The query string."},{"t":"link_identifier","d":"The link identifier."},{"t":"cursor_def","d":"This optional parameter allows you to make this a \n       scroll and\/or hold cursor.\n       It&#039;s a bitmask and can be either IFX_SCROLL,\n       IFX_HOLD, or both or&#039;ed together. I you omit this\n       parameter the cursor is a normal sequential cursor."},{"t":"blobidarray","d":"If you have BLOB (BYTE or TEXT) columns in the query, you can add\n       a blobidarray parameter containing the\n       corresponding &quot;blob ids&quot;, and you should replace those columns\n       with a &quot;?&quot; in the query text."}]},"ifx_textasvarchar":{"s":"Set the default text mode","p":[{"t":"mode","d":"Mode &quot;0&quot; will return a blob id, and mode &quot;1&quot; will return a varchar\n       with text content."}]},"ifx_update_blob":{"s":"Updates the content of the blob object","p":[{"t":"bid","d":"A BLOB object identifier."},{"t":"content","d":"The new data, as a string."}]},"ifx_update_char":{"s":"Updates the content of the char object","p":[{"t":"bid","d":"A char object identifier."},{"t":"content","d":"The new data, as a string."}]},"ignore_user_abort":{"s":"Set whether a client disconnect should abort script execution","p":[{"t":"value","d":"If set, this function will set the ignore_user_abort ini setting\n       to the given value. If not, this function will\n       only return the previous setting without changing it."}]},"iis_add_server":{"s":"Creates a new virtual web server","p":null},"iis_get_dir_security":{"s":"Gets Directory Security","p":null},"iis_get_script_map":{"s":"Gets script mapping on a virtual directory for a specific extension","p":null},"iis_get_server_by_comment":{"s":"Return the instance number associated with the Comment","p":null},"iis_get_server_by_path":{"s":"Return the instance number associated with the Path","p":[{"t":"path","d":"The path to the root directory"}]},"iis_get_server_rights":{"s":"Gets server rights","p":null},"iis_get_service_state":{"s":"Returns the state for the service defined by ServiceId","p":null},"iis_remove_server":{"s":"Removes the virtual web server indicated by ServerInstance","p":null},"iis_set_app_settings":{"s":"Creates application scope for a virtual directory","p":null},"iis_set_dir_security":{"s":"Sets Directory Security","p":null},"iis_set_script_map":{"s":"Sets script mapping on a virtual directory","p":null},"iis_set_server_rights":{"s":"Sets server rights","p":null},"iis_start_server":{"s":"Starts the virtual web server","p":null},"iis_start_service":{"s":"Starts the service defined by ServiceId","p":null},"iis_stop_server":{"s":"Stops the virtual web server","p":null},"iis_stop_service":{"s":"Stops the service defined by ServiceId","p":null},"image2wbmp":{"s":"Output image to browser or file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"Path to the saved file. If not given, the raw image stream will be\n       outputted directly."},{"t":"threshold","d":"Threshold value, between 0 and 255 (inclusive)."}]},"imageaffine":{"s":"Return an image containing the affine tramsformed src image, using an optional clipping area","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"affine","d":"Array with keys 0 to 5."},{"t":"clip","d":"Array with keys &quot;x&quot;, &quot;y&quot;, &quot;width&quot; and &quot;height&quot;."}]},"imageaffinematrixconcat":{"s":"Concat two matrices (as in doing many ops in one go)","p":[{"t":"m1","d":"Array with keys 0 to 5."},{"t":"m2","d":"Array with keys 0 to 5."}]},"imageaffinematrixget":{"s":"Return an image containing the affine tramsformed src image, using an optional clipping area","p":[{"t":"type","d":"One of IMG_AFFINE_* constants."},{"t":"options","d":""}]},"imagealphablending":{"s":"Set the blending mode for an image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"blendmode","d":"Whether to enable the blending mode or not. On true color images \n       the default value is TRUE otherwise the default value is FALSE"}]},"imageantialias":{"s":"Should antialias functions be used or not","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"enabled","d":"Whether to enable antialiasing or not."}]},"imagearc":{"s":"Draws an arc","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"cx","d":"x-coordinate of the center."},{"t":"cy","d":"y-coordinate of the center."},{"t":"width","d":"The arc width."},{"t":"height","d":"The arc height."},{"t":"start","d":"The arc start angle, in degrees."},{"t":"end","d":"The arc end angle, in degrees.\n       0\u00b0 is located at the three-o&#039;clock position, and the arc is drawn\n       clockwise."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagechar":{"s":"Draw a character horizontally","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"","d":"Can be 1, 2, 3, 4, 5 for built-in\nfonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your\nown font identifiers registered with imageloadfont()."},{"t":"x","d":"x-coordinate of the start."},{"t":"y","d":"y-coordinate of the start."},{"t":"c","d":"The character to draw."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagecharup":{"s":"Draw a character vertically","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"","d":"Can be 1, 2, 3, 4, 5 for built-in\nfonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your\nown font identifiers registered with imageloadfont()."},{"t":"x","d":"x-coordinate of the start."},{"t":"y","d":"y-coordinate of the start."},{"t":"c","d":"The character to draw."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagecolorallocate":{"s":"Allocate a color for an image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."}]},"imagecolorallocatealpha":{"s":"Allocate a color for an image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."},{"t":"alpha","d":"A value between 0 and 127.\n       0 indicates completely opaque while \n       127 indicates completely transparent."}]},"imagecolorat":{"s":"Get the index of the color of a pixel","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"x","d":"x-coordinate of the point."},{"t":"y","d":"y-coordinate of the point."}]},"imagecolorclosest":{"s":"Get the index of the closest color to the specified color","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."}]},"imagecolorclosestalpha":{"s":"Get the index of the closest color to the specified color + alpha","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."},{"t":"alpha","d":"A value between 0 and 127.\n       0 indicates completely opaque while \n       127 indicates completely transparent."}]},"imagecolorclosesthwb":{"s":"Get the index of the color which has the hue, white and blackness","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."}]},"imagecolordeallocate":{"s":"De-allocate a color for an image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"color","d":"The color identifier."}]},"imagecolorexact":{"s":"Get the index of the specified color","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."}]},"imagecolorexactalpha":{"s":"Get the index of the specified color + alpha","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."},{"t":"alpha","d":"A value between 0 and 127.\n       0 indicates completely opaque while \n       127 indicates completely transparent."}]},"imagecolormatch":{"s":"Makes the colors of the palette version of an image more closely match the true color version","p":[{"t":"image1","d":"A truecolor image link resource."},{"t":"image2","d":"A palette image link resource pointing to an image that has the same\n       size as image1."}]},"imagecolorresolve":{"s":"Get the index of the specified color or its closest possible alternative","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."}]},"imagecolorresolvealpha":{"s":"Get the index of the specified color + alpha or its closest possible alternative","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."},{"t":"alpha","d":"A value between 0 and 127.\n       0 indicates completely opaque while \n       127 indicates completely transparent."}]},"imagecolorset":{"s":"Set the color for the specified palette index","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"index","d":"An index in the palette."},{"t":"red","d":"Value of red component."},{"t":"green","d":"Value of green component."},{"t":"blue","d":"Value of blue component."},{"t":"alpha","d":"Value of alpha component."}]},"imagecolorsforindex":{"s":"Get the colors for an index","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"index","d":"The color index."}]},"imagecolorstotal":{"s":"Find out the number of colors in an image&#039;s palette","p":[{"t":"image","d":"An image resource, returned by one of the image creation functions, such\n       as imagecreatefromgif()."}]},"imagecolortransparent":{"s":"Define a color as transparent","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imageconvolution":{"s":"Apply a 3x3 convolution matrix, using coefficient and offset","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"matrix","d":"A 3x3 matrix: an array of three arrays of three floats."},{"t":"div","d":"The divisor of the result of the convolution, used for normalization."},{"t":"offset","d":"Color offset."}]},"imagecopy":{"s":"Copy part of an image","p":[{"t":"dst_im","d":"Destination image link resource."},{"t":"src_im","d":"Source image link resource."},{"t":"dst_x","d":"x-coordinate of destination point."},{"t":"dst_y","d":"y-coordinate of destination point."},{"t":"src_x","d":"x-coordinate of source point."},{"t":"src_y","d":"y-coordinate of source point."},{"t":"src_w","d":"Source width."},{"t":"src_h","d":"Source height."}]},"imagecopymerge":{"s":"Copy and merge part of an image","p":[{"t":"dst_im","d":"Destination image link resource."},{"t":"src_im","d":"Source image link resource."},{"t":"dst_x","d":"x-coordinate of destination point."},{"t":"dst_y","d":"y-coordinate of destination point."},{"t":"src_x","d":"x-coordinate of source point."},{"t":"src_y","d":"y-coordinate of source point."},{"t":"src_w","d":"Source width."},{"t":"src_h","d":"Source height."},{"t":"pct","d":"The two images will be merged according to pct\n       which can range from 0 to 100.  When pct = 0,\n       no action is taken, when 100 this function behaves identically\n       to imagecopy() for pallete images, except for\n       ignoring alpha components, while it implements alpha transparency\n       for true colour images."}]},"imagecopymergegray":{"s":"Copy and merge part of an image with gray scale","p":[{"t":"dst_im","d":"Destination image link resource."},{"t":"src_im","d":"Source image link resource."},{"t":"dst_x","d":"x-coordinate of destination point."},{"t":"dst_y","d":"y-coordinate of destination point."},{"t":"src_x","d":"x-coordinate of source point."},{"t":"src_y","d":"y-coordinate of source point."},{"t":"src_w","d":"Source width."},{"t":"src_h","d":"Source height."},{"t":"pct","d":"The src_im will be changed to grayscale according \n        to pct where 0 is fully grayscale and 100 is \n        unchanged. When pct = 100 this function behaves \n        identically to imagecopy() for pallete images, except for\n        ignoring alpha components, while\n        it implements alpha transparency for true colour images."}]},"imagecopyresampled":{"s":"Copy and resize part of an image with resampling","p":[{"t":"dst_image","d":"Destination image link resource."},{"t":"src_image","d":"Source image link resource."},{"t":"dst_x","d":"x-coordinate of destination point."},{"t":"dst_y","d":"y-coordinate of destination point."},{"t":"src_x","d":"x-coordinate of source point."},{"t":"src_y","d":"y-coordinate of source point."},{"t":"dst_w","d":"Destination width."},{"t":"dst_h","d":"Destination height."},{"t":"src_w","d":"Source width."},{"t":"src_h","d":"Source height."}]},"imagecopyresized":{"s":"Copy and resize part of an image","p":[{"t":"dst_image","d":"Destination image link resource."},{"t":"src_image","d":"Source image link resource."},{"t":"dst_x","d":"x-coordinate of destination point."},{"t":"dst_y","d":"y-coordinate of destination point."},{"t":"src_x","d":"x-coordinate of source point."},{"t":"src_y","d":"y-coordinate of source point."},{"t":"dst_w","d":"Destination width."},{"t":"dst_h","d":"Destination height."},{"t":"src_w","d":"Source width."},{"t":"src_h","d":"Source height."}]},"imagecreate":{"s":"Create a new palette based image","p":[{"t":"width","d":"The image width."},{"t":"height","d":"The image height."}]},"imagecreatefromgd":{"s":"Create a new image from GD file or URL","p":[{"t":"filename","d":"Path to the GD file."}]},"imagecreatefromgd2":{"s":"Create a new image from GD2 file or URL","p":[{"t":"filename","d":"Path to the GD2 image."}]},"imagecreatefromgd2part":{"s":"Create a new image from a given part of GD2 file or URL","p":[{"t":"filename","d":"Path to the GD2 image."},{"t":"srcX","d":"x-coordinate of source point."},{"t":"srcY","d":"y-coordinate of source point."},{"t":"width","d":"Source width."},{"t":"height","d":"Source height."}]},"imagecreatefromgif":{"s":"Create a new image from file or URL","p":[{"t":"filename","d":"Path to the GIF image."}]},"imagecreatefromjpeg":{"s":"Create a new image from file or URL","p":[{"t":"filename","d":"Path to the JPEG image."}]},"imagecreatefrompng":{"s":"Create a new image from file or URL","p":[{"t":"filename","d":"Path to the PNG image."}]},"imagecreatefromstring":{"s":"Create a new image from the image stream in the string","p":[{"t":"image","d":"A string containing the image data."}]},"imagecreatefromwbmp":{"s":"Create a new image from file or URL","p":[{"t":"filename","d":"Path to the WBMP image."}]},"imagecreatefromwebp":{"s":"Create a new image from file or URL","p":[{"t":"filename","d":"Path to the WebP image."}]},"imagecreatefromxbm":{"s":"Create a new image from file or URL","p":[{"t":"filename","d":"Path to the XBM image."}]},"imagecreatefromxpm":{"s":"Create a new image from file or URL","p":[{"t":"filename","d":"Path to the XPM image."}]},"imagecreatetruecolor":{"s":"Create a new true color image","p":[{"t":"width","d":"Image width."},{"t":"height","d":"Image height."}]},"imagecrop":{"s":"Crop an image using the given coordinates and size, x, y, width and height","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"rect","d":"Array with keys &quot;x&quot;, &quot;y&quot;, &quot;width&quot; and &quot;height&quot;."}]},"imagecropauto":{"s":"Crop an image automatically using one of the available modes","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"mode","d":"One of IMG_CROP_* constants."},{"t":"threshold","d":"Used in IMG_CROP_THRESHOLD mode."},{"t":"color","d":"Used in IMG_CROP_THRESHOLD mode."}]},"imagedashedline":{"s":"Draw a dashed line","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"x1","d":"Upper left x coordinate."},{"t":"y1","d":"Upper left y coordinate 0, 0 is the top left corner of the image."},{"t":"x2","d":"Bottom right x coordinate."},{"t":"y2","d":"Bottom right y coordinate."},{"t":"color","d":"The fill color. A color identifier created with \n       imagecolorallocate()."}]},"imagedestroy":{"s":"Destroy an image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."}]},"imageellipse":{"s":"Draw an ellipse","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"cx","d":"x-coordinate of the center."},{"t":"cy","d":"y-coordinate of the center."},{"t":"width","d":"The ellipse width."},{"t":"height","d":"The ellipse height."},{"t":"color","d":"The color of the ellipse. A color identifier created with\n       imagecolorallocate()."}]},"imagefill":{"s":"Flood fill","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"x","d":"x-coordinate of start point."},{"t":"y","d":"y-coordinate of start point."},{"t":"color","d":"The fill color. A color identifier created with \n       imagecolorallocate()."}]},"imagefilledarc":{"s":"Draw a partial arc and fill it","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"cx","d":"x-coordinate of the center."},{"t":"cy","d":"y-coordinate of the center."},{"t":"width","d":"The arc width."},{"t":"height","d":"The arc height."},{"t":"start","d":"The arc start angle, in degrees."},{"t":"end","d":"The arc end angle, in degrees.\n       0\u00b0 is located at the three-o&#039;clock position, and the arc is drawn\n       clockwise."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."},{"t":"style","d":"A bitwise OR of the following possibilities:\n       \n        IMG_ARC_PIE\n        IMG_ARC_CHORD\n        IMG_ARC_NOFILL\n        IMG_ARC_EDGED\n       \n       IMG_ARC_PIE and IMG_ARC_CHORD are\n       mutually exclusive; IMG_ARC_CHORD just\n       connects the starting and ending angles with a straight line, while\n       IMG_ARC_PIE produces a rounded edge.\n       IMG_ARC_NOFILL indicates that the arc\n       or chord should be outlined, not filled.  IMG_ARC_EDGED,\n       used together with IMG_ARC_NOFILL, indicates that the\n       beginning and ending angles should be connected to the center - this is a\n       good way to outline (rather than fill) a &#039;pie slice&#039;."}]},"imagefilledellipse":{"s":"Draw a filled ellipse","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"cx","d":"x-coordinate of the center."},{"t":"cy","d":"y-coordinate of the center."},{"t":"width","d":"The ellipse width."},{"t":"height","d":"The ellipse height."},{"t":"color","d":"The fill color. A color identifier created with \n       imagecolorallocate()."}]},"imagefilledpolygon":{"s":"Draw a filled polygon","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"points","d":"An array containing the x and y\n       coordinates of the polygons vertices consecutively."},{"t":"num_points","d":"Total number of vertices, which must be at least 3."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagefilledrectangle":{"s":"Draw a filled rectangle","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"x1","d":"x-coordinate for point 1."},{"t":"y1","d":"y-coordinate for point 1."},{"t":"x2","d":"x-coordinate for point 2."},{"t":"y2","d":"y-coordinate for point 2."},{"t":"color","d":"The fill color. A color identifier created with \n       imagecolorallocate()."}]},"imagefilltoborder":{"s":"Flood fill to specific color","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"x","d":"x-coordinate of start."},{"t":"y","d":"y-coordinate of start."},{"t":"border","d":"The border color. A color identifier created with \n       imagecolorallocate()."},{"t":"color","d":"The fill color. A color identifier created with \n       imagecolorallocate()."}]},"imagefilter":{"s":"Applies a filter to an image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filtertype","d":"filtertype can be one of the following:\n       \n        \n         \n          IMG_FILTER_NEGATE: Reverses all colors of\n          the image.\n         \n        \n        \n         \n          IMG_FILTER_GRAYSCALE: Converts the image into\n          grayscale.\n         \n        \n        \n         \n          IMG_FILTER_BRIGHTNESS: Changes the brightness\n          of the image. Use arg1 to set the level of\n          brightness.\n         \n        \n        \n         \n          IMG_FILTER_CONTRAST: Changes the contrast of\n          the image. Use arg1 to set the level of\n          contrast.\n         \n        \n        \n         \n          IMG_FILTER_COLORIZE: Like\n          IMG_FILTER_GRAYSCALE, except you can specify the\n          color. Use arg1, arg2 and\n          arg3 in the form of\n          red, green,\n          blue and arg4 for the\n          alpha channel. The range for each color is 0 to 255.\n         \n        \n        \n         \n          IMG_FILTER_EDGEDETECT: Uses edge detection to\n          highlight the edges in the image.\n         \n        \n        \n         \n          IMG_FILTER_EMBOSS: Embosses the image.\n         \n        \n        \n         \n          IMG_FILTER_GAUSSIAN_BLUR: Blurs the image using\n          the Gaussian method.\n         \n        \n        \n         \n          IMG_FILTER_SELECTIVE_BLUR: Blurs the image.\n         \n        \n        \n         \n          IMG_FILTER_MEAN_REMOVAL: Uses mean removal to\n          achieve a &quot;sketchy&quot; effect.\n         \n        \n        \n         \n          IMG_FILTER_SMOOTH: Makes the image smoother.\n          Use arg1 to set the level of smoothness.\n         \n        \n        \n         \n          IMG_FILTER_PIXELATE: Applies pixelation effect \n          to the image, use arg1 to set the block size \n          and arg2 to set the pixelation effect mode."},{"t":"arg1","d":"IMG_FILTER_BRIGHTNESS: Brightness level.\n         \n        \n        \n         \n          IMG_FILTER_CONTRAST: Contrast level.\n         \n        \n        \n         \n          IMG_FILTER_COLORIZE: Value of red component.\n         \n        \n        \n         \n          IMG_FILTER_SMOOTH: Smoothness level.\n         \n        \n        \n         \n          IMG_FILTER_PIXELATE: Block size in pixels."},{"t":"arg2","d":"IMG_FILTER_COLORIZE: Value of green component.\n         \n        \n        \n         \n          IMG_FILTER_PIXELATE: Whether to use advanced pixelation \n          effect or not (defaults to FALSE)."},{"t":"arg3","d":"IMG_FILTER_COLORIZE: Value of blue component."},{"t":"arg4","d":"IMG_FILTER_COLORIZE: Alpha channel, A value \n          between 0 and 127. 0 indicates completely opaque while 127 indicates \n          completely transparent."}]},"imageflip":{"s":"Flips an image using a given mode","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"mode","d":"Flip mode, this can be one of the IMG_FLIP_* constants:"}]},"imagefontheight":{"s":"Get font height","p":[{"t":"","d":"Can be 1, 2, 3, 4, 5 for built-in\nfonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your\nown font identifiers registered with imageloadfont()."}]},"imagefontwidth":{"s":"Get font width","p":[{"t":"","d":"Can be 1, 2, 3, 4, 5 for built-in\nfonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your\nown font identifiers registered with imageloadfont()."}]},"imageftbbox":{"s":"Give the bounding box of a text using fonts via freetype2","p":[{"t":"size","d":"The font size. Depending on your version of GD, this should be specified as the pixel size (GD1) or point size (GD2)."},{"t":"angle","d":"Angle in degrees in which text will be \n       measured."},{"t":"fontfile","d":"The name of the TrueType font file (can be a URL). Depending on\n       which version of the GD library that PHP is using, it may attempt to\n       search for files that do not begin with a leading &#039;\/&#039; by appending\n       &#039;.ttf&#039; to the filename and searching along a library-defined font path."},{"t":"text","d":"The string to be measured."},{"t":"extrainfo","d":"Possible array indexes for extrainfo\n        \n         \n          \n           Key\n           Type\n           Meaning\n          \n\n         \n\n         \n          \n           linespacing\n           float\n           Defines drawing linespacing"}]},"imagefttext":{"s":"Write text to the image using fonts using FreeType 2","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"size","d":"The font size to use in points."},{"t":"angle","d":"The angle in degrees, with 0 degrees being left-to-right reading text.\n       Higher values represent a counter-clockwise rotation. For example, a \n       value of 90 would result in bottom-to-top reading text."},{"t":"x","d":"The coordinates given by x and\n       y will define the basepoint of the first\n       character (roughly the lower-left corner of the character). This\n       is different from the imagestring(), where\n       x and y define the\n       upper-left corner of the first character. For example, &quot;top left&quot;\n       is 0, 0."},{"t":"y","d":"The y-ordinate. This sets the position of the fonts baseline, not the\n       very bottom of the character."},{"t":"color","d":"The index of the desired color for the text, see \n       imagecolorexact()."},{"t":"fontfile","d":"The path to the TrueType font you wish to use."}]},"imagegammacorrect":{"s":"Apply a gamma correction to a GD image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"inputgamma","d":"The input gamma."},{"t":"outputgamma","d":"The output gamma."}]},"imagegd":{"s":"Output GD image to browser or file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."}]},"imagegd2":{"s":"Output GD2 image to browser or file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"t":"chunk_size","d":"Chunk size."},{"t":"type","d":"Either IMG_GD2_RAW or \n       IMG_GD2_COMPRESSED. Default is \n       IMG_GD2_RAW."}]},"imagegif":{"s":"Output image to browser or file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."}]},"imagegrabscreen":{"s":"Captures the whole screen","p":null},"imagegrabwindow":{"s":"Captures a window","p":[{"t":"window_handle","d":"The HWND window ID."},{"t":"client_area","d":"Include the client area of the application window."}]},"imageinterlace":{"s":"Enable or disable interlace","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"interlace","d":"If non-zero, the image will be interlaced, else the interlace bit is\n       turned off."}]},"imageistruecolor":{"s":"Finds whether an image is a truecolor image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."}]},"imagejpeg":{"s":"Output image to browser or file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"t":"quality","d":"quality is optional, and ranges from 0 (worst\n       quality, smaller file) to 100 (best quality, biggest file). The \n       default is the default IJG quality value (about 75)."}]},"imagelayereffect":{"s":"Set the alpha blending flag to use the bundled libgd layering effects","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"effect","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"","d":""}]},"imageline":{"s":"Draw a line","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"x1","d":"x-coordinate for first point."},{"t":"y1","d":"y-coordinate for first point."},{"t":"x2","d":"x-coordinate for second point."},{"t":"y2","d":"y-coordinate for second point."},{"t":"color","d":"The line color. A color identifier created with \n       imagecolorallocate()."}]},"imageloadfont":{"s":"Load a new font","p":[{"t":"file","d":"The font file format is currently binary and architecture\n       dependent.  This means you should generate the font files on the\n       same type of CPU as the machine you are running PHP on."}]},"imagepalettecopy":{"s":"Copy the palette from one image to another","p":[{"t":"destination","d":"The destination image resource."},{"t":"source","d":"The source image resource."}]},"imagepalettetotruecolor":{"s":"Converts a palette based image to true color","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."}]},"imagepng":{"s":"Output a PNG image to either the browser or a file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"t":"quality","d":"Compression level: from 0 (no compression) to 9."},{"t":"filters","d":"Allows reducing the PNG file size. It is a bitmask field which may be\n       set to any combination of the PNG_FILTER_XXX \n       constants. PNG_NO_FILTER or \n       PNG_ALL_FILTERS may also be used to respectively\n       disable or activate all filters."}]},"imagepolygon":{"s":"Draws a polygon","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"points","d":"An array containing the polygon&#039;s vertices, e.g.:\n       \n        \n         \n          \n           points[0]\n           = x0\n          \n\n          \n           points[1]\n           = y0\n          \n\n          \n           points[2]\n           = x1\n          \n\n          \n           points[3]\n           = y1"},{"t":"num_points","d":"Total number of points (vertices)."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagepsbbox":{"s":"Give the bounding box of a text rectangle using PostScript Type1 fonts","p":[{"t":"text","d":"The text to be written."},{"t":"font_index","d":"A font resource, returned by imagepsloadfont()."},{"t":"size","d":"size is expressed in pixels."},{"t":"space","d":"Allows you to change the default value of a space in a font.  This\n       amount is added to the normal value and can also be negative. \n       Expressed in character space units, where 1 unit is 1\/1000th of an\n       em-square."},{"t":"tightness","d":"tightness allows you to control the amount\n       of white space between characters. This amount is added to the\n       normal character width and can also be negative.\n       Expressed in character space units, where 1 unit is 1\/1000th of an\n       em-square."},{"t":"angle","d":"angle is in degrees."}]},"imagepsencodefont":{"s":"Change the character encoding vector of a font","p":[{"t":"font_index","d":"A font resource, returned by imagepsloadfont()."},{"t":"encodingfile","d":"The exact format of this file is described in T1libs documentation. \n       T1lib comes with two ready-to-use files, \n       IsoLatin1.enc and \n       IsoLatin2.enc."}]},"imagepsextendfont":{"s":"Extend or condense a font","p":[{"t":"font_index","d":"A font resource, returned by imagepsloadfont()."},{"t":"extend","d":"Extension value, must be greater than 0."}]},"imagepsfreefont":{"s":"Free memory used by a PostScript Type 1 font","p":[{"t":"font_index","d":"A font resource, returned by imagepsloadfont()."}]},"imagepsloadfont":{"s":"Load a PostScript Type 1 font from file","p":[{"t":"filename","d":"Path to the Postscript font file."}]},"imagepsslantfont":{"s":"Slant a font","p":[{"t":"font_index","d":"A font resource, returned by imagepsloadfont()."},{"t":"slant","d":"Slant level."}]},"imagepstext":{"s":"Draws a text over an image using PostScript Type1 fonts","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"text","d":"The text to be written."},{"t":"font_index","d":"A font resource, returned by imagepsloadfont()."},{"t":"size","d":"size is expressed in pixels."},{"t":"foreground","d":"The color in which the text will be painted."},{"t":"background","d":"The color to which the text will try to fade in with antialiasing.\n       No pixels with the color background are \n       actually painted, so the background image does not need to be of solid\n       color."},{"t":"x","d":"x-coordinate for the lower-left corner of the first character."},{"t":"y","d":"y-coordinate for the lower-left corner of the first character."},{"t":"space","d":"Allows you to change the default value of a space in a font. This\n       amount is added to the normal value and can also be negative.\n       Expressed in character space units, where 1 unit is 1\/1000th of an \n       em-square."},{"t":"tightness","d":"tightness allows you to control the amount\n       of white space between characters. This amount is added to the\n       normal character width and can also be negative.\n       Expressed in character space units, where 1 unit is 1\/1000th of an \n       em-square."},{"t":"angle","d":"angle is in degrees."},{"t":"antialias_steps","d":"Allows you to control the number of colours used for antialiasing \n       text. Allowed values are 4 and 16. The higher value is recommended\n       for text sizes lower than 20, where the effect in text quality is\n       quite visible.  With bigger sizes, use 4. It&#039;s less computationally\n       intensive."}]},"imagerectangle":{"s":"Draw a rectangle","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"x1","d":"Upper left x coordinate."},{"t":"y1","d":"Upper left y coordinate\n       0, 0 is the top left corner of the image."},{"t":"x2","d":"Bottom right x coordinate."},{"t":"y2","d":"Bottom right y coordinate."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagerotate":{"s":"Rotate an image with a given angle","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"angle","d":"Rotation angle, in degrees. The rotation angle is interpreted as the\n       number of degrees to rotate the image anticlockwise."},{"t":"bgd_color","d":"Specifies the color of the uncovered zone after the rotation"},{"t":"ignore_transparent","d":"If set and non-zero, transparent colors are ignored (otherwise kept)."}]},"imagesavealpha":{"s":"Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"saveflag","d":"Whether to save the alpha channel or not. Default to FALSE."}]},"imagescale":{"s":"Scale an image using the given new width and height","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"new_width","d":""},{"t":"new_height","d":""},{"t":"mode","d":"One of IMG_NEAREST_NEIGHBOUR,\n      IMG_BILINEAR_FIXED,\n      IMG_BICUBIC,\n      IMG_BICUBIC_FIXED or anything else (will use two\n      pass)."}]},"imagesetbrush":{"s":"Set the brush image for line drawing","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"brush","d":"An image resource."}]},"imagesetinterpolation":{"s":"Set the interpolation method","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"method","d":"The interpolation method, which can be one of the following:\n       \n        \n         \n          IMG_BELL: Bell filter.\n         \n        \n        \n         \n          IMG_BESSEL: Bessel filter.\n         \n        \n        \n         \n          IMG_BICUBIC: Bicubic interpolation.\n         \n        \n        \n         \n          IMG_BICUBIC_FIXED: Fixed point implementation of the bicubic interpolation.\n         \n        \n        \n         \n          IMG_BILINEAR_FIXED: Fixed point implementation of the  bilinear interpolation (default (also on image creation)).\n         \n        \n        \n         \n          IMG_BLACKMAN: Blackman window function.\n         \n        \n        \n         \n          IMG_BOX: Box blur filter.\n         \n        \n        \n         \n          IMG_BSPLINE: Spline interpolation.\n         \n        \n        \n         \n          IMG_CATMULLROM: Cubic Hermite spline interpolation.\n         \n        \n        \n         \n          IMG_GAUSSIAN: Gaussian function.\n         \n        \n        \n         \n          IMG_GENERALIZED_CUBIC: Generalized cubic spline fractal interpolation.\n         \n        \n        \n         \n          IMG_HERMITE: Hermite interpolation.\n         \n        \n        \n         \n          IMG_HAMMING: Hamming filter.\n         \n        \n        \n         \n          IMG_HANNING: Hanning filter.\n         \n        \n        \n         \n          IMG_MITCHELL: Mitchell filter.\n         \n        \n        \n         \n          IMG_POWER: Power interpolation.\n         \n        \n        \n         \n          IMG_QUADRATIC: Inverse quadratic interpolation.\n         \n        \n        \n         \n          IMG_SINC: Sinc function.\n         \n        \n        \n         \n          IMG_NEAREST_NEIGHBOUR: Nearest neighbour interpolation.\n         \n        \n        \n         \n          IMG_WEIGHTED4: Weighting filter.\n         \n        \n        \n         \n          IMG_TRIANGLE: Triangle interpolation."}]},"imagesetpixel":{"s":"Set a single pixel","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"x","d":"x-coordinate."},{"t":"y","d":"y-coordinate."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagesetstyle":{"s":"Set the style for line drawing","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"style","d":"An array of pixel colors. You can use the \n       IMG_COLOR_TRANSPARENT constant to add a \n       transparent pixel."}]},"imagesetthickness":{"s":"Set the thickness for line drawing","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"thickness","d":"Thickness, in pixels."}]},"imagesettile":{"s":"Set the tile image for filling","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"tile","d":"The image resource to be used as a tile."}]},"imagestring":{"s":"Draw a string horizontally","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"","d":"Can be 1, 2, 3, 4, 5 for built-in\nfonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your\nown font identifiers registered with imageloadfont()."},{"t":"x","d":"x-coordinate of the upper left corner."},{"t":"y","d":"y-coordinate of the upper left corner."},{"t":"string","d":"The string to be written."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagestringup":{"s":"Draw a string vertically","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"","d":"Can be 1, 2, 3, 4, 5 for built-in\nfonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your\nown font identifiers registered with imageloadfont()."},{"t":"x","d":"x-coordinate of the bottom left corner."},{"t":"y","d":"y-coordinate of the bottom left corner."},{"t":"string","d":"The string to be written."},{"t":"color","d":"A color identifier created with \n       imagecolorallocate()."}]},"imagesx":{"s":"Get image width","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."}]},"imagesy":{"s":"Get image height","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."}]},"imagetruecolortopalette":{"s":"Convert a true color image to a palette image","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"dither","d":"Indicates if the image should be dithered - if it is TRUE then\n       dithering will be used which will result in a more speckled image but\n       with better color approximation."},{"t":"ncolors","d":"Sets the maximum number of colors that should be retained in the palette."}]},"imagettfbbox":{"s":"Give the bounding box of a text using TrueType fonts","p":[{"t":"size","d":"The font size.\n       Note: \n        \n         In GD 1, this is measured in pixels. In GD 2, this is measured in\n         points."},{"t":"angle","d":"Angle in degrees in which text will be measured."},{"t":"fontfile","d":"The name of the TrueType font file (can be a URL). Depending on\n       which version of the GD library that PHP is using, it may attempt to\n       search for files that do not begin with a leading &#039;\/&#039; by appending\n       &#039;.ttf&#039; to the filename and searching along a library-defined font path."},{"t":"text","d":"The string to be measured."}]},"imagettftext":{"s":"Write text to the image using TrueType fonts","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"size","d":"The font size. Depending on your version of GD, this should be specified as the pixel size (GD1) or point size (GD2)."},{"t":"angle","d":"The angle in degrees, with 0 degrees being left-to-right reading text.\n       Higher values represent a counter-clockwise rotation. For example, a \n       value of 90 would result in bottom-to-top reading text."},{"t":"x","d":"The coordinates given by x and\n       y will define the basepoint of the first\n       character (roughly the lower-left corner of the character). This\n       is different from the imagestring(), where\n       x and y define the\n       upper-left corner of the first character. For example, &quot;top left&quot;\n       is 0, 0."},{"t":"y","d":"The y-ordinate. This sets the position of the fonts baseline, not the\n       very bottom of the character."},{"t":"color","d":"The color index. Using the negative of a color index has the effect of\n       turning off antialiasing. See imagecolorallocate()."},{"t":"fontfile","d":"The path to the TrueType font you wish to use."}]},"imagetypes":{"s":"Return the image types supported by this PHP build","p":null},"imagewbmp":{"s":"Output image to browser or file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"t":"foreground","d":"You can set the foreground color with this parameter by setting an\n       identifier obtained from imagecolorallocate().\n       The default foreground color is black."}]},"imagewebp":{"s":"Output an WebP image to browser or file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."}]},"imagexbm":{"s":"Output an XBM image to browser or file","p":[{"t":"","d":"An image resource, returned by one of the image creation functions,\nsuch as imagecreatetruecolor()."},{"t":"filename","d":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"t":"foreground","d":"You can set the foreground color with this parameter by setting an\n       identifier obtained from imagecolorallocate().\n       The default foreground color is black."}]},"image_type_to_extension":{"s":"Get file extension for image type","p":[{"t":"imagetype","d":"One of the IMAGETYPE_XXX constant."},{"t":"include_dot","d":"Whether to prepend a dot to the extension or not. Default to TRUE."}]},"image_type_to_mime_type":{"s":"","p":[{"t":"imagetype","d":"One of the IMAGETYPE_XXX constants."}]},"imap_8bit":{"s":"Convert an 8bit string to a quoted-printable string","p":[{"t":"string","d":"The 8bit string to convert"}]},"imap_alerts":{"s":"Returns all IMAP alert messages that have occurred","p":null},"imap_append":{"s":"Append a string message to a specified mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"},{"t":"message","d":"The message to be append, as a string"},{"t":"options","d":"If provided, the options will also be written\n       to the mailbox"},{"t":"internal_date","d":"If this parameter is set, it will set the INTERNALDATE on the appended message.  The parameter should be a date string that conforms to the rfc2060 specifications for a date_time value."}]},"imap_base64":{"s":"Decode BASE64 encoded text","p":[{"t":"text","d":"The encoded text"}]},"imap_binary":{"s":"Convert an 8bit string to a base64 string","p":[{"t":"string","d":"The 8bit string"}]},"imap_body":{"s":"Read the message body","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"options","d":"The optional options are a bit mask\n       with one or more of the following:\n       \n        \n         \n          FT_UID - The msg_number is a UID\n         \n        \n        \n         \n          FT_PEEK - Do not set the \\Seen flag if not already set\n         \n        \n        \n         \n          FT_INTERNAL - The return string is in internal format, will\n          not canonicalize to CRLF."}]},"imap_bodystruct":{"s":"Read the structure of a specified body section of a specific message","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"section","d":"The body section to read"}]},"imap_check":{"s":"Check current mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."}]},"imap_clearflag_full":{"s":"Clears flags on messages","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"sequence","d":"A sequence of message numbers. You can enumerate desired messages\n       with the X,Y syntax, or retrieve all messages \n       within an interval with the X:Y syntax"},{"t":"flag","d":"The flags which you can unset are &quot;\\\\Seen&quot;, &quot;\\\\Answered&quot;, &quot;\\\\Flagged&quot;,\n       &quot;\\\\Deleted&quot;, and &quot;\\\\Draft&quot; (as defined by &raquo;&nbsp;RFC2060)"},{"t":"options","d":"options are a bit mask and may contain\n       the single option:\n       \n        \n         \n          ST_UID - The sequence argument contains UIDs\n          instead of sequence numbers"}]},"imap_close":{"s":"Close an IMAP stream","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"flag","d":"If set to CL_EXPUNGE, the function will silently\n       expunge the mailbox before closing, removing all messages marked for\n       deletion. You can achieve the same thing by using\n       imap_expunge()"}]},"imap_create":{"s":"Alias of imap_createmailbox()","p":null},"imap_createmailbox":{"s":"Create a new mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information. Names containing international characters should be\n       encoded by imap_utf7_encode()"}]},"imap_delete":{"s":"Mark a message for deletion from current mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"options","d":"You can set the FT_UID which tells the function\n       to treat the msg_number argument as an\n       UID."}]},"imap_deletemailbox":{"s":"Delete a mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"}]},"imap_errors":{"s":"Returns all of the IMAP errors that have occurred","p":null},"imap_expunge":{"s":"Delete all messages marked for deletion","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."}]},"imap_fetchbody":{"s":"Fetch a particular section of the body of the message","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"section","d":"The part number. It is a string of integers delimited by period which\n       index into a body part list as per the IMAP4 specification"},{"t":"options","d":"A bitmask with one or more of the following:\n       \n        \n         \n          FT_UID - The msg_number is a UID\n         \n        \n        \n         \n          FT_PEEK - Do not set the \\Seen flag if\n          not already set\n         \n        \n        \n         \n          FT_INTERNAL - The return string is in\n          internal format, will not canonicalize to CRLF."}]},"imap_fetchheader":{"s":"Returns header for a message","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"options","d":"The possible options are:\n       \n        \n         \n          FT_UID - The msgno\n          argument is a UID\n         \n        \n        \n         \n          FT_INTERNAL - The return string\n          is in &quot;internal&quot; format, without any attempt to\n          canonicalize to CRLF newlines\n         \n        \n        \n         \n          FT_PREFETCHTEXT - The RFC822.TEXT\n          should be pre-fetched at the same time.  This avoids an\n          extra RTT on an IMAP connection if a full message text is\n          desired (e.g. in a &quot;save to local file&quot; operation)"}]},"imap_fetchmime":{"s":"Fetch MIME headers for a particular section of the message","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"section","d":"The part number. It is a string of integers delimited by period which\n       index into a body part list as per the IMAP4 specification"},{"t":"options","d":"A bitmask with one or more of the following:\n       \n        \n         \n          FT_UID - The msg_number is a UID\n         \n        \n        \n         \n          FT_PEEK - Do not set the \\Seen flag if\n          not already set\n         \n        \n        \n         \n          FT_INTERNAL - The return string is in\n          internal format, will not canonicalize to CRLF."}]},"imap_fetchstructure":{"s":"Read the structure of a particular message","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"options","d":"This optional parameter only has a single option, \n       FT_UID, which tells the function to treat the\n       msg_number argument as a \n       UID."}]},"imap_fetchtext":{"s":"Alias of imap_body()","p":null},"imap_fetch_overview":{"s":"Read an overview of the information in the headers of the given message","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"sequence","d":"A message sequence description. You can enumerate desired messages\n       with the X,Y syntax, or retrieve all messages \n       within an interval with the X:Y syntax"},{"t":"options","d":"sequence will contain a sequence of message\n       indices or UIDs, if this parameter is set to \n       FT_UID."}]},"imap_gc":{"s":"Clears IMAP cache","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"caches","d":"Specifies the cache to purge. It may one or a combination\n       of the following constants: \n       IMAP_GC_ELT (message cache elements), \n       IMAP_GC_ENV (enveloppe and bodies),\n       IMAP_GC_TEXTS (texts)."}]},"imap_getacl":{"s":"Gets the ACL for a given mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"}]},"imap_getmailboxes":{"s":"Read the list of mailboxes, returning detailed information on each one","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"ref","d":"ref should normally be just the server\n       specification as described in imap_open()"},{"t":"pattern","d":"Specifies where in the mailbox hierarchy\nto start searching."}]},"imap_getsubscribed":{"s":"List all the subscribed mailboxes","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"ref","d":"ref should normally be just the server\n       specification as described in imap_open()"},{"t":"pattern","d":"Specifies where in the mailbox hierarchy\nto start searching."}]},"imap_get_quota":{"s":"Retrieve the quota level settings, and usage statics per mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"quota_root","d":"quota_root should normally be in the form of\n       user.name where name is the mailbox you wish to\n       retrieve information about."}]},"imap_get_quotaroot":{"s":"Retrieve the quota settings per user","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"quota_root","d":"quota_root should normally be in the form of\n       which mailbox (i.e. INBOX)."}]},"imap_header":{"s":"Alias of imap_headerinfo()","p":null},"imap_headerinfo":{"s":"Read the header of the message","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"fromlength","d":"Number of characters for the fetchfrom property.\n       Must be greater than or equal to zero."},{"t":"subjectlength","d":"Number of characters for the fetchsubject property\n       Must be greater than or equal to zero."},{"t":"defaulthost","d":""}]},"imap_headers":{"s":"Returns headers for all messages in a mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."}]},"imap_last_error":{"s":"Gets the last IMAP error that occurred during this page request","p":null},"imap_list":{"s":"Read the list of mailboxes","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"ref","d":"ref should normally be just the server\n       specification as described in imap_open()."},{"t":"pattern","d":"Specifies where in the mailbox hierarchy\nto start searching."}]},"imap_listmailbox":{"s":"Alias of imap_list()","p":null},"imap_listscan":{"s":"Returns the list of mailboxes that matches the given text","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"ref","d":"ref should normally be just the server \n       specification as described in imap_open()"},{"t":"pattern","d":"Specifies where in the mailbox hierarchy\nto start searching."},{"t":"content","d":"The searched string"}]},"imap_listsubscribed":{"s":"Alias of imap_lsub()","p":null},"imap_lsub":{"s":"List all the subscribed mailboxes","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"ref","d":"ref should normally be just the server \n       specification as described in imap_open()"},{"t":"pattern","d":"Specifies where in the mailbox hierarchy\nto start searching."}]},"imap_mail":{"s":"Send an email message","p":[{"t":"to","d":"The receiver"},{"t":"subject","d":"The mail subject"},{"t":"message","d":"The mail body, see imap_mail_compose()"},{"t":"additional_headers","d":"As string with additional headers to be set on the mail"},{"t":"cc","d":""},{"t":"bcc","d":"The receivers specified in bcc will get the\n       mail, but are excluded from the headers."},{"t":"rpath","d":"Use this parameter to specify return path upon mail delivery failure.\n       This is useful when using PHP as a mail client for multiple users."}]},"imap_mailboxmsginfo":{"s":"Get information about the current mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."}]},"imap_mail_compose":{"s":"Create a MIME message based on given envelope and body sections","p":[{"t":"envelope","d":"An associative array of headers fields. Valid keys are: &quot;remail&quot;,\n       &quot;return_path&quot;, &quot;date&quot;, &quot;from&quot;, &quot;reply_to&quot;, &quot;in_reply_to&quot;, &quot;subject&quot;,\n       &quot;to&quot;, &quot;cc&quot;, &quot;bcc&quot;, &quot;message_id&quot; and &quot;custom_headers&quot; (which contains\n       associative array of other headers)."},{"t":"body","d":"An indexed array of bodies"}]},"imap_mail_copy":{"s":"Copy specified messages to a mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msglist","d":"msglist is a range not just message\n       numbers (as described in &raquo;&nbsp;RFC2060)."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"},{"t":"options","d":"options is a bitmask of one or more of\n       \n        \n         \n          CP_UID - the sequence numbers contain UIDS\n         \n        \n        \n         \n          CP_MOVE - Delete the messages from\n          the current mailbox after copying"}]},"imap_mail_move":{"s":"Move specified messages to a mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msglist","d":"msglist is a range not just message numbers\n       (as described in &raquo;&nbsp;RFC2060)."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"},{"t":"options","d":"options is a bitmask and may contain the single option:\n       \n        \n         \n          CP_UID - the sequence numbers contain UIDS"}]},"imap_mime_header_decode":{"s":"Decode MIME header elements","p":[{"t":"text","d":"The MIME text"}]},"imap_msgno":{"s":"Gets the message sequence number for the given UID","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"uid","d":"The message UID"}]},"imap_num_msg":{"s":"Gets the number of messages in the current mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."}]},"imap_num_recent":{"s":"Gets the number of recent messages in current mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."}]},"imap_open":{"s":"Open an IMAP stream to a mailbox","p":[{"t":"mailbox","d":"A mailbox name consists of a server and a mailbox path on this server.\n       The special name INBOX stands for the current users\n       personal mailbox. Mailbox names that contain international characters\n       besides those in the printable ASCII space have to be encoded width\n       imap_utf7_encode()."},{"t":"username","d":"The user name"},{"t":"password","d":"The password associated with the username"},{"t":"options","d":"The options are a bit mask with one or more of\n       the following:\n       \n        \n         \n          OP_READONLY - Open mailbox read-only\n         \n        \n        \n         \n          OP_ANONYMOUS - Don&#039;t use or update a\n          .newsrc for news (NNTP only)\n         \n        \n        \n         \n          OP_HALFOPEN - For IMAP\n          and NNTP names, open a connection but\n          don&#039;t open a mailbox.\n         \n        \n        \n         \n          CL_EXPUNGE - Expunge mailbox automatically upon mailbox close\n          (see also imap_delete() and\n          imap_expunge())\n         \n        \n        \n         \n          OP_DEBUG - Debug protocol negotiations\n         \n        \n        \n         \n          OP_SHORTCACHE - Short (elt-only) caching\n         \n        \n        \n         \n          OP_SILENT - Don&#039;t pass up events (internal use)\n         \n        \n        \n         \n          OP_PROTOTYPE - Return driver prototype\n         \n        \n        \n         \n          OP_SECURE - Don&#039;t do non-secure authentication"},{"t":"n_retries","d":"Number of maximum connect attempts"},{"t":"params","d":"Connection parameters, the following (string) keys maybe used \n       to set one or more connection parameters:\n       \n        \n         \n          DISABLE_AUTHENTICATOR - Disable authentication properties"}]},"imap_ping":{"s":"Check if the IMAP stream is still active","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."}]},"imap_qprint":{"s":"Convert a quoted-printable string to an 8 bit string","p":[{"t":"string","d":"A quoted-printable string"}]},"imap_rename":{"s":"Alias of imap_renamemailbox()","p":null},"imap_renamemailbox":{"s":"Rename an old mailbox to new mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"old_mbox","d":"The old mailbox name, see imap_open() for more\n       information"},{"t":"new_mbox","d":"The new mailbox name, see imap_open() for more\n       information"}]},"imap_reopen":{"s":"Reopen IMAP stream to new mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"},{"t":"options","d":"The options are a bit mask with one or more of\n       the following:\n       \n        \n         \n          OP_READONLY - Open mailbox read-only\n         \n        \n        \n         \n          OP_ANONYMOUS - Don&#039;t use or update a\n          .newsrc for news (NNTP only)\n         \n        \n        \n         \n          OP_HALFOPEN - For IMAP\n          and NNTP names, open a connection but\n          don&#039;t open a mailbox.\n         \n        \n        \n         \n          OP_EXPUNGE - Silently expunge recycle stream\n         \n        \n        \n         \n          CL_EXPUNGE - Expunge mailbox automatically upon mailbox close\n          (see also imap_delete() and\n          imap_expunge())"},{"t":"n_retries","d":"Number of maximum connect attempts"}]},"imap_rfc822_parse_adrlist":{"s":"Parses an address string","p":[{"t":"address","d":"A string containing addresses"},{"t":"default_host","d":"The default host name"}]},"imap_rfc822_parse_headers":{"s":"Parse mail headers from a string","p":[{"t":"headers","d":"The parsed headers data"},{"t":"defaulthost","d":"The default host name"}]},"imap_rfc822_write_address":{"s":"Returns a properly formatted email address given the mailbox, host, and personal info","p":[{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"},{"t":"host","d":"The email host part"},{"t":"personal","d":"The name of the account owner"}]},"imap_savebody":{"s":"Save a specific body section to a file","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"file","d":"The path to the saved file as a string, or a valid file descriptor\n       returned by fopen()."},{"t":"msg_number","d":"The message number"},{"t":"part_number","d":"The part number. It is a string of integers delimited by period which\n       index into a body part list as per the IMAP4 specification"},{"t":"options","d":"A bitmask with one or more of the following:\n       \n        \n         \n          FT_UID - The msg_number is a UID\n         \n        \n        \n         \n          FT_PEEK - Do not set the \\Seen flag if\n          not already set\n         \n        \n        \n         \n          FT_INTERNAL - The return string is in\n          internal format, will not canonicalize to CRLF."}]},"imap_scan":{"s":"Alias of imap_listscan()","p":null},"imap_scanmailbox":{"s":"Alias of imap_listscan()","p":null},"imap_search":{"s":"This function returns an array of messages matching the given search criteria","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"criteria","d":"A string, delimited by spaces, in which the following keywords are\n       allowed. Any multi-word arguments (e.g.\n       FROM &quot;joey smith&quot;) must be quoted. Results will match\n       all criteria entries.\n       \n        \n         \n          ALL - return all messages matching the rest of the criteria\n         \n        \n        \n         \n          ANSWERED - match messages with the \\\\ANSWERED flag set\n         \n        \n        \n         \n          BCC &quot;string&quot; - match messages with &quot;string&quot; in the Bcc: field\n         \n        \n        \n         \n          BEFORE &quot;date&quot; - match messages with Date: before &quot;date&quot;\n         \n        \n        \n         \n          BODY &quot;string&quot; - match messages with &quot;string&quot; in the body of the message\n         \n        \n        \n         \n          CC &quot;string&quot; - match messages with &quot;string&quot; in the Cc: field\n         \n        \n        \n         \n          DELETED - match deleted messages\n         \n        \n        \n         \n          FLAGGED - match messages with the \\\\FLAGGED (sometimes\n          referred to as Important or Urgent) flag set\n         \n        \n        \n         \n          FROM &quot;string&quot; - match messages with &quot;string&quot; in the From: field\n         \n        \n        \n         \n          KEYWORD &quot;string&quot; - match messages with &quot;string&quot; as a keyword\n         \n        \n        \n         \n          NEW - match new messages\n         \n        \n        \n         \n          OLD - match old messages\n         \n        \n        \n         \n          ON &quot;date&quot; - match messages with Date: matching &quot;date&quot;\n         \n        \n        \n         \n          RECENT - match messages with the \\\\RECENT flag set\n         \n        \n        \n         \n          SEEN - match messages that have been read (the \\\\SEEN flag is set)\n         \n        \n        \n         \n          SINCE &quot;date&quot; - match messages with Date: after &quot;date&quot;\n         \n        \n        \n         \n          SUBJECT &quot;string&quot; - match messages with &quot;string&quot; in the Subject:\n         \n        \n        \n         \n          TEXT &quot;string&quot; - match messages with text &quot;string&quot;\n         \n        \n        \n         \n          TO &quot;string&quot; - match messages with &quot;string&quot; in the To:\n         \n        \n        \n         \n          UNANSWERED - match messages that have not been answered\n         \n        \n        \n         \n          UNDELETED - match messages that are not deleted\n         \n        \n        \n         \n          UNFLAGGED - match messages that are not flagged\n         \n        \n        \n         \n          UNKEYWORD &quot;string&quot; - match messages that do not have the\n          keyword &quot;string&quot;\n         \n        \n        \n         \n          UNSEEN - match messages which have not been read yet"},{"t":"options","d":"Valid values for options are \n       SE_UID, which causes the returned array to\n       contain UIDs instead of messages sequence numbers."},{"t":"charset","d":""}]},"imap_setacl":{"s":"Sets the ACL for a given mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"},{"t":"id","d":"The user to give the rights to."},{"t":"rights","d":"The rights to give to the user. Passing an empty string will delete\n       acl."}]},"imap_setflag_full":{"s":"Sets flags on messages","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"sequence","d":"A sequence of message numbers. You can enumerate desired messages\n       with the X,Y syntax, or retrieve all messages \n       within an interval with the X:Y syntax"},{"t":"flag","d":"The flags which you can set are \\Seen, \n       \\Answered, \\Flagged,\n       \\Deleted, and \\Draft as\n       defined by &raquo;&nbsp;RFC2060."},{"t":"options","d":"A bit mask that may contain the single option:\n       \n        \n         \n          ST_UID - The sequence argument contains UIDs\n          instead of sequence numbers"}]},"imap_set_quota":{"s":"Sets a quota for a given mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"quota_root","d":"The mailbox to have a quota set. This should follow the IMAP standard\n       format for a mailbox: user.name."},{"t":"quota_limit","d":"The maximum size (in KB) for the quota_root"}]},"imap_sort":{"s":"Gets and sort messages","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"criteria","d":"Criteria can be one (and only one) of the following:\n       \n        \n         \n          SORTDATE - message Date\n         \n        \n        \n         \n          SORTARRIVAL - arrival date\n         \n        \n        \n         \n          SORTFROM - mailbox in first From address\n         \n        \n        \n         \n          SORTSUBJECT - message subject\n         \n        \n        \n         \n          SORTTO - mailbox in first To address\n         \n        \n        \n         \n          SORTCC - mailbox in first cc address\n         \n        \n        \n         \n          SORTSIZE - size of message in octets"},{"t":"reverse","d":"Set this to 1 for reverse sorting"},{"t":"options","d":"The options are a bitmask of one or more of the\n       following:\n       \n        \n         \n          SE_UID - Return UIDs instead of sequence numbers\n         \n        \n        \n         \n          SE_NOPREFETCH - Don&#039;t prefetch searched messages"},{"t":"search_criteria","d":""},{"t":"charset","d":""}]},"imap_status":{"s":"Returns status information on a mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"},{"t":"options","d":"Valid flags are:\n       \n        \n         \n          SA_MESSAGES - set $status->messages to the\n          number of messages in the mailbox\n         \n        \n        \n         \n          SA_RECENT - set $status->recent to the number\n          of recent messages in the mailbox\n         \n        \n        \n         \n          SA_UNSEEN - set $status->unseen to the number\n          of unseen (new) messages in the mailbox\n         \n        \n        \n         \n          SA_UIDNEXT - set $status->uidnext to the next\n          uid to be used in the mailbox\n         \n        \n        \n         \n          SA_UIDVALIDITY - set $status->uidvalidity to a\n          constant that changes when uids for the mailbox may no longer be\n          valid\n         \n        \n        \n         \n          SA_ALL - set all of the above"}]},"imap_subscribe":{"s":"Subscribe to a mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"}]},"imap_thread":{"s":"Returns a tree of threaded message","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"options","d":""}]},"imap_timeout":{"s":"Set or fetch imap timeout","p":[{"t":"timeout_type","d":"One of the following:\n       IMAP_OPENTIMEOUT,\n       IMAP_READTIMEOUT,\n       IMAP_WRITETIMEOUT, or\n       IMAP_CLOSETIMEOUT."},{"t":"timeout","d":"The timeout, in seconds."}]},"imap_uid":{"s":"This function returns the UID for the given message sequence number","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number."}]},"imap_undelete":{"s":"Unmark the message which is marked deleted","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"msg_number","d":"The message number"},{"t":"flags","d":""}]},"imap_unsubscribe":{"s":"Unsubscribe from a mailbox","p":[{"t":"","d":"An IMAP stream returned by\nimap_open()."},{"t":"mailbox","d":"The mailbox name, see imap_open() for more\n       information"}]},"imap_utf7_decode":{"s":"Decodes a modified UTF-7 encoded string","p":[{"t":"text","d":"A modified UTF-7 encoding string, as defined in &raquo;&nbsp;RFC 2060, section 5.1.3 (original UTF-7\n       was defined in &raquo;&nbsp;RFC1642)."}]},"imap_utf7_encode":{"s":"Converts ISO-8859-1 string to modified UTF-7 text","p":[{"t":"data","d":"An ISO-8859-1 string."}]},"imap_utf8":{"s":"Converts MIME-encoded text to UTF-8","p":[{"t":"mime_encoded_text","d":"A MIME encoded string. MIME encoding method and the UTF-8 \n       specification are described in &raquo;&nbsp;RFC2047 and &raquo;&nbsp;RFC2044 respectively."}]},"implode":{"s":"Join array elements with a string","p":[{"t":"glue","d":"Defaults to an empty string."},{"t":"pieces","d":"The array of strings to implode."}]},"inclued_get_data":{"s":"Get the inclued data","p":null},"inet_ntop":{"s":"Converts a packed internet address to a human readable representation","p":[{"t":"in_addr","d":"A 32bit IPv4, or 128bit IPv6 address."}]},"inet_pton":{"s":"Converts a human readable IP address to its packed in_addr representation","p":[{"t":"address","d":"A human readable IPv4 or IPv6 address."}]},"ingres_autocommit":{"s":"Switch autocommit on or off","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_autocommit_state":{"s":"Test if the connection is using autocommit","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_charset":{"s":"Returns the installation character set","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_close":{"s":"Close an Ingres database connection","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_commit":{"s":"Commit a transaction","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_connect":{"s":"Open a connection to an Ingres database","p":[{"t":"database","d":"The database name. Must follow the syntax:"},{"t":"username","d":"The Ingres user name"},{"t":"password","d":"The password associated with username"}]},"ingres_cursor":{"s":"Get a cursor name for a given result resource","p":[{"t":"result","d":"The query result identifier"}]},"ingres_errno":{"s":"Get the last Ingres error number generated","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_error":{"s":"Get a meaningful error message for the last error generated","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_errsqlstate":{"s":"Get the last SQLSTATE error code generated","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_escape_string":{"s":"Escape special characters for use in a query","p":[{"t":"link","d":"The connection link identifier"},{"t":"source_string","d":"The source string to be parsed"}]},"ingres_execute":{"s":"Execute a prepared query","p":[{"t":"result","d":"The result query identifier"},{"t":"params","d":"An array of parameter values to be used with the query"},{"t":"types","d":"A string containing a sequence of types for the parameter values\n       passed. See the types parameter in\n       ingres_query() for the list of type codes."}]},"ingres_fetch_array":{"s":"Fetch a row of result into an array","p":[{"t":"result","d":"The query result identifier"},{"t":"result_type","d":"The result type. This result_type can be INGRES_NUM for\n       enumerated array, INGRES_ASSOC for associative array, or\n       INGRES_BOTH (default)."}]},"ingres_fetch_assoc":{"s":"Fetch a row of result into an associative array","p":[{"t":"result","d":"The query result identifier"}]},"ingres_fetch_object":{"s":"Fetch a row of result into an object","p":[{"t":"link","d":"The query result identifier"},{"t":"result_type","d":"(Optional argument.) result_type is a\n       constant and can take the following values: INGRES_ASSOC,\n       INGRES_NUM, and INGRES_BOTH."}]},"ingres_fetch_proc_return":{"s":"Get the return value from a procedure call","p":[{"t":"result","d":"The result identifier for a query"}]},"ingres_fetch_row":{"s":"Fetch a row of result into an enumerated array","p":[{"t":"result","d":"The query result identifier"}]},"ingres_field_length":{"s":"Get the length of a field","p":[{"t":"result","d":"The query result identifier"},{"t":"index","d":"index is the column number whose length\n       will be retrieved."}]},"ingres_field_name":{"s":"Get the name of a field in a query result","p":[{"t":"result","d":"The query result identifier"},{"t":"index","d":"index is the field whose name will be\n       retrieved."}]},"ingres_field_nullable":{"s":"Test if a field is nullable","p":[{"t":"result","d":"The query result identifier"},{"t":"index","d":"index is the field whose nullability will be\n       retrieved."}]},"ingres_field_precision":{"s":"Get the precision of a field","p":[{"t":"result","d":"The query result identifier"},{"t":"index","d":"index is the field whose precision will be\n       retrieved."}]},"ingres_field_scale":{"s":"Get the scale of a field","p":[{"t":"result","d":"The query result identifier"},{"t":"index","d":"index is the field whose scale will be\n       retrieved."}]},"ingres_field_type":{"s":"Get the type of a field in a query result","p":[{"t":"result","d":"The query result identifier"},{"t":"index","d":"index is the field whose type will be\n       retrieved."}]},"ingres_free_result":{"s":"Free the resources associated with a result identifier","p":[{"t":"result","d":"The query result identifier"}]},"ingres_next_error":{"s":"Get the next Ingres error","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_num_fields":{"s":"Get the number of fields returned by the last query","p":[{"t":"result","d":"The query result identifier"}]},"ingres_num_rows":{"s":"Get the number of rows affected or returned by a query","p":[{"t":"result","d":"The result identifier for a query"}]},"ingres_pconnect":{"s":"Open a persistent connection to an Ingres database","p":[{"t":"database","d":"The database name. Must follow the syntax:"},{"t":"username","d":"The Ingres user name"},{"t":"password","d":"The password associated with username"},{"t":"options","d":"See ingres_connect() for the list of options that\n       can be passed"}]},"ingres_prepare":{"s":"Prepare a query for later execution","p":[{"t":"link","d":"The connection link identifier"},{"t":"query","d":"A valid SQL query (see the Ingres SQL reference\n       guide) in the Ingres documentation.\n       See the query\n       parameter in ingres_query() for a list of SQL\n       statements which cannot be executed using\n       ingres_prepare()"}]},"ingres_query":{"s":"Send an SQL query to Ingres","p":[{"t":"link","d":"The connection link identifier."},{"t":"params","d":"An array of parameter values to be used with the query"}]},"ingres_result_seek":{"s":"Set the row position before fetching data","p":[{"t":"result","d":"The result identifier for a query"},{"t":"position","d":"The row to position the cursor on. If ingres.array_index_start\n       is set to 0, then the first row is 0, else it is 1"}]},"ingres_rollback":{"s":"Roll back a transaction","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_set_environment":{"s":"Set environment features controlling output options","p":[{"t":"link","d":"The connection link identifier"}]},"ingres_unbuffered_query":{"s":"Send an unbuffered  SQL query to Ingres","p":[{"t":"link","d":"The connection link identifier"},{"t":"query","d":"A valid SQL query (see the Ingres SQL reference\n       guide) in the Ingres documentation.\n       See the query\n       parameter in ingres_query() for a list of SQL\n       statements that cannot be executed via\n       ingres_unbuffered_query()."},{"t":"params","d":"An array of parameter values to be used with the query"},{"t":"types","d":"A string containing a sequence of types for the parameter values\n       passed. See the types parameter in\n       ingres_query() for the list of type codes."}]},"ini_alter":{"s":"Alias of ini_set()","p":null},"ini_get":{"s":"Gets the value of a configuration option","p":[{"t":"varname","d":"The configuration option name."}]},"ini_get_all":{"s":"Gets all configuration options","p":[{"t":"extension","d":"An optional extension name. If set, the function return only options\n       specific for that extension."},{"t":"details","d":"Retrieve details settings or only the current value for each setting.\n       Default is TRUE (retrieve details)."}]},"ini_restore":{"s":"Restores the value of a configuration option","p":[{"t":"varname","d":"The configuration option name."}]},"ini_set":{"s":"Sets the value of a configuration option","p":[{"t":"varname","d":""},{"t":"newvalue","d":"The new value for the option."}]},"inotify_add_watch":{"s":"Add a watch to an initialized inotify instance","p":[{"t":"inotify_instance","d":"Resource returned by\ninotify_init()"},{"t":"pathname","d":"File or directory to watch"},{"t":"mask","d":"Events to watch for. See Predefined Constants."}]},"inotify_init":{"s":"Initialize an inotify instance","p":null},"inotify_queue_len":{"s":"Return a number upper than zero if there are pending events","p":[{"t":"inotify_instance","d":"Resource returned by\ninotify_init()"}]},"inotify_read":{"s":"Read events from an inotify instance","p":[{"t":"inotify_instance","d":"Resource returned by\ninotify_init()"}]},"inotify_rm_watch":{"s":"Remove an existing watch from an inotify instance","p":[{"t":"inotify_instance","d":"Resource returned by\ninotify_init()"},{"t":"watch_descriptor","d":"Watch to remove from the instance"}]},"interface_exists":{"s":"Checks if the interface has been defined","p":[{"t":"interface_name","d":"The interface name"},{"t":"autoload","d":"Whether to call __autoload or not by default."}]},"intl_error_name":{"s":"Get symbolic name for a given error code","p":[{"t":"error_code","d":"ICU error code."}]},"intl_get_error_code":{"s":"Get the last error code","p":null},"intl_get_error_message":{"s":"Get description of the last error","p":null},"intl_is_failure":{"s":"Check whether the given error code indicates failure","p":[{"t":"error_code","d":"is a value that returned by functions:\n       intl_get_error_code(),\n       collator_get_error_code() ."}]},"in_array":{"s":"Checks if a value exists in an array","p":[{"t":"needle","d":"The searched value."},{"t":"haystack","d":"The array."},{"t":"strict","d":"If the third parameter strict is set to TRUE\n       then the in_array() function will also check the\n       types of the\n       needle in the haystack."}]},"ip2long":{"s":"Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address","p":[{"t":"ip_address","d":"A standard format address."}]},"iptcembed":{"s":"Embeds binary IPTC data into a JPEG image","p":[{"t":"iptcdata","d":"The data to be written."},{"t":"jpeg_file_name","d":"Path to the JPEG image."},{"t":"spool","d":"Spool flag. If the spool flag is over 2 then the JPEG will be \n       returned as a string."}]},"iptcparse":{"s":"Parse a binary IPTC block into single tags.","p":[{"t":"iptcblock","d":"A binary IPTC block."}]},"is_a":{"s":"Checks if the object is of this class or has this class as one of its parents","p":[{"t":"object","d":"The tested object"},{"t":"class_name","d":"The class name"},{"t":"allow_string","d":"If this parameter set to FALSE, string class name as object\n       is not allowed. This also prevents from calling autoloader if the class doesn&#039;t exist."}]},"is_dir":{"s":"Tells whether the filename is a directory","p":[{"t":"filename","d":"Path to the file. If filename is a relative\n       filename, it will be checked relative to the current working\n       directory. If filename is a symbolic or hard link \n       then the link will be resolved and checked. If you have enabled safe mode,\n       or open_basedir further\n       restrictions may apply."}]},"is_executable":{"s":"Tells whether the filename is executable","p":[{"t":"filename","d":"Path to the file."}]},"is_file":{"s":"Tells whether the filename is a regular file","p":[{"t":"filename","d":"Path to the file."}]},"is_finite":{"s":"Finds whether a value is a legal finite number","p":[{"t":"val","d":"The value to check"}]},"is_infinite":{"s":"Finds whether a value is infinite","p":[{"t":"val","d":"The value to check"}]},"is_link":{"s":"Tells whether the filename is a symbolic link","p":[{"t":"filename","d":"Path to the file."}]},"is_nan":{"s":"Finds whether a value is not a number","p":[{"t":"val","d":"The value to check"}]},"is_readable":{"s":"Tells whether a file exists and is readable","p":[{"t":"filename","d":"Path to the file."}]},"is_subclass_of":{"s":"Checks if the object has this class as one of its parents","p":[{"t":"object","d":"A class name or an object instance"},{"t":"class_name","d":"The class name"},{"t":"allow_string","d":"If this parameter set to false, string class name as object\n       is not allowed. This also prevents from calling autoloader if the class doesn&#039;t exist."}]},"is_tainted":{"s":"Checks whether a string is tainted","p":[{"t":"string","d":""}]},"is_uploaded_file":{"s":"Tells whether the file was uploaded via HTTP POST","p":[{"t":"filename","d":"The filename being checked."}]},"is_writable":{"s":"Tells whether the filename is writable","p":[{"t":"filename","d":"The filename being checked."}]},"is_writeable":{"s":"Alias of is_writable()","p":null},"iterator_apply":{"s":"Call a function for every element in an iterator","p":[{"t":"iterator","d":"The class to iterate over."},{"t":"function","d":"The callback function to call on every element.\n       Note: \n        \n         The function must return TRUE in order to\n         continue iterating over the iterator."},{"t":"args","d":"Arguments to pass to the callback function."}]},"iterator_count":{"s":"Count the elements in an iterator","p":[{"t":"iterator","d":"The iterator being counted."}]},"iterator_to_array":{"s":"Copy the iterator into an array","p":[{"t":"iterator","d":"The iterator being copied."},{"t":"use_keys","d":"Whether to use the iterator element keys as index."}]},"java_last_exception_clear":{"s":"Clear last Java exception","p":null},"java_last_exception_get":{"s":"Get last Java exception","p":null},"jdtojewish":{"s":"Converts a Julian day count to a Jewish calendar date","p":[{"t":"julianday","d":"A julian day number as integer"},{"t":"hebrew","d":"If the hebrew parameter is set to TRUE, the\n       fl parameter is used for Hebrew, string based,\n       output format."},{"t":"fl","d":"The available formats are:  \n       CAL_JEWISH_ADD_ALAFIM_GERESH,\n       CAL_JEWISH_ADD_ALAFIM,\n       CAL_JEWISH_ADD_GERESHAYIM."}]},"jdtounix":{"s":"Convert Julian Day to Unix timestamp","p":[{"t":"jday","d":"A julian day number between 2440588 and 2465342."}]},"join":{"s":"Alias of implode()","p":null},"jpeg2wbmp":{"s":"Convert JPEG image file to WBMP image file","p":[{"t":"jpegname","d":"Path to JPEG file."},{"t":"wbmpname","d":"Path to destination WBMP file."},{"t":"dest_height","d":"Destination image height."},{"t":"dest_width","d":"Destination image width."},{"t":"threshold","d":"Threshold value, between 0 and 8 (inclusive)."}]},"json_decode":{"s":"Decodes a JSON string","p":[{"t":"json","d":"The json string being decoded."},{"t":"assoc","d":"When TRUE, returned objects will be converted into\n       associative arrays."},{"t":"depth","d":"User specified recursion depth."},{"t":"options","d":"Bitmask of JSON decode options.  Currently only\n       JSON_BIGINT_AS_STRING\n       is supported (default is to cast large integers as floats)"}]},"json_encode":{"s":"Returns the JSON representation of a value","p":[{"t":"value","d":"The value being encoded. Can be any type except\n       a resource."},{"t":"options","d":"Bitmask consisting of JSON_HEX_QUOT,\n       JSON_HEX_TAG,\n       JSON_HEX_AMP,\n       JSON_HEX_APOS,\n       JSON_NUMERIC_CHECK,\n       JSON_PRETTY_PRINT,\n       JSON_UNESCAPED_SLASHES,\n       JSON_FORCE_OBJECT,\n       JSON_UNESCAPED_UNICODE. The behaviour of these\n       constants is described on\n       the JSON constants page."},{"t":"depth","d":"Set the maximum depth. Must be greater than zero."}]},"json_last_error":{"s":"Returns the last error occurred","p":null},"json_last_error_msg":{"s":"Returns the error string of the last json_encode() or json_decode() call","p":null},"judy_type":{"s":"Return the type of a Judy array","p":[{"t":"array","d":"The Judy Array to test."}]},"judy_version":{"s":"Return or print the current PHP Judy version","p":null},"kadm5_chpass_principal":{"s":"Changes the principal&#039;s password","p":[{"t":"handle","d":"A KADM5 handle."},{"t":"principal","d":"The principal."},{"t":"password","d":"The new password."}]},"kadm5_create_principal":{"s":"Creates a kerberos principal with the given parameters","p":[{"t":"handle","d":"A KADM5 handle."},{"t":"principal","d":"The principal."},{"t":"password","d":"If password is omitted or is NULL, a random\n       key will be generated."},{"t":"options","d":"It is possible to specify several optional parameters within the\n       array options. Allowed are the following options:\n       KADM5_PRINC_EXPIRE_TIME,\n       KADM5_PW_EXPIRATION,\n       KADM5_ATTRIBUTES,\n       KADM5_MAX_LIFE,\n       KADM5_KVNO,\n       KADM5_POLICY,\n       KADM5_CLEARPOLICY,\n       KADM5_MAX_RLIFE."}]},"kadm5_delete_principal":{"s":"Deletes a kerberos principal","p":[{"t":"handle","d":"A KADM5 handle."},{"t":"principal","d":"The removed principal."}]},"kadm5_destroy":{"s":"Closes the connection to the admin server and releases all related resources","p":[{"t":"handle","d":"A KADM5 handle."}]},"kadm5_flush":{"s":"Flush all changes to the Kerberos database","p":[{"t":"handle","d":"A KADM5 handle."}]},"kadm5_get_policies":{"s":"Gets all policies from the Kerberos database","p":[{"t":"handle","d":"A KADM5 handle."}]},"kadm5_get_principal":{"s":"Gets the principal&#039;s entries from the Kerberos database","p":[{"t":"handle","d":"A KADM5 handle."},{"t":"principal","d":"The principal."}]},"kadm5_get_principals":{"s":"Gets all principals from the Kerberos database","p":[{"t":"handle","d":"A KADM5 handle."}]},"kadm5_init_with_password":{"s":"Opens a connection to the KADM5 library","p":[{"t":"admin_server","d":"The server."},{"t":"realm","d":"Defines the authentication domain for the connection."},{"t":"principal","d":"The principal."},{"t":"password","d":"If password is omitted or is NULL, a random\n       key will be generated."}]},"kadm5_modify_principal":{"s":"Modifies a kerberos principal with the given parameters","p":[{"t":"handle","d":"A KADM5 handle."},{"t":"principal","d":"The principal."},{"t":"options","d":"It is possible to specify several optional parameters within the\n       array options. Allowed are the following options:\n       KADM5_PRINC_EXPIRE_TIME,\n       KADM5_PW_EXPIRATION,\n       KADM5_ATTRIBUTES,\n       KADM5_MAX_LIFE,\n       KADM5_KVNO,\n       KADM5_POLICY,\n       KADM5_CLEARPOLICY,\n       KADM5_MAX_RLIFE.\n       KADM5_FAIL_AUTH_COUNT."}]},"key":{"s":"Fetch a key from an array","p":[{"t":"array","d":"The array."}]},"key_exists":{"s":"Alias of array_key_exists()","p":null},"krsort":{"s":"Sort an array by key in reverse order","p":[{"t":"array","d":"The input array."},{"t":"sort_flags","d":"You may modify the behavior of the sort using the optional parameter\n       sort_flags, for details see\n       sort()."}]},"ksort":{"s":"Sort an array by key","p":[{"t":"array","d":"The input array."},{"t":"sort_flags","d":"You may modify the behavior of the sort using the optional\n       parameter sort_flags, for details\n       see sort()."}]},"lcfirst":{"s":"Make a string&#039;s first character lowercase","p":[{"t":"str","d":"The input string."}]},"lcg_value":{"s":"Combined linear congruential generator","p":null},"lchgrp":{"s":"Changes group ownership of symlink","p":[{"t":"filename","d":"Path to the symlink."},{"t":"group","d":"The group specified by name or number."}]},"lchown":{"s":"Changes user ownership of symlink","p":[{"t":"filename","d":"Path to the file."},{"t":"user","d":"User name or number."}]},"ldap_8859_to_t61":{"s":"Translate 8859 characters to t61 characters","p":[{"t":"value","d":"The text to be translated."}]},"ldap_add":{"s":"Add entries to LDAP directory","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"dn","d":"The distinguished name of an LDAP entity."},{"t":"entry","d":""}]},"ldap_bind":{"s":"Bind to LDAP directory","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"bind_rdn","d":""},{"t":"bind_password","d":""}]},"ldap_close":{"s":"Alias of ldap_unbind()","p":null},"ldap_compare":{"s":"Compare value of attribute found in entry specified with DN","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"dn","d":"The distinguished name of an LDAP entity."},{"t":"attribute","d":"The attribute name."},{"t":"value","d":"The compared value."}]},"ldap_connect":{"s":"Connect to an LDAP server","p":[{"t":"hostname","d":"If you are using OpenLDAP 2.x.x you can specify a URL instead of the\n       hostname. To use LDAP with SSL, compile OpenLDAP 2.x.x with SSL\n       support, configure PHP with SSL, and set this parameter as  \n       ldaps:\/\/hostname\/."},{"t":"port","d":"The port to connect to. Not used when using URLs."}]},"ldap_control_paged_result":{"s":"Send LDAP pagination control","p":[{"t":"link","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"pagesize","d":"The number of entries by page."},{"t":"iscritical","d":"Indicates whether the pagination is critical of not. \n       If true and if the server doesn&#039;t support pagination, the search\n       will return no result."},{"t":"cookie","d":"An opaque structure sent by the server \n       (ldap_control_paged_result_response())."}]},"ldap_control_paged_result_response":{"s":"Retrieve the LDAP pagination cookie","p":[{"t":"link","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result","d":""},{"t":"cookie","d":"An opaque structure sent by the server."},{"t":"estimated","d":"The estimated number of entries to retrieve."}]},"ldap_count_entries":{"s":"Count the number of entries in a search","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_identifier","d":"The internal LDAP result."}]},"ldap_delete":{"s":"Delete an entry from a directory","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"dn","d":"The distinguished name of an LDAP entity."}]},"ldap_dn2ufn":{"s":"Convert DN to User Friendly Naming format","p":[{"t":"dn","d":"The distinguished name of an LDAP entity."}]},"ldap_err2str":{"s":"Convert LDAP error number into string error message","p":[{"t":"errno","d":"The error number."}]},"ldap_errno":{"s":"Return the LDAP error number of the last LDAP command","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."}]},"ldap_error":{"s":"Return the LDAP error message of the last LDAP command","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."}]},"ldap_explode_dn":{"s":"Splits DN into its component parts","p":[{"t":"dn","d":"The distinguished name of an LDAP entity."},{"t":"with_attrib","d":"Used to request if the RDNs are returned with only values or their\n       attributes as well.  To get RDNs with the attributes (i.e. in\n       attribute=value format) set with_attrib to 0\n       and to get only values set it to 1."}]},"ldap_first_attribute":{"s":"Return first attribute","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_entry_identifier","d":""},{"t":"ber_identifier","d":"ber_identifier is the identifier to internal\n       memory location pointer. It is passed by reference. The same\n       ber_identifier is passed to\n       ldap_next_attribute() , which modifies that\n       pointer."}]},"ldap_first_entry":{"s":"Return first result id","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_identifier","d":""}]},"ldap_first_reference":{"s":"Return first reference","p":null},"ldap_free_result":{"s":"Free result memory","p":[{"t":"result_identifier","d":""}]},"ldap_get_attributes":{"s":"Get attributes from a search result entry","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_entry_identifier","d":""}]},"ldap_get_dn":{"s":"Get the DN of a result entry","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_entry_identifier","d":""}]},"ldap_get_entries":{"s":"Get all result entries","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_identifier","d":""}]},"ldap_get_option":{"s":"Get the current value for given option","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"option","d":"The parameter option can be one of:\n       \n        \n         \n          \n           Option\n           Type\n          \n\n         \n\n         \n          \n           LDAP_OPT_DEREF\n           integer\n          \n\n          \n           LDAP_OPT_SIZELIMIT\n           integer\n          \n\n          \n           LDAP_OPT_TIMELIMIT\n           integer\n          \n\n          \n           LDAP_OPT_NETWORK_TIMEOUT\n           integer\n          \n\n          \n           LDAP_OPT_PROTOCOL_VERSION\n           integer\n          \n\n          \n           LDAP_OPT_ERROR_NUMBER\n           integer\n          \n\n          \n           LDAP_OPT_REFERRALS\n           bool\n          \n\n          \n           LDAP_OPT_RESTART\n           bool\n          \n\n          \n           LDAP_OPT_HOST_NAME\n           string\n          \n\n          \n           LDAP_OPT_ERROR_STRING\n           string\n          \n\n          \n           LDAP_OPT_MATCHED_DN\n           string\n          \n\n          \n           LDAP_OPT_SERVER_CONTROLS\n           array\n          \n\n          \n           LDAP_OPT_CLIENT_CONTROLS\n           array"},{"t":"retval","d":"This will be set to the option value."}]},"ldap_get_values":{"s":"Get all values from a result entry","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_entry_identifier","d":""},{"t":"attribute","d":""}]},"ldap_get_values_len":{"s":"Get all binary values from a result entry","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_entry_identifier","d":""},{"t":"attribute","d":""}]},"ldap_list":{"s":"Single-level search","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"base_dn","d":"The base DN for the directory."},{"t":"filter","d":""},{"t":"attributes","d":"An array of the required attributes, e.g. array(&quot;mail&quot;, &quot;sn&quot;, &quot;cn&quot;).\n       Note that the &quot;dn&quot; is always returned irrespective of which attributes\n       types are requested."},{"t":"attrsonly","d":"Should be set to 1 if only attribute types are wanted. If set to 0\n       both attributes types and attribute values are fetched which is the\n       default behaviour."},{"t":"sizelimit","d":"Enables you to limit the count of entries fetched. Setting this to 0\n       means no limit."},{"t":"timelimit","d":"Sets the number of seconds how long is spend on the search. Setting\n       this to 0 means no limit."},{"t":"deref","d":"Specifies how aliases should be handled during the search. It can be\n       one of the following:\n       \n        \n         \n          LDAP_DEREF_NEVER - (default) aliases are never\n          dereferenced.\n         \n        \n        \n         \n          LDAP_DEREF_SEARCHING - aliases should be\n          dereferenced during the search but not when locating the base object\n          of the search.\n         \n        \n        \n         \n          LDAP_DEREF_FINDING - aliases should be\n          dereferenced when locating the base object but not during the search.\n         \n        \n        \n         \n          LDAP_DEREF_ALWAYS - aliases should be dereferenced\n          always."}]},"ldap_modify":{"s":"Modify an LDAP entry","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"dn","d":"The distinguished name of an LDAP entity."},{"t":"entry","d":""}]},"ldap_mod_add":{"s":"Add attribute values to current attributes","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"dn","d":"The distinguished name of an LDAP entity."},{"t":"entry","d":""}]},"ldap_mod_del":{"s":"Delete attribute values from current attributes","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"dn","d":"The distinguished name of an LDAP entity."},{"t":"entry","d":""}]},"ldap_mod_replace":{"s":"Replace attribute values with new ones","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"dn","d":"The distinguished name of an LDAP entity."},{"t":"entry","d":""}]},"ldap_next_attribute":{"s":"Get the next attribute in result","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_entry_identifier","d":""},{"t":"ber_identifier","d":"The internal state of the pointer is maintained by this parameter."}]},"ldap_next_entry":{"s":"Get next result entry","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result_entry_identifier","d":""}]},"ldap_next_reference":{"s":"Get next reference","p":null},"ldap_parse_reference":{"s":"Extract information from reference entry","p":null},"ldap_parse_result":{"s":"Extract information from result","p":null},"ldap_read":{"s":"Read an entry","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"base_dn","d":"The base DN for the directory."},{"t":"filter","d":"An empty filter is not allowed. If you want to retrieve absolutely all\n       information for this entry, use a filter of \n       objectClass=*. If you know which entry types are\n       used on the directory server, you might use an appropriate filter such\n       as objectClass=inetOrgPerson."},{"t":"attributes","d":"An array of the required attributes, e.g. array(&quot;mail&quot;, &quot;sn&quot;, &quot;cn&quot;).\n       Note that the &quot;dn&quot; is always returned irrespective of which attributes\n       types are requested."},{"t":"attrsonly","d":"Should be set to 1 if only attribute types are wanted. If set to 0\n       both attributes types and attribute values are fetched which is the\n       default behaviour."},{"t":"sizelimit","d":"Enables you to limit the count of entries fetched. Setting this to 0\n       means no limit."},{"t":"timelimit","d":"Sets the number of seconds how long is spend on the search. Setting\n       this to 0 means no limit."},{"t":"deref","d":"Specifies how aliases should be handled during the search. It can be\n       one of the following:\n       \n        \n         \n          LDAP_DEREF_NEVER - (default) aliases are never\n          dereferenced.\n         \n        \n        \n         \n          LDAP_DEREF_SEARCHING - aliases should be\n          dereferenced during the search but not when locating the base object\n          of the search.\n         \n        \n        \n         \n          LDAP_DEREF_FINDING - aliases should be\n          dereferenced when locating the base object but not during the search.\n         \n        \n        \n         \n          LDAP_DEREF_ALWAYS - aliases should be dereferenced\n          always."}]},"ldap_rename":{"s":"Modify the name of an entry","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"dn","d":"The distinguished name of an LDAP entity."},{"t":"newrdn","d":"The new RDN."},{"t":"newparent","d":"The new parent\/superior entry."},{"t":"deleteoldrdn","d":"If TRUE the old RDN value(s) is removed, else the old RDN value(s)\n       is retained as non-distinguished values of the entry."}]},"ldap_sasl_bind":{"s":"Bind to LDAP directory using SASL","p":null},"ldap_search":{"s":"Search LDAP tree","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"base_dn","d":"The base DN for the directory."},{"t":"filter","d":"The search filter can be simple or advanced, using boolean operators in\n       the format described in the LDAP documentation (see the &raquo;&nbsp;Netscape Directory SDK for full\n       information on filters)."},{"t":"attributes","d":"An array of the required attributes, e.g. array(&quot;mail&quot;, &quot;sn&quot;, &quot;cn&quot;).\n       Note that the &quot;dn&quot; is always returned irrespective of which attributes\n       types are requested."},{"t":"attrsonly","d":"Should be set to 1 if only attribute types are wanted. If set to 0\n       both attributes types and attribute values are fetched which is the\n       default behaviour."},{"t":"sizelimit","d":"Enables you to limit the count of entries fetched. Setting this to 0\n       means no limit."},{"t":"timelimit","d":"Sets the number of seconds how long is spend on the search. Setting\n       this to 0 means no limit."},{"t":"deref","d":"Specifies how aliases should be handled during the search. It can be\n       one of the following:\n       \n        \n         \n          LDAP_DEREF_NEVER - (default) aliases are never\n          dereferenced.\n         \n        \n        \n         \n          LDAP_DEREF_SEARCHING - aliases should be\n          dereferenced during the search but not when locating the base object\n          of the search.\n         \n        \n        \n         \n          LDAP_DEREF_FINDING - aliases should be\n          dereferenced when locating the base object but not during the search.\n         \n        \n        \n         \n          LDAP_DEREF_ALWAYS - aliases should be dereferenced\n          always."}]},"ldap_set_option":{"s":"Set the value of the given option","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"option","d":"The parameter option can be one of:\n       \n        \n         \n          \n           Option\n           Type\n           Available since\n          \n\n         \n\n         \n          \n           LDAP_OPT_DEREF\n           integer\n           &nbsp;\n          \n\n          \n           LDAP_OPT_SIZELIMIT\n           integer\n           &nbsp;\n          \n\n          \n           LDAP_OPT_TIMELIMIT\n           integer\n           &nbsp;\n          \n\n          \n           LDAP_OPT_NETWORK_TIMEOUT\n           integer\n           PHP 5.3.0\n          \n\n          \n           LDAP_OPT_PROTOCOL_VERSION\n           integer\n           &nbsp;\n          \n\n          \n           LDAP_OPT_ERROR_NUMBER\n           integer\n           &nbsp;\n          \n\n          \n           LDAP_OPT_REFERRALS\n           bool\n           &nbsp;\n          \n\n          \n           LDAP_OPT_RESTART\n           bool\n           &nbsp;\n          \n\n          \n           LDAP_OPT_HOST_NAME\n           string\n           &nbsp;\n          \n\n          \n           LDAP_OPT_ERROR_STRING\n           string\n           &nbsp;\n          \n\n          \n           LDAP_OPT_MATCHED_DN\n           string\n           &nbsp;\n          \n\n          \n           LDAP_OPT_SERVER_CONTROLS\n           array\n           &nbsp;\n          \n\n          \n           LDAP_OPT_CLIENT_CONTROLS\n           array\n           &nbsp;"},{"t":"newval","d":"The new value for the specified option."}]},"ldap_set_rebind_proc":{"s":"Set a callback function to do re-binds on referral chasing","p":null},"ldap_sort":{"s":"Sort LDAP result entries","p":[{"t":"link","d":"An LDAP link identifier, returned by ldap_connect()."},{"t":"result","d":"An search result identifier, returned by\n       ldap_search()."},{"t":"sortfilter","d":"The attribute to use as a key in the sort."}]},"ldap_start_tls":{"s":"Start TLS","p":null},"ldap_t61_to_8859":{"s":"Translate t61 characters to 8859 characters","p":null},"ldap_unbind":{"s":"Unbind from LDAP directory","p":[{"t":"link_identifier","d":"An LDAP link identifier, returned by ldap_connect()."}]},"levenshtein":{"s":"Calculate Levenshtein distance between two strings","p":[{"t":"str1","d":"One of the strings being evaluated for Levenshtein distance."},{"t":"str2","d":"One of the strings being evaluated for Levenshtein distance."},{"t":"cost_ins","d":"Defines the cost of insertion."},{"t":"cost_rep","d":"Defines the cost of replacement."},{"t":"cost_del","d":"Defines the cost of deletion."}]},"link":{"s":"Create a hard link","p":[{"t":"target","d":"Target of the link."},{"t":"link","d":"The link name."}]},"linkinfo":{"s":"Gets information about a link","p":[{"t":"path","d":"Path to the link."}]},"list":{"s":"Assign variables as if they were an array","p":[{"t":"var1","d":"A variable."}]},"localeconv":{"s":"Get numeric formatting information","p":null},"localtime":{"s":"Get the local time","p":[{"t":"timestamp","d":"The optional timestamp parameter is an\ninteger Unix timestamp that defaults to the current\nlocal time if a timestamp is not given. In other\nwords, it defaults to the value of time()."},{"t":"is_associative","d":"If set to FALSE or not supplied then the array is returned as a regular, \n       numerically indexed array.  If the argument is set to TRUE then\n       localtime() returns an associative array containing\n       all the different elements of the structure returned by the C\n       function call to localtime.  The names of the different keys of\n       the associative array are as follows:"}]},"log":{"s":"Natural logarithm","p":[{"t":"arg","d":"The value to calculate the logarithm for"},{"t":"base","d":"The optional logarithmic base to use \n       (defaults to &#039;e&#039; and so to the natural logarithm)."}]},"log10":{"s":"Base-10 logarithm","p":[{"t":"arg","d":"The argument to process"}]},"log1p":{"s":"","p":[{"t":"number","d":"The argument to process"}]},"long2ip":{"s":"Converts an (IPv4) Internet network address into a string in Internet standard dotted format","p":[{"t":"proper_address","d":"A proper address representation."}]},"lstat":{"s":"Gives information about a file or symbolic link","p":[{"t":"filename","d":"Path to a file or a symbolic link."}]},"ltrim":{"s":"Strip whitespace (or other characters) from the beginning of a string","p":[{"t":"str","d":"The input string."},{"t":"character_mask","d":"You can also specify the characters you want to strip, by means of the\n       character_mask parameter.\n       Simply list all characters that you want to be stripped. With\n       .. you can specify a range of characters."}]},"lzf_compress":{"s":"","p":[{"t":"data","d":"The string to compress."}]},"lzf_decompress":{"s":"","p":[{"t":"data","d":"The compressed string."}]},"magic_quotes_runtime":{"s":"Alias of set_magic_quotes_runtime()","p":null},"mail":{"s":"Send mail","p":[{"t":"to","d":"Receiver, or receivers of the mail."},{"t":"subject","d":"Subject of the email to be sent."}]},"mailparse_determine_best_xfer_encoding":{"s":"Gets the best way of encoding","p":[{"t":"fp","d":"A valid file pointer, which must be seek-able."}]},"mailparse_msg_create":{"s":"Create a mime mail resource","p":null},"mailparse_msg_extract_part":{"s":"","p":[{"t":"mimemail","d":"A valid MIME resource."},{"t":"msgbody","d":""},{"t":"callbackfunc","d":""}]},"mailparse_msg_extract_part_file":{"s":"Extracts\/decodes a message section","p":[{"t":"mimemail","d":"A valid MIME resource, created with\n       mailparse_msg_create()."},{"t":"filename","d":"Can be a file name or a valid stream resource."},{"t":"callbackfunc","d":"If set, this must be either a valid callback that will be passed the\n       extracted section, or NULL to make this function return the\n       extracted section."}]},"mailparse_msg_extract_whole_part_file":{"s":"Extracts a message section including headers without decoding the transfer encoding","p":[{"t":"mimemail","d":"A valid MIME resource."},{"t":"filename","d":""},{"t":"callbackfunc","d":""}]},"mailparse_msg_free":{"s":"Frees a MIME resource","p":[{"t":"mimemail","d":"A valid MIME resource allocated by\n       mailparse_msg_create() or \n       mailparse_msg_parse_file()."}]},"mailparse_msg_get_part":{"s":"Returns a handle on a given section in a mimemessage","p":[{"t":"mimemail","d":"A valid MIME resource."},{"t":"mimesection","d":""}]},"mailparse_msg_get_part_data":{"s":"Returns an associative array of info about the message","p":[{"t":"mimemail","d":"A valid MIME resource."}]},"mailparse_msg_get_structure":{"s":"Returns an array of mime section names in the supplied message","p":[{"t":"mimemail","d":"A valid MIME resource."}]},"mailparse_msg_parse":{"s":"Incrementally parse data into buffer","p":[{"t":"mimemail","d":"A valid MIME resource."},{"t":"data","d":""}]},"mailparse_msg_parse_file":{"s":"Parses a file","p":[{"t":"filename","d":"Path to the file holding the message.\n       The file is opened and streamed through the parser."}]},"mailparse_rfc822_parse_addresses":{"s":"Parse RFC 822 compliant addresses","p":[{"t":"addresses","d":"A string containing addresses, like in:\n       Wez Furlong &lt;wez@example.com&gt;, doe@example.com"}]},"mailparse_stream_encode":{"s":"","p":[{"t":"sourcefp","d":"A valid file handle. The file is streamed through the parser."},{"t":"destfp","d":"The destination file handle in which the encoded data will be written."},{"t":"encoding","d":"One of the character encodings supported by the\n       mbstring module."}]},"mailparse_uudecode_all":{"s":"","p":[{"t":"fp","d":"A valid file pointer."}]},"main":{"s":"Dummy for main()","p":null},"max":{"s":"Find highest value","p":[{"t":"values","d":"An array containing the values."},{"t":"value1","d":"Any comparable\n       value."},{"t":"value2","d":"Any comparable\n       value."},{"t":"...","d":"Any comparable\n       value."}]},"maxdb_affected_rows":{"s":"Gets the number of affected rows in a previous MaxDB operation","p":null},"maxdb_autocommit":{"s":"Turns on or off auto-commiting database modifications","p":null},"maxdb_bind_param":{"s":"Alias of maxdb_stmt_bind_param()","p":null},"maxdb_bind_result":{"s":"Alias of maxdb_stmt_bind_result()","p":null},"maxdb_change_user":{"s":"Changes the user of the specified database connection","p":null},"maxdb_character_set_name":{"s":"Returns the default character set for the database connection","p":null},"maxdb_client_encoding":{"s":"Alias of maxdb_character_set_name()","p":null},"maxdb_close":{"s":"Closes a previously opened database connection","p":null},"maxdb_close_long_data":{"s":"Alias of maxdb_stmt_close_long_data()","p":null},"maxdb_commit":{"s":"Commits the current transaction","p":null},"maxdb_connect":{"s":"Open a new connection to the MaxDB server","p":null},"maxdb_connect_errno":{"s":"Returns the error code from last connect call","p":null},"maxdb_connect_error":{"s":"Returns a string description of the last connect error","p":null},"maxdb_data_seek":{"s":"Adjusts the result pointer to an arbitary row in the result","p":null},"maxdb_debug":{"s":"Performs debugging operations","p":null},"maxdb_disable_reads_from_master":{"s":"Disable reads from master","p":null},"maxdb_disable_rpl_parse":{"s":"Disable RPL parse","p":null},"maxdb_dump_debug_info":{"s":"Dump debugging information into the log","p":null},"maxdb_embedded_connect":{"s":"Open a connection to an embedded MaxDB server","p":null},"maxdb_enable_reads_from_master":{"s":"Enable reads from master","p":null},"maxdb_enable_rpl_parse":{"s":"Enable RPL parse","p":null},"maxdb_errno":{"s":"Returns the error code for the most recent function call","p":null},"maxdb_error":{"s":"Returns a string description of the last error","p":null},"maxdb_escape_string":{"s":"Alias of maxdb_real_escape_string()","p":null},"maxdb_execute":{"s":"Alias of maxdb_stmt_execute()","p":null},"maxdb_fetch":{"s":"Alias of maxdb_stmt_fetch()","p":null},"maxdb_fetch_array":{"s":"Fetch a result row as an associative, a numeric array, or both","p":null},"maxdb_fetch_assoc":{"s":"Fetch a result row as an associative array","p":null},"maxdb_fetch_field":{"s":"Returns the next field in the result set","p":null},"maxdb_fetch_fields":{"s":"Returns an array of resources representing the fields in a result set","p":null},"maxdb_fetch_field_direct":{"s":"Fetch meta-data for a single field","p":null},"maxdb_fetch_lengths":{"s":"Returns the lengths of the columns of the current row in the result set","p":null},"maxdb_fetch_object":{"s":"Returns the current row of a result set as an object","p":null},"maxdb_fetch_row":{"s":"Get a result row as an enumerated array","p":null},"maxdb_field_count":{"s":"Returns the number of columns for the most recent query","p":null},"maxdb_field_seek":{"s":"Set result pointer to a specified field offset","p":null},"maxdb_field_tell":{"s":"Get current field offset of a result pointer","p":null},"maxdb_free_result":{"s":"Frees the memory associated with a result","p":null},"maxdb_get_client_info":{"s":"Returns the MaxDB client version as a string","p":null},"maxdb_get_client_version":{"s":"Get MaxDB client info","p":null},"maxdb_get_host_info":{"s":"Returns a string representing the type of connection used","p":null},"maxdb_get_metadata":{"s":"Alias of maxdb_stmt_result_metadata()","p":null},"maxdb_get_proto_info":{"s":"Returns the version of the MaxDB protocol used","p":null},"maxdb_get_server_info":{"s":"Returns the version of the MaxDB server","p":null},"maxdb_get_server_version":{"s":"Returns the version of the MaxDB server as an integer","p":null},"maxdb_info":{"s":"Retrieves information about the most recently executed query","p":null},"maxdb_init":{"s":"Initializes MaxDB and returns an resource for use with maxdb_real_connect","p":null},"maxdb_insert_id":{"s":"Returns the auto generated id used in the last query","p":null},"maxdb_kill":{"s":"Disconnects from a MaxDB server","p":null},"maxdb_master_query":{"s":"Enforce execution of a query on the master in a master\/slave setup","p":null},"maxdb_more_results":{"s":"Check if there any more query results from a multi query","p":null},"maxdb_multi_query":{"s":"Performs a query on the database","p":null},"maxdb_next_result":{"s":"Prepare next result from multi_query","p":null},"maxdb_num_fields":{"s":"Get the number of fields in a result","p":null},"maxdb_num_rows":{"s":"Gets the number of rows in a result","p":null},"maxdb_options":{"s":"Set options","p":null},"maxdb_param_count":{"s":"Alias of maxdb_stmt_param_count()","p":null},"maxdb_ping":{"s":"Pings a server connection, or tries to reconnect if the connection has gone down","p":null},"maxdb_prepare":{"s":"Prepare an SQL statement for execution","p":null},"maxdb_query":{"s":"Performs a query on the database","p":null},"maxdb_real_connect":{"s":"Opens a connection to a MaxDB server","p":null},"maxdb_real_escape_string":{"s":"Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection","p":null},"maxdb_real_query":{"s":"Execute an SQL query","p":null},"maxdb_report":{"s":"Enables or disables internal report functions","p":[{"t":"flags","d":"One of the MAXDB_REPORT_XXX constants."}]},"maxdb_rollback":{"s":"Rolls back current transaction","p":null},"maxdb_rpl_parse_enabled":{"s":"Check if RPL parse is enabled","p":null},"maxdb_rpl_probe":{"s":"RPL probe","p":null},"maxdb_rpl_query_type":{"s":"Returns RPL query type","p":null},"maxdb_select_db":{"s":"Selects the default database for database queries","p":null},"maxdb_send_long_data":{"s":"Alias of maxdb_stmt_send_long_data()","p":null},"maxdb_send_query":{"s":"Send the query and return","p":null},"maxdb_server_end":{"s":"Shut down the embedded server","p":null},"maxdb_server_init":{"s":"Initialize embedded server","p":null},"maxdb_set_opt":{"s":"Alias of maxdb_options()","p":null},"maxdb_sqlstate":{"s":"Returns the SQLSTATE error from previous MaxDB operation","p":null},"maxdb_ssl_set":{"s":"Used for establishing secure connections using SSL","p":null},"maxdb_stat":{"s":"Gets the current system status","p":null},"maxdb_stmt_bind_param":{"s":"Binds variables to a prepared statement as parameters","p":null},"maxdb_stmt_bind_result":{"s":"Binds variables to a prepared statement for result storage","p":null},"maxdb_stmt_close":{"s":"Closes a prepared statement","p":null},"maxdb_stmt_close_long_data":{"s":"Ends a sequence of maxdb_stmt_send_long_data()","p":null},"maxdb_stmt_data_seek":{"s":"Seeks to an arbitray row in statement result set","p":null},"maxdb_stmt_errno":{"s":"Returns the error code for the most recent statement call","p":null},"maxdb_stmt_error":{"s":"Returns a string description for last statement error","p":null},"maxdb_stmt_execute":{"s":"Executes a prepared Query","p":null},"maxdb_stmt_fetch":{"s":"Fetch results from a prepared statement into the bound variables","p":null},"maxdb_stmt_free_result":{"s":"Frees stored result memory for the given statement handle","p":null},"maxdb_stmt_init":{"s":"Initializes a statement and returns an resource for use with maxdb_stmt_prepare","p":null},"maxdb_stmt_num_rows":{"s":"Return the number of rows in statements result set","p":null},"maxdb_stmt_param_count":{"s":"Returns the number of parameter for the given statement","p":null},"maxdb_stmt_prepare":{"s":"Prepare an SQL statement for execution","p":null},"maxdb_stmt_reset":{"s":"Resets a prepared statement","p":null},"maxdb_stmt_result_metadata":{"s":"Returns result set metadata from a prepared statement","p":null},"maxdb_stmt_send_long_data":{"s":"Send data in blocks","p":null},"maxdb_stmt_sqlstate":{"s":"Returns SQLSTATE error from previous statement operation","p":null},"maxdb_stmt_store_result":{"s":"Transfers a result set from a prepared statement","p":null},"maxdb_store_result":{"s":"Transfers a result set from the last query","p":null},"maxdb_thread_id":{"s":"Returns the thread ID for the current connection","p":null},"maxdb_thread_safe":{"s":"Returns whether thread safety is given or not","p":null},"maxdb_use_result":{"s":"Initiate a result set retrieval","p":null},"maxdb_warning_count":{"s":"Returns the number of warnings from the last query for the given link","p":null},"mb_check_encoding":{"s":"Check if the string is valid for the specified encoding","p":[{"t":"var","d":"The byte stream to check. If it is omitted, this function checks\n       all the input from the beginning of the request."},{"t":"encoding","d":"The expected encoding."}]},"mb_convert_case":{"s":"Perform case folding on a string","p":[{"t":"str","d":"The string being converted."},{"t":"mode","d":"The mode of the conversion. It can be one of \n       MB_CASE_UPPER, \n       MB_CASE_LOWER, or \n       MB_CASE_TITLE."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_convert_encoding":{"s":"Convert character encoding","p":[{"t":"str","d":"The string being encoded."},{"t":"to_encoding","d":"The type of encoding that str is being converted to."},{"t":"from_encoding","d":"Is specified by character code names before conversion. It is either\n       an array, or a comma separated enumerated list.\n       If from_encoding is not specified, the internal \n       encoding will be used."}]},"mb_convert_kana":{"s":"Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more)","p":[{"t":"str","d":"The string being converted."},{"t":"option","d":"The conversion option."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_convert_variables":{"s":"Convert character code in variable(s)","p":[{"t":"to_encoding","d":"The encoding that the string is being converted to."},{"t":"from_encoding","d":"from_encoding is specified as an array \n       or comma separated string, it tries to detect encoding from\n       from-coding. When from_encoding \n       is omitted, detect_order is used."},{"t":"vars","d":"vars is the reference to the\n       variable being converted. String, Array and Object are accepted.\n       mb_convert_variables() assumes all parameters\n       have the same encoding."},{"t":"...","d":"Additional vars."}]},"mb_decode_mimeheader":{"s":"Decode string in MIME header field","p":[{"t":"str","d":"The string being decoded."}]},"mb_decode_numericentity":{"s":"Decode HTML numeric string reference to character","p":[{"t":"str","d":"The string being decoded."},{"t":"convmap","d":"convmap is an array that specifies \n       the code area to convert."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_detect_encoding":{"s":"Detect character encoding","p":[{"t":"str","d":"The string being detected."},{"t":"encoding_list","d":"encoding_list is list of character\n       encoding. Encoding order may be specified by array or comma\n       separated list string."},{"t":"strict","d":"strict specifies whether to use\n       the strict encoding detection or not.\n       Default is FALSE."}]},"mb_detect_order":{"s":"Set\/Get character encoding detection order","p":[{"t":"encoding_list","d":"encoding_list is an array or \n       comma separated list of character encoding. See supported encodings."}]},"mb_encode_mimeheader":{"s":"Encode string for MIME header","p":[{"t":"str","d":"The string being encoded."},{"t":"charset","d":"charset specifies the name of the character set\n       in which str is represented in. The default value\n       is determined by the current NLS setting (mbstring.language).\n       mb_internal_encoding() should be set to same encoding."},{"t":"transfer_encoding","d":"transfer_encoding specifies the scheme of MIME\n       encoding. It should be either &quot;B&quot; (Base64) or\n       &quot;Q&quot; (Quoted-Printable). Falls back to\n       &quot;B&quot; if not given."},{"t":"linefeed","d":"linefeed specifies the EOL (end-of-line) marker\n       with which mb_encode_mimeheader() performs\n       line-folding (a &raquo;&nbsp;RFC term,\n       the act of breaking a line longer than a certain length into multiple\n       lines. The length is currently hard-coded to 74 characters).\n       Falls back to &quot;\\r\\n&quot; (CRLF) if not given."},{"t":"indent","d":"Indentation of the first line (number of characters in the header\n       before str)."}]},"mb_encode_numericentity":{"s":"Encode character to HTML numeric string reference","p":[{"t":"str","d":"The string being encoded."},{"t":"convmap","d":"convmap is array specifies code area to\n       convert."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."},{"t":"is_hex","d":""}]},"mb_encoding_aliases":{"s":"Get aliases of a known encoding type","p":[{"t":"encoding","d":"The encoding type being checked, for aliases."}]},"mb_ereg":{"s":"Regular expression match with multibyte support","p":[{"t":"pattern","d":"The search pattern."},{"t":"string","d":"The search string."},{"t":"regs","d":"Contains a substring of the matched string."}]},"mb_eregi":{"s":"Regular expression match ignoring case with multibyte support","p":[{"t":"pattern","d":"The regular expression pattern."},{"t":"string","d":"The string being searched."},{"t":"regs","d":"Contains a substring of the matched string."}]},"mb_eregi_replace":{"s":"Replace regular expression with multibyte support ignoring case","p":[{"t":"pattern","d":"The regular expression pattern.  Multibyte characters may be used. The case will be ignored."},{"t":"replace","d":"The replacement text."},{"t":"string","d":"The searched string."},{"t":"option","d":""}]},"mb_ereg_match":{"s":"Regular expression match for multibyte string","p":[{"t":"pattern","d":"The regular expression pattern."},{"t":"string","d":"The string being evaluated."},{"t":"option","d":""}]},"mb_ereg_replace":{"s":"Replace regular expression with multibyte support","p":[{"t":"pattern","d":"The regular expression pattern."},{"t":"replacement","d":"The replacement text."},{"t":"string","d":"The string being checked."},{"t":"option","d":""}]},"mb_ereg_replace_callback":{"s":"","p":[{"t":"pattern","d":"The regular expression pattern."},{"t":"callback","d":"A callback that will be called and passed an array of matched elements\n        in the  subject string. The callback should\n       return the replacement string."},{"t":"string","d":"The string being checked."},{"t":"option","d":"Matching condition can be set by option\n       parameter. If i is specified for this\n       parameter, the case will be ignored. If x is\n       specified, white space will be ignored. If m\n       is specified, match will be executed in multiline mode and line\n       break will be included in &#039;.&#039;. If p is\n       specified, match will be executed in POSIX mode, line break \n       will be considered as normal character. Note that e\n       cannot be used for mb_ereg_replace_callback()."}]},"mb_ereg_search":{"s":"Multibyte regular expression match for predefined multibyte string","p":[{"t":"pattern","d":"The search pattern."},{"t":"option","d":"The search option."}]},"mb_ereg_search_getpos":{"s":"Returns start point for next regular expression match","p":null},"mb_ereg_search_getregs":{"s":"Retrieve the result from the last multibyte regular expression match","p":null},"mb_ereg_search_init":{"s":"Setup string and regular expression for a multibyte regular expression match","p":[{"t":"string","d":"The search string."},{"t":"pattern","d":"The search pattern."},{"t":"option","d":"The search option."}]},"mb_ereg_search_pos":{"s":"Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string","p":[{"t":"pattern","d":"The search pattern."},{"t":"option","d":"The search option."}]},"mb_ereg_search_regs":{"s":"Returns the matched part of a multibyte regular expression","p":[{"t":"pattern","d":"The search pattern."},{"t":"option","d":"The search option."}]},"mb_ereg_search_setpos":{"s":"Set start point of next regular expression match","p":[{"t":"position","d":"The position to set."}]},"mb_get_info":{"s":"Get internal settings of mbstring","p":[{"t":"type","d":"If type isn&#039;t specified or is specified to\n       &quot;all&quot;, an array having the elements &quot;internal_encoding&quot;,\n       &quot;http_output&quot;, &quot;http_input&quot;, &quot;func_overload&quot;, &quot;mail_charset&quot;,\n       &quot;mail_header_encoding&quot;, &quot;mail_body_encoding&quot; will be returned."}]},"mb_http_input":{"s":"Detect HTTP input character encoding","p":[{"t":"type","d":"Input string specifies the input type. \n       &quot;G&quot; for GET, &quot;P&quot; for POST, &quot;C&quot; for COOKIE, &quot;S&quot; for string, &quot;L&quot; for list, and\n       &quot;I&quot; for the whole list (will return array). \n       If type is omitted, it returns the last input type processed."}]},"mb_http_output":{"s":"Set\/Get HTTP output character encoding","p":[{"t":"encoding","d":"If encoding is set,\n       mb_http_output() sets the HTTP output character\n       encoding to encoding."}]},"mb_internal_encoding":{"s":"Set\/Get internal character encoding","p":[{"t":"encoding","d":"encoding is the character encoding name \n       used for the HTTP input character encoding conversion, HTTP output \n       character encoding conversion, and the default character encoding \n       for string functions defined by the mbstring module.\n       You should notice that the internal encoding is totally different from the one for multibyte regex."}]},"mb_language":{"s":"Set\/Get current language","p":[{"t":"language","d":"Used for encoding\n       e-mail messages. Valid languages are &quot;Japanese&quot;,\n       &quot;ja&quot;,&quot;English&quot;,&quot;en&quot; and &quot;uni&quot;\n       (UTF-8). mb_send_mail() uses this setting to\n       encode e-mail."}]},"mb_list_encodings":{"s":"Returns an array of all supported encodings","p":null},"mb_output_handler":{"s":"Callback function converts character encoding in output buffer","p":[{"t":"contents","d":"The contents of the output buffer."},{"t":"status","d":"The status of the output buffer."}]},"mb_parse_str":{"s":"Parse GET\/POST\/COOKIE data and set global variable","p":[{"t":"encoded_string","d":"The URL encoded data."},{"t":"result","d":"An array containing decoded and character encoded converted values."}]},"mb_preferred_mime_name":{"s":"Get MIME charset string","p":[{"t":"encoding","d":"The encoding being checked."}]},"mb_regex_encoding":{"s":"Set\/Get character encoding for multibyte regex","p":[{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_regex_set_options":{"s":"Set\/Get the default options for mbregex functions","p":[{"t":"options","d":"The options to set. This is a a string where each \n       character is an option. To set a mode, the mode \n       character must be the last one set, however there \n       can only be set one mode but multiple options."}]},"mb_send_mail":{"s":"Send encoded mail","p":[{"t":"to","d":"The mail addresses being sent to. Multiple\n       recipients may be specified by putting a comma between each\n       address in to. \n       This parameter is not automatically encoded."},{"t":"subject","d":"The subject of the mail."},{"t":"message","d":"The message of the mail."},{"t":"additional_headers","d":"String to be inserted at the end of the email header."},{"t":"additional_parameter","d":"additional_parameter is a MTA command line\n       parameter. It is useful when setting the correct Return-Path\n       header when using sendmail."}]},"mb_split":{"s":"Split multibyte string using regular expression","p":[{"t":"pattern","d":"The regular expression pattern."},{"t":"string","d":"The string being split."},{"t":"limit","d":""}]},"mb_strcut":{"s":"Get part of string","p":[{"t":"str","d":"The string being cut."},{"t":"start","d":"Starting position in bytes."},{"t":"length","d":"Length in bytes. If omitted or NULL\n       is passed, extract all bytes to the end of the string."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_strimwidth":{"s":"Get truncated string with specified width","p":[{"t":"str","d":"The string being decoded."},{"t":"start","d":"The start position offset. Number of\n       characters from the beginning of string. (First character is 0)"},{"t":"width","d":"The width of the desired trim."},{"t":"trimmarker","d":"A string that is added to the end of string \n       when string is truncated."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_stripos":{"s":"Finds position of first occurrence of a string within another, case insensitive","p":[{"t":"haystack","d":"The string from which to get the position of the first occurrence\n       of needle"},{"t":"needle","d":"The string to find in haystack"},{"t":"offset","d":"The position in haystack\n       to start searching"},{"t":"encoding","d":"Character encoding name to use.\n       If it is omitted, internal character encoding is used."}]},"mb_stristr":{"s":"Finds first occurrence of a string within another, case insensitive","p":[{"t":"haystack","d":"The string from which to get the first occurrence\n       of needle"},{"t":"needle","d":"The string to find in haystack"},{"t":"before_needle","d":"Determines which portion of haystack\n       this function returns. \n       If set to TRUE, it returns all of  haystack\n       from the beginning to the first occurrence of needle (excluding needle).\n       If set to FALSE, it returns all of haystack\n       from the first occurrence of needle to the end (including needle)."},{"t":"encoding","d":"Character encoding name to use.\n       If it is omitted, internal character encoding is used."}]},"mb_strlen":{"s":"Get string length","p":[{"t":"str","d":"The string being checked for length."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_strpos":{"s":"Find position of first occurrence of string in a string","p":[{"t":"haystack","d":"The string being checked."},{"t":"needle","d":"The string to find in haystack. In contrast\n       with strpos(), numeric values are not applied\n       as the ordinal value of a character."},{"t":"offset","d":"The search offset. If it is not specified, 0 is used."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_strrchr":{"s":"Finds the last occurrence of a character in a string within another","p":[{"t":"haystack","d":"The string from which to get the last occurrence\n       of needle"},{"t":"needle","d":"The string to find in haystack"},{"t":"part","d":"Determines which portion of haystack\n       this function returns. \n       If set to TRUE, it returns all of haystack\n       from the beginning to the last occurrence of needle.\n       If set to FALSE, it returns all of haystack\n       from the last occurrence of needle to the end,"},{"t":"encoding","d":"Character encoding name to use.\n       If it is omitted, internal character encoding is used."}]},"mb_strrichr":{"s":"Finds the last occurrence of a character in a string within another, case insensitive","p":[{"t":"haystack","d":"The string from which to get the last occurrence\n       of needle"},{"t":"needle","d":"The string to find in haystack"},{"t":"part","d":"Determines which portion of haystack\n       this function returns. \n       If set to TRUE, it returns all of haystack\n       from the beginning to the last occurrence of needle.\n       If set to FALSE, it returns all of haystack\n       from the last occurrence of needle to the end,"},{"t":"encoding","d":"Character encoding name to use.\n       If it is omitted, internal character encoding is used."}]},"mb_strripos":{"s":"Finds position of last occurrence of a string within another, case insensitive","p":[{"t":"haystack","d":"The string from which to get the position of the last occurrence\n       of needle"},{"t":"needle","d":"The string to find in haystack"},{"t":"offset","d":"The position in haystack\n       to start searching"},{"t":"encoding","d":"Character encoding name to use.\n       If it is omitted, internal character encoding is used."}]},"mb_strrpos":{"s":"Find position of last occurrence of a string in a string","p":[{"t":"haystack","d":"The string being checked, for the last occurrence\n       of needle"},{"t":"needle","d":"The string to find in haystack."},{"t":"offset","d":""},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_strstr":{"s":"Finds first occurrence of a string within another","p":[{"t":"haystack","d":"The string from which to get the first occurrence\n       of needle"},{"t":"needle","d":"The string to find in haystack"},{"t":"before_needle","d":"Determines which portion of haystack\n       this function returns. \n       If set to TRUE, it returns all of  haystack\n       from the beginning to the first occurrence of needle (excluding needle).\n       If set to FALSE, it returns all of haystack\n       from the first occurrence of needle to the end (including needle)."},{"t":"encoding","d":"Character encoding name to use.\n       If it is omitted, internal character encoding is used."}]},"mb_strtolower":{"s":"Make a string lowercase","p":[{"t":"str","d":"The string being lowercased."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_strtoupper":{"s":"Make a string uppercase","p":[{"t":"str","d":"The string being uppercased."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_strwidth":{"s":"Return width of string","p":[{"t":"str","d":"The string being decoded."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_substitute_character":{"s":"Set\/Get substitution character","p":[{"t":"substrchar","d":"Specify the Unicode value as an integer, \n       or as one of the following strings:\n       \n        \n         \n          &quot;none&quot;: no output\n         \n        \n        \n         \n          &quot;long&quot;: Output character code value (Example:\n          U+3000, JIS+7E7E)\n         \n        \n        \n         \n          &quot;entity&quot;: Output character entity (Example:\n          \u0200)"}]},"mb_substr":{"s":"Get part of string","p":[{"t":"str","d":"The string to extract the substring from."},{"t":"start","d":"Position of first character to use from str."},{"t":"length","d":"Maximum number of characters to use from str. If\n       omitted or NULL is passed, extract all characters to\n       the end of the string."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mb_substr_count":{"s":"Count the number of substring occurrences","p":[{"t":"haystack","d":"The string being checked."},{"t":"needle","d":"The string being found."},{"t":"encoding","d":"The encoding\nparameter is the character encoding. If it is omitted, the internal character\nencoding value will be used."}]},"mcrypt_cbc":{"s":"Encrypts\/decrypts data in CBC mode","p":null},"mcrypt_cfb":{"s":"Encrypts\/decrypts data in CFB mode","p":null},"mcrypt_create_iv":{"s":"Creates an initialization vector (IV) from a random source","p":[{"t":"size","d":"The size of the IV."},{"t":"source","d":"The source of the IV. The source can be\n       MCRYPT_RAND (system random number generator),\n       MCRYPT_DEV_RANDOM (read data from\n       \/dev\/random) and\n       MCRYPT_DEV_URANDOM (read data from\n       \/dev\/urandom). Prior to 5.3.0,\n       MCRYPT_RAND was the only one supported on Windows."}]},"mcrypt_decrypt":{"s":"Decrypts crypttext with given parameters","p":[{"t":"cipher","d":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"t":"key","d":"The key with which the data was encrypted. If it&#039;s smaller\n       than the required keysize, it is padded with\n       &#039;\\0&#039;."},{"t":"data","d":"The data that will be decrypted with the given cipher\n       and mode. If the size of the data is not n * blocksize,\n       the data will be padded with &#039;\\0&#039;."},{"t":"mode","d":"One of the MCRYPT_MODE_modename constants, or one of the following strings: &quot;ecb&quot;, &quot;cbc&quot;, &quot;cfb&quot;, &quot;ofb&quot;, &quot;nofb&quot; or &quot;stream&quot;."},{"t":"iv","d":"Used for the initialization in CBC, CFB, OFB modes, and in some algorithms in STREAM mode. If you do not supply an IV, while it is needed for an algorithm, the function issues a warning and uses an IV with all its bytes set to &quot;\\0&quot;."}]},"mcrypt_ecb":{"s":"Deprecated: Encrypts\/decrypts data in ECB mode","p":null},"mcrypt_encrypt":{"s":"Encrypts plaintext with given parameters","p":[{"t":"cipher","d":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"t":"key","d":"The key with which the data will be encrypted. If it&#039;s smaller than\n       the required keysize, it is padded with &#039;\\0&#039;. It is\n       better not to use ASCII strings for keys."},{"t":"data","d":"The data that will be encrypted with the given cipher\n       and mode. If the size of the data is not n * blocksize,\n       the data will be padded with &#039;\\0&#039;."},{"t":"mode","d":"One of the MCRYPT_MODE_modename constants, or one of the following strings: &quot;ecb&quot;, &quot;cbc&quot;, &quot;cfb&quot;, &quot;ofb&quot;, &quot;nofb&quot; or &quot;stream&quot;."},{"t":"iv","d":"Used for the initialization in CBC, CFB, OFB modes, and in some algorithms in STREAM mode. If you do not supply an IV, while it is needed for an algorithm, the function issues a warning and uses an IV with all its bytes set to &quot;\\0&quot;."}]},"mcrypt_enc_get_algorithms_name":{"s":"Returns the name of the opened algorithm","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_get_block_size":{"s":"Returns the blocksize of the opened algorithm","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_get_iv_size":{"s":"Returns the size of the IV of the opened algorithm","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_get_key_size":{"s":"Returns the maximum supported keysize of the opened mode","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_get_modes_name":{"s":"Returns the name of the opened mode","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_get_supported_key_sizes":{"s":"Returns an array with the supported keysizes of the opened algorithm","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_is_block_algorithm":{"s":"Checks whether the algorithm of the opened mode is a block algorithm","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_is_block_algorithm_mode":{"s":"Checks whether the encryption of the opened mode works on blocks","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_is_block_mode":{"s":"Checks whether the opened mode outputs blocks","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_enc_self_test":{"s":"Runs a self test on the opened module","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_generic":{"s":"This function encrypts data","p":[{"t":"td","d":"The encryption descriptor."},{"t":"data","d":"The data to encrypt."}]},"mcrypt_generic_deinit":{"s":"This function deinitializes an encryption module","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_generic_end":{"s":"This function terminates encryption","p":null},"mcrypt_generic_init":{"s":"This function initializes all buffers needed for encryption","p":[{"t":"td","d":"The encryption descriptor."},{"t":"key","d":"The maximum length of the key should be the one obtained by calling\n       mcrypt_enc_get_key_size() and every value smaller\n       than this is legal."},{"t":"iv","d":"The IV should normally have the size of the algorithms block size, but\n       you must obtain the size by calling\n       mcrypt_enc_get_iv_size(). IV is ignored in ECB. IV\n       MUST exist in CFB, CBC, STREAM, nOFB and OFB modes. It needs to be\n       random and unique (but not secret). The same IV must be used for\n       encryption\/decryption. If you do not want to use it you should set it\n       to zeros, but this is not recommended."}]},"mcrypt_get_block_size":{"s":"Gets the block size of the specified cipher","p":[{"t":"cipher","d":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"t":"mode","d":"One of the MCRYPT_MODE_modename constants, or one of the following strings: &quot;ecb&quot;, &quot;cbc&quot;, &quot;cfb&quot;, &quot;ofb&quot;, &quot;nofb&quot; or &quot;stream&quot;."}]},"mcrypt_get_cipher_name":{"s":"Gets the name of the specified cipher","p":[{"t":"cipher","d":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."}]},"mcrypt_get_iv_size":{"s":"Returns the size of the IV belonging to a specific cipher\/mode combination","p":[{"t":"cipher","d":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"t":"mode","d":"One of the MCRYPT_MODE_modename constants, or one of the following strings: &quot;ecb&quot;, &quot;cbc&quot;, &quot;cfb&quot;, &quot;ofb&quot;, &quot;nofb&quot; or &quot;stream&quot;."}]},"mcrypt_get_key_size":{"s":"Gets the key size of the specified cipher","p":[{"t":"cipher","d":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"t":"mode","d":"One of the MCRYPT_MODE_modename constants, or one of the following strings: &quot;ecb&quot;, &quot;cbc&quot;, &quot;cfb&quot;, &quot;ofb&quot;, &quot;nofb&quot; or &quot;stream&quot;."}]},"mcrypt_list_algorithms":{"s":"Gets an array of all supported ciphers","p":[{"t":"lib_dir","d":"Specifies the directory where all algorithms are located. If not\n       specified, the value of the mcrypt.algorithms_dir\n       php.ini directive is used."}]},"mcrypt_list_modes":{"s":"Gets an array of all supported modes","p":[{"t":"lib_dir","d":"Specifies the directory where all modes are located. If not\n       specified, the value of the mcrypt.modes_dir\n       php.ini directive is used."}]},"mcrypt_module_close":{"s":"Closes the mcrypt module","p":[{"t":"td","d":"The encryption descriptor."}]},"mcrypt_module_get_algo_block_size":{"s":"Returns the blocksize of the specified algorithm","p":[{"t":"algorithm","d":"The algorithm name."},{"t":"lib_dir","d":"This optional parameter can contain the location where the mode module\n       is on the system."}]},"mcrypt_module_get_algo_key_size":{"s":"Returns the maximum supported keysize of the opened mode","p":[{"t":"algorithm","d":"The algorithm name."},{"t":"lib_dir","d":"This optional parameter can contain the location where the mode module\n       is on the system."}]},"mcrypt_module_get_supported_key_sizes":{"s":"Returns an array with the supported keysizes of the opened algorithm","p":[{"t":"algorithm","d":"The algorithm to be used."},{"t":"lib_dir","d":"The optional lib_dir parameter can contain the\n       location where the algorithm module is on the system."}]},"mcrypt_module_is_block_algorithm":{"s":"This function checks whether the specified algorithm is a block algorithm","p":[{"t":"algorithm","d":"The algorithm to check."},{"t":"lib_dir","d":"The optional lib_dir parameter can contain the\n       location where the algorithm module is on the system."}]},"mcrypt_module_is_block_algorithm_mode":{"s":"Returns if the specified module is a block algorithm or not","p":[{"t":"mode","d":"The mode to check."},{"t":"lib_dir","d":"The optional lib_dir parameter can contain the\n       location where the algorithm module is on the system."}]},"mcrypt_module_is_block_mode":{"s":"Returns if the specified mode outputs blocks or not","p":[{"t":"mode","d":"One of the MCRYPT_MODE_modename constants, or one of the following strings: &quot;ecb&quot;, &quot;cbc&quot;, &quot;cfb&quot;, &quot;ofb&quot;, &quot;nofb&quot; or &quot;stream&quot;."},{"t":"lib_dir","d":"The optional lib_dir parameter can contain the\n       location where the algorithm module is on the system."}]},"mcrypt_module_open":{"s":"Opens the module of the algorithm and the mode to be used","p":[{"t":"algorithm","d":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"t":"algorithm_directory","d":"The algorithm_directory parameter is used to locate\n       the encryption module. When you supply a directory name, it is used.  When\n       you set it to an empty string (&quot;&quot;), the value set by the\n       mcrypt.algorithms_dir php.ini directive is used. When\n       it is not set, the default directory that is used is the one that was compiled\n       into libmcrypt (usually \/usr\/local\/lib\/libmcrypt)."},{"t":"mode","d":"One of the MCRYPT_MODE_modename constants, or one of the following strings: &quot;ecb&quot;, &quot;cbc&quot;, &quot;cfb&quot;, &quot;ofb&quot;, &quot;nofb&quot; or &quot;stream&quot;."},{"t":"mode_directory","d":"The mode_directory parameter is used to locate\n       the encryption module. When you supply a directory name, it is used.  When\n       you set it to an empty string (&quot;&quot;), the value set by the\n       mcrypt.modes_dir php.ini directive is used. When\n       it is not set, the default directory that is used is the one that was compiled-in\n       into libmcrypt (usually \/usr\/local\/lib\/libmcrypt)."}]},"mcrypt_module_self_test":{"s":"This function runs a self test on the specified module","p":[{"t":"algorithm","d":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"t":"lib_dir","d":"The optional lib_dir parameter can contain the\n       location where the algorithm module is on the system."}]},"mcrypt_ofb":{"s":"Encrypts\/decrypts data in OFB mode","p":null},"md5":{"s":"Calculate the md5 hash of a string","p":[{"t":"str","d":"The string."},{"t":"raw_output","d":"If the optional raw_output is set to TRUE,\n       then the md5 digest is instead returned in raw binary format with a\n       length of 16."}]},"md5_file":{"s":"Calculates the md5 hash of a given file","p":[{"t":"filename","d":"The filename"},{"t":"raw_output","d":"When TRUE, returns the digest in raw binary format with a length of\n       16."}]},"mdecrypt_generic":{"s":"Decrypts data","p":[{"t":"td","d":"An encryption descriptor returned by\n       mcrypt_module_open()"},{"t":"data","d":"Encrypted data."}]},"memcache_debug":{"s":"Turn debug output on\/off","p":[{"t":"on_off","d":"Turns debug output on if equals to TRUE.\n       Turns debug output off if equals to FALSE."}]},"memory_get_peak_usage":{"s":"Returns the peak of memory allocated by PHP","p":[{"t":"real_usage","d":"Set this to TRUE to get the real size of memory allocated from\n       system. If not set or FALSE only the memory used by\n       emalloc() is reported."}]},"memory_get_usage":{"s":"Returns the amount of memory allocated to PHP","p":[{"t":"real_usage","d":"Set this to TRUE to get the real size of memory allocated from\n       system. If not set or FALSE only the memory used by\n       emalloc() is reported."}]},"metaphone":{"s":"Calculate the metaphone key of a string","p":[{"t":"str","d":"The input string."},{"t":"phonemes","d":"This parameter restricts the returned metaphone key to \n       phonemes characters in length.\n       The default value of 0 means no restriction."}]},"method_exists":{"s":"Checks if the class method exists","p":[{"t":"object","d":"An object instance or a class name"},{"t":"method_name","d":"The method name"}]},"mhash":{"s":"Computes hash","p":[{"t":"hash","d":"The hash ID. One of the MHASH_hashname constants."},{"t":"data","d":"The user input, as a string."},{"t":"key","d":"If specified, the function will return the resulting HMAC instead.\n       HMAC is keyed hashing for message authentication, or simply a message\n       digest that depends on the specified key. Not all algorithms \n       supported in mhash can be used in HMAC mode."}]},"mhash_count":{"s":"Gets the highest available hash ID","p":null},"mhash_get_block_size":{"s":"Gets the block size of the specified hash","p":[{"t":"hash","d":"The hash ID. One of the MHASH_hashname constants."}]},"mhash_get_hash_name":{"s":"Gets the name of the specified hash","p":[{"t":"hash","d":"The hash ID. One of the MHASH_hashname constants."}]},"mhash_keygen_s2k":{"s":"Generates a key","p":[{"t":"hash","d":"The hash ID used to create the key.\n       One of the MHASH_hashname constants."},{"t":"password","d":"An user supplied password."},{"t":"salt","d":"Must be different and random enough for every key you generate in\n       order to create different keys. Because salt\n       must be known when you check the keys, it is a good idea to append\n       the key to it. Salt has a fixed length of 8 bytes and will be padded\n       with zeros if you supply less bytes."},{"t":"bytes","d":"The key length, in bytes."}]},"microtime":{"s":"Return current Unix timestamp with microseconds","p":[{"t":"get_as_float","d":"If used and set to TRUE, microtime() will return a\n       float instead of a string, as described in\n       the return values section below."}]},"mime_content_type":{"s":"Detect MIME Content-type for a file (deprecated)","p":[{"t":"filename","d":"Path to the tested file."}]},"min":{"s":"Find lowest value","p":[{"t":"values","d":"An array containing the values."},{"t":"value1","d":"Any comparable\n       value."},{"t":"value2","d":"Any comparable\n       value."},{"t":"...","d":"Any comparable\n       value."}]},"ming_keypress":{"s":"Returns the action flag for keyPress(char)","p":null},"ming_setcubicthreshold":{"s":"","p":[{"t":"threshold","d":"The Threshold. Lower is more accurate, hence larger file size."}]},"ming_setscale":{"s":"","p":[{"t":"scale","d":"The scale to be set."}]},"ming_setswfcompression":{"s":"Sets the SWF output compression","p":[{"t":"level","d":"The new compression level. Should be a value between 1 and 9 \n       inclusive."}]},"ming_useconstants":{"s":"Use constant pool","p":null},"ming_useswfversion":{"s":"Sets the SWF version","p":[{"t":"version","d":"SWF version to use."}]},"mkdir":{"s":"Makes directory","p":[{"t":"pathname","d":"The directory path."},{"t":"mode","d":"The mode is 0777 by default, which means the widest possible\n       access. For more information on modes, read the details\n       on the chmod() page."},{"t":"recursive","d":"Allows the creation of nested directories specified in the \n       pathname."},{"t":"context","d":""}]},"mktime":{"s":"Get Unix timestamp for a date","p":[{"t":"hour","d":"The number of the hour relative to the start of the day determined by\n       month, day and year.\n       Negative values reference the hour before midnight of the day in question.\n       Values greater than 23 reference the appropriate hour in the following day(s)."},{"t":"minute","d":"The number of the minute relative to the start of the hour.\n       Negative values reference the minute in the previous hour.\n       Values greater than 59 reference the appropriate minute in the following hour(s)."},{"t":"second","d":"The number of seconds relative to the start of the minute.\n       Negative values reference the second in the previous minute.\n       Values greater than 59 reference the appropriate second in the following minute(s)."},{"t":"month","d":"The number of the month relative to the end of the previous year.\n       Values 1 to 12 reference the normal calendar months of the year in question.\n       Values less than 1 (including negative values) reference the months in the previous year in reverse order, so 0 is December, -1 is November, etc.\n       Values greater than 12 reference the appropriate month in the following year(s)."},{"t":"day","d":"The number of the day relative to the end of the previous month.\n       Values 1 to 28, 29, 30 or 31 (depending upon the month) reference the normal days in the relevant month.\n       Values less than 1 (including negative values) reference the days in the previous month, so 0 is the last day of the previous month, -1 is the day before that, etc.\n       Values greater than the number of days in the relevant month reference the appropriate day in the following month(s)."},{"t":"year","d":"The number of the year, may be a two or four digit value,\n       with values between 0-69 mapping to 2000-2069 and 70-100 to\n       1970-2000. On systems where time_t is a 32bit signed integer, as\n       most common today, the valid range for year \n       is somewhere between 1901 and 2038. However, before PHP 5.1.0 this\n       range was limited from 1970 to 2038 on some systems (e.g. Windows)."},{"t":"is_dst","d":"This parameter can be set to 1 if the time is during daylight savings time (DST), \n       0 if it is not, or -1 (the default) if it is unknown whether the time is within \n       daylight savings time or not. If it&#039;s unknown, PHP tries to figure it out itself.\n       This can cause unexpected (but not incorrect) results.\n       Some times are invalid if DST is enabled on the system PHP is running on or \n       is_dst is set to 1. If DST is enabled in e.g. 2:00, all times \n       between 2:00 and 3:00 are invalid and mktime() returns an undefined \n       (usually negative) value. \n       Some systems (e.g. Solaris 8) enable DST at midnight so time 0:30 of the day when DST \n       is enabled is evaluated as 23:30 of the previous day."}]},"money_format":{"s":"Formats a number as a currency string","p":[{"t":"format","d":"The format specification consists of the following sequence:\n       \n        a % character"},{"t":"","d":"The character = followed by a (single byte)\n            character f to be used as the numeric fill\n            character. The default fill character is space."},{"t":"","d":"Disable the use of grouping characters (as defined\n            by the current locale)."},{"t":"","d":"Specify the formatting style for positive and negative numbers.\n            If + is used, the locale&#039;s equivalent for\n            + and - will be used. If\n            ( is used, negative amounts are enclosed in\n            parenthesis. If no specification is given, the default is\n            +."},{"t":"","d":"Suppress the currency symbol from the output string."},{"t":"","d":"If present, it will make all fields left-justified (padded to the\n            right), as opposed to the default which is for the fields to be\n            right-justified (padded to the left)."},{"t":"","d":"A decimal digit string specifying a minimum field width. Field will\n            be right-justified unless the flag - is used.\n            Default value is 0 (zero)."},{"t":"","d":"The maximum number of digits (n) expected\n            to the left of the decimal character (e.g. the decimal point). It is\n            used usually to keep formatted output aligned in the same columns,\n            using the fill character if the number of digits is less than\n            n. If the number of actual digits is\n            bigger than n, then this specification is\n            ignored."},{"t":"","d":"A period followed by the number of digits\n            (p) after the decimal character. If the\n            value of p is 0 (zero), the decimal\n            character and the digits to its right will be omitted. If no right\n            precision is included, the default will dictated by the current\n            local in use. The amount being formatted is rounded to the specified\n            number of digits prior to formatting."},{"t":"","d":"The number is formatted according to the locale&#039;s international\n            currency format (e.g. for the USA locale: USD 1,234.56)."},{"t":"","d":"The number is formatted according to the locale&#039;s national\n            currency format (e.g. for the de_DE locale: EU1.234,56)."},{"t":"","d":"Returns the % character."},{"t":"number","d":"The number to be formatted."}]},"move_uploaded_file":{"s":"Moves an uploaded file to a new location","p":[{"t":"filename","d":"The filename of the uploaded file."},{"t":"destination","d":"The destination of the moved file."}]},"mqseries_back":{"s":"MQSeries MQBACK","p":[{"t":"hConn","d":"Connection handle."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_begin":{"s":"MQseries MQBEGIN","p":[{"t":"hConn","d":"Connection handle."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_close":{"s":"MQSeries MQCLOSE","p":[{"t":"hConn","d":"Connection handle."},{"t":"hObj","d":"Object handle."},{"t":"options","d":""},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_cmit":{"s":"MQSeries MQCMIT","p":[{"t":"hConn","d":"Connection handle."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_conn":{"s":"MQSeries MQCONN","p":[{"t":"qManagerName","d":"Name of queue manager."},{"t":"hConn","d":"Connection handle."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_connx":{"s":"MQSeries MQCONNX","p":[{"t":"qManagerName","d":"Name of queue manager."},{"t":"connOps","d":"Options that control the action of function"},{"t":"hConn","d":"Connection handle."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_disc":{"s":"MQSeries MQDISC","p":[{"t":"hConn","d":"Connection handle."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_get":{"s":"MQSeries MQGET","p":[{"t":"hConn","d":"Connection handle."},{"t":"hObj","d":"Object handle."},{"t":"md","d":"Message descriptor (MQMD)."},{"t":"gmo","d":"Get message options (MQGMO)."},{"t":"bufferLength","d":"Expected length of the result buffer"},{"t":"msg","d":"Buffer holding the message that was retrieved from the object."},{"t":"data_length","d":"Actual buffer length"},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_inq":{"s":"MQSeries MQINQ","p":[{"t":"hConn","d":"Connection handle."},{"t":"hObj","d":"Object handle."},{"t":"selectorCount","d":"Count of selectors."},{"t":"selectors","d":"Array of attribute selectors."},{"t":"intAttrLength","d":"Count of integer attributes."},{"t":"intAttr","d":"Array of integer attributes."},{"t":"charAttrLength","d":"Length of character attributes buffer."},{"t":"charAttr","d":"Character attributes."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_open":{"s":"MQSeries MQOPEN","p":[{"t":"hConn","d":"Connection handle."},{"t":"objDesc","d":"Object descriptor. (MQOD)"},{"t":"options","d":"Options that control the action of the function."},{"t":"hObj","d":"Object handle."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_put":{"s":"MQSeries MQPUT","p":[{"t":"hConn","d":"Connection handle."},{"t":"hObj","d":"Object handle."},{"t":"md","d":"Message descriptor (MQMD)."},{"t":"pmo","d":"Put message options (MQPMO)."},{"t":"message","d":"The actual message to put onto the queue."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_put1":{"s":"MQSeries MQPUT1","p":[{"t":"hConn","d":"Connection handle."},{"t":"objDesc","d":"Object descriptor. (MQOD)"},{"t":"msgDesc","d":"Message descriptor (MQMD)."},{"t":"pmo","d":"Put message options (MQPMO)."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_set":{"s":"MQSeries MQSET","p":[{"t":"hConn","d":"Connection handle."},{"t":"compCode","d":"Completion code."},{"t":"reason","d":"Reason code qualifying the compCode."}]},"mqseries_strerror":{"s":"Returns the error message corresponding to a result code (MQRC).","p":[{"t":"reason","d":"Reason code qualifying the compCode."}]},"msession_connect":{"s":"Connect to msession server","p":null},"msession_count":{"s":"Get session count","p":null},"msession_create":{"s":"Create a session","p":null},"msession_destroy":{"s":"Destroy a session","p":null},"msession_disconnect":{"s":"Close connection to msession server","p":null},"msession_find":{"s":"Find all sessions with name and value","p":null},"msession_get":{"s":"Get value from session","p":null},"msession_get_array":{"s":"Get array of msession variables","p":null},"msession_get_data":{"s":"Get data session unstructured data","p":null},"msession_inc":{"s":"Increment value in session","p":null},"msession_list":{"s":"List all sessions","p":null},"msession_listvar":{"s":"List sessions with variable","p":[{"t":"name","d":"The name being searched."}]},"msession_lock":{"s":"Lock a session","p":null},"msession_plugin":{"s":"Call an escape function within the msession personality plugin","p":null},"msession_randstr":{"s":"Get random string","p":null},"msession_set":{"s":"Set value in session","p":null},"msession_set_array":{"s":"Set msession variables from an array","p":null},"msession_set_data":{"s":"Set data session unstructured data","p":null},"msession_timeout":{"s":"Set\/get session timeout","p":null},"msession_uniq":{"s":"Get unique id","p":null},"msession_unlock":{"s":"Unlock a session","p":null},"msg_get_queue":{"s":"Create or attach to a message queue","p":[{"t":"key","d":"Message queue numeric ID"},{"t":"perms","d":"Queue permissions. Default to 0666. If the message queue already\n       exists, the perms will be ignored."}]},"msg_queue_exists":{"s":"Check whether a message queue exists","p":[{"t":"key","d":"Queue key."}]},"msg_receive":{"s":"Receive a message from a message queue","p":[{"t":"queue","d":""},{"t":"desiredmsgtype","d":"If desiredmsgtype is 0, the message from the front\n       of the queue is returned. If desiredmsgtype is\n       greater than 0, then the first message of that type is returned.\n       If desiredmsgtype is less than 0, the first\n       message on the queue with the lowest type less than or equal to the\n       absolute value of desiredmsgtype will be read.\n       If no messages match the criteria, your script will wait until a suitable\n       message arrives on the queue.  You can prevent the script from blocking\n       by specifying MSG_IPC_NOWAIT in the\n       flags parameter."},{"t":"msgtype","d":"The type of the message that was received will be stored in this\n       parameter."},{"t":"maxsize","d":"The maximum size of message to be accepted is specified by the\n       maxsize; if the message in the queue is larger\n       than this size the function will fail (unless you set\n       flags as described below)."},{"t":"message","d":"The received message will be stored in message,\n       unless there were errors receiving the message."},{"t":"unserialize","d":"If set to\n       TRUE, the message is treated as though it was serialized using the\n       same mechanism as the session module. The message will be unserialized\n       and then returned to your script. This allows you to easily receive\n       arrays or complex object structures from other PHP scripts, or if you\n       are using the WDDX serializer, from any WDDX compatible source."},{"t":"flags","d":"The optional flags allows you to pass flags to the\n       low-level msgrcv system call.  It defaults to 0, but you may specify one\n       or more of the following values (by adding or ORing them together).\n       \n        Flag values for msg_receive\n        \n         \n          \n           MSG_IPC_NOWAIT\n           If there are no messages of the\n            desiredmsgtype, return immediately and do not\n            wait.  The function will fail and return an integer value\n            corresponding to MSG_ENOMSG.\n           \n          \n\n          \n           MSG_EXCEPT\n           Using this flag in combination with a\n            desiredmsgtype greater than 0 will cause the\n            function to receive the first message that is not equal to\n            desiredmsgtype.\n          \n\n          \n           MSG_NOERROR\n           \n            If the message is longer than maxsize,\n            setting this flag will truncate the message to\n            maxsize and will not signal an error."},{"t":"errorcode","d":"If the function fails, the optional errorcode\n       will be set to the value of the system errno variable."}]},"msg_remove_queue":{"s":"Destroy a message queue","p":[{"t":"queue","d":"Message queue resource handle"}]},"msg_send":{"s":"Send a message to a message queue","p":[{"t":"queue","d":""},{"t":"msgtype","d":""},{"t":"message","d":""},{"t":"serialize","d":"The optional serialize controls how the\n       message is sent.  serialize\n       defaults to TRUE which means that the message is\n       serialized using the same mechanism as the session module before being\n       sent to the queue.  This allows complex arrays and objects to be sent to\n       other PHP scripts, or if you are using the WDDX serializer, to any WDDX\n       compatible client."},{"t":"blocking","d":"If the message is too large to fit in the queue, your script will wait\n       until another process reads messages from the queue and frees enough\n       space for your message to be sent.\n       This is called blocking; you can prevent blocking by setting the\n       optional blocking parameter to FALSE, in which\n       case msg_send() will immediately return FALSE if the\n       message is too big for the queue, and set the optional\n       errorcode to MSG_EAGAIN,\n       indicating that you should try to send your message again a little\n       later on."},{"t":"errorcode","d":""}]},"msg_set_queue":{"s":"Set information in the message queue data structure","p":[{"t":"queue","d":"Message queue resource handle"},{"t":"data","d":"You specify the values you require by setting the value of the keys\n       that you require in the data array."}]},"msg_stat_queue":{"s":"Returns information from the message queue data structure","p":[{"t":"queue","d":"Message queue resource handle"}]},"msql":{"s":"Alias of msql_db_query()","p":null},"msql_affected_rows":{"s":"Returns number of affected rows","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."}]},"msql_close":{"s":"Close mSQL connection","p":[{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_connect":{"s":"Open mSQL connection","p":[{"t":"hostname","d":"The hostname can also include a port number. e.g. \n       hostname,port."}]},"msql_createdb":{"s":"Alias of msql_create_db()","p":null},"msql_create_db":{"s":"Create mSQL database","p":[{"t":"database_name","d":"The name of the mSQL database."},{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_data_seek":{"s":"Move internal row pointer","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"row_number","d":"The seeked row number."}]},"msql_dbname":{"s":"Alias of msql_result()","p":null},"msql_db_query":{"s":"Send mSQL query","p":[{"t":"database","d":"The name of the mSQL database."},{"t":"query","d":"The SQL query."},{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_drop_db":{"s":"Drop (delete) mSQL database","p":[{"t":"database_name","d":"The name of the database."},{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_error":{"s":"Returns error message of last msql call","p":null},"msql_fetch_array":{"s":"Fetch row as array","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"result_type","d":"A constant that can take the following values: \n       MSQL_ASSOC, MSQL_NUM, and\n       MSQL_BOTH with MSQL_BOTH being\n       the default."}]},"msql_fetch_field":{"s":"Get field information","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"field_offset","d":"The field offset. If not specified, the next field that wasn&#039;t yet\n       retrieved by msql_fetch_field() is retrieved."}]},"msql_fetch_object":{"s":"Fetch row as object","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."}]},"msql_fetch_row":{"s":"Get row as enumerated array","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."}]},"msql_fieldflags":{"s":"Alias of msql_field_flags()","p":null},"msql_fieldlen":{"s":"Alias of msql_field_len()","p":null},"msql_fieldname":{"s":"Alias of msql_field_name()","p":null},"msql_fieldtable":{"s":"Alias of msql_field_table()","p":null},"msql_fieldtype":{"s":"Alias of msql_field_type()","p":null},"msql_field_flags":{"s":"Get field flags","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 1."}]},"msql_field_len":{"s":"Get field length","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 1."}]},"msql_field_name":{"s":"Get the name of the specified field in a result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 1."}]},"msql_field_seek":{"s":"Set field offset","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 1."}]},"msql_field_table":{"s":"Get table name for field","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 1."}]},"msql_field_type":{"s":"Get field type","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 1."}]},"msql_free_result":{"s":"Free result memory","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."}]},"msql_list_dbs":{"s":"List mSQL databases on server","p":[{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_list_fields":{"s":"List result fields","p":[{"t":"database","d":"The name of the database."},{"t":"tablename","d":"The name of the table."},{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_list_tables":{"s":"List tables in an mSQL database","p":[{"t":"database","d":"The name of the database."},{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_numfields":{"s":"Alias of msql_num_fields()","p":null},"msql_numrows":{"s":"Alias of msql_num_rows()","p":null},"msql_num_fields":{"s":"Get number of fields in result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."}]},"msql_num_rows":{"s":"Get number of rows in result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."}]},"msql_pconnect":{"s":"Open persistent mSQL connection","p":[{"t":"hostname","d":"The hostname can also include a port number. e.g. \n       hostname,port."}]},"msql_query":{"s":"Send mSQL query","p":[{"t":"query","d":"The SQL query."},{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_regcase":{"s":"Alias of sql_regcase()","p":null},"msql_result":{"s":"Get result data","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmsql_query()."},{"t":"row","d":"The row offset."},{"t":"field","d":"Can be the field&#039;s offset, or the field&#039;s name, or the field&#039;s table\n       dot field&#039;s name (tablename.fieldname.). If the column name has been \n       aliased (&#039;select foo as bar from ...&#039;), use the alias instead of the\n       column name."}]},"msql_select_db":{"s":"Select mSQL database","p":[{"t":"database_name","d":"The database name."},{"t":"","d":"The mSQL connection.\nIf not specified, the last link opened by msql_connect()\nis assumed. If no such link is found, the function will try to establish a\nlink as if msql_connect() was called, and use it."}]},"msql_tablename":{"s":"Alias of msql_result()","p":null},"mssql_bind":{"s":"Adds a parameter to a stored procedure or a remote stored procedure","p":[{"t":"stmt","d":"Statement resource, obtained with mssql_init()."},{"t":"param_name","d":"The parameter name, as a string."},{"t":"var","d":"The PHP variable you&#039;ll bind the MSSQL parameter to. It is passed by\n       reference, to retrieve OUTPUT and RETVAL values after\n       the procedure execution."},{"t":"type","d":"One of: SQLTEXT,\n       SQLVARCHAR, SQLCHAR,\n       SQLINT1, SQLINT2,\n       SQLINT4, SQLBIT,\n       SQLFLT4, SQLFLT8,\n       SQLFLTN."},{"t":"is_output","d":"Whether the value is an OUTPUT parameter or not. If it&#039;s an OUTPUT\n       parameter and you don&#039;t mention it, it will be treated as a normal\n       input parameter and no error will be thrown."},{"t":"is_null","d":"Whether the parameter is NULL or not. Passing the NULL value as\n       var will not do the job."},{"t":"maxlen","d":"Used with char\/varchar values. You have to indicate the length of the\n       data so if the parameter is a varchar(50), the type must be\n       SQLVARCHAR and this value 50."}]},"mssql_close":{"s":"Close MS SQL Server connection","p":[{"t":"link_identifier","d":"A MS SQL link identifier, returned by\n       mssql_connect()."}]},"mssql_connect":{"s":"Open MS SQL server connection","p":[{"t":"servername","d":"The MS SQL server. It can also include a port number, e.g.\n       hostname:port (Linux), or \n       hostname,port (Windows)."},{"t":"username","d":"The username."},{"t":"password","d":"The password."},{"t":"new_link","d":"If a second call is made to mssql_connect() with the\n       same arguments, no new link will be established, but instead, the link\n       identifier of the already opened link will be returned. This parameter\n       modifies this behavior and makes mssql_connect()\n       always open a new link, even if mssql_connect() was\n       called before with the same parameters."}]},"mssql_data_seek":{"s":"Moves internal row pointer","p":[{"t":"result_identifier","d":"The result resource that is being evaluated."},{"t":"row_number","d":"The desired row number of the new result pointer."}]},"mssql_execute":{"s":"Executes a stored procedure on a MS SQL server database","p":[{"t":"stmt","d":"Statement handle obtained with mssql_init()."},{"t":"skip_results","d":"Whenever to skip the results or not."}]},"mssql_fetch_array":{"s":"Fetch a result row as an associative array, a numeric array, or both","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."},{"t":"result_type","d":"The type of array that is to be fetched. It&#039;s a constant and can take\n       the following values: MSSQL_ASSOC, \n       MSSQL_NUM, and\n       MSSQL_BOTH."}]},"mssql_fetch_assoc":{"s":"Returns an associative array of the current row in the result","p":[{"t":"result_id","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."}]},"mssql_fetch_batch":{"s":"Returns the next batch of records","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."}]},"mssql_fetch_field":{"s":"Get field information","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."},{"t":"field_offset","d":"The numerical field offset. If the field offset is not specified, the\n       next field that was not yet retrieved by this function is retrieved. The\n       field_offset starts at 0."}]},"mssql_fetch_object":{"s":"Fetch row as object","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."}]},"mssql_fetch_row":{"s":"Get row as enumerated array","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."}]},"mssql_field_length":{"s":"Get the length of a field","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."},{"t":"offset","d":"The field offset, starts at 0. If omitted, the current field is used."}]},"mssql_field_name":{"s":"Get the name of a field","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."},{"t":"offset","d":"The field offset, starts at 0. If omitted, the current field is used."}]},"mssql_field_seek":{"s":"Seeks to the specified field offset","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."},{"t":"field_offset","d":"The field offset, starts at 0."}]},"mssql_field_type":{"s":"Gets the type of a field","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."},{"t":"offset","d":"The field offset, starts at 0. If omitted, the current field is used."}]},"mssql_free_result":{"s":"Free result memory","p":[{"t":"result","d":"The result resource that is being freed. This result comes from a\n       call to mssql_query()."}]},"mssql_free_statement":{"s":"Free statement memory","p":[{"t":"stmt","d":"Statement resource, obtained with mssql_init()."}]},"mssql_get_last_message":{"s":"Returns the last message from the server","p":null},"mssql_guid_string":{"s":"Converts a 16 byte binary GUID to a string","p":[{"t":"binary","d":"A 16 byte binary GUID."},{"t":"short_format","d":"Whenever to use short format."}]},"mssql_init":{"s":"Initializes a stored procedure or a remote stored procedure","p":[{"t":"sp_name","d":"Stored procedure name, like ownew.sp_name or\n       otherdb.owner.sp_name."},{"t":"link_identifier","d":"A MS SQL link identifier, returned by \n       mssql_connect()."}]},"mssql_min_error_severity":{"s":"Sets the minimum error severity","p":[{"t":"severity","d":"The new error severity."}]},"mssql_min_message_severity":{"s":"Sets the minimum message severity","p":[{"t":"severity","d":"The new message severity."}]},"mssql_next_result":{"s":"Move the internal result pointer to the next result","p":[{"t":"result_id","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."}]},"mssql_num_fields":{"s":"Gets the number of fields in result","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."}]},"mssql_num_rows":{"s":"Gets the number of rows in result","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."}]},"mssql_pconnect":{"s":"Open persistent MS SQL connection","p":[{"t":"servername","d":"The MS SQL server. It can also include a port number. e.g. \n       hostname:port."},{"t":"username","d":"The username."},{"t":"password","d":"The password."},{"t":"new_link","d":"If a second call is made to mssql_pconnect() with\n       the same arguments, no new link will be established, but instead, the\n       link identifier of the already opened link will be returned. This\n       parameter modifies this behavior and makes\n       mssql_pconnect() always open a new link, even if\n       mssql_pconnect() was called before with the same\n       parameters."}]},"mssql_query":{"s":"Send MS SQL query","p":[{"t":"query","d":"An SQL query."},{"t":"link_identifier","d":"A MS SQL link identifier, returned by \n       mssql_connect() or \n       mssql_pconnect()."},{"t":"batch_size","d":"The number of records to batch in the buffer."}]},"mssql_result":{"s":"Get result data","p":[{"t":"result","d":"The result resource that is being evaluated. This result comes from a\n       call to mssql_query()."},{"t":"row","d":"The row number."},{"t":"field","d":"Can be the field&#039;s offset, the field&#039;s name or the field&#039;s table dot\n       field&#039;s name (tablename.fieldname). If the column name has been\n       aliased (&#039;select foo as bar from...&#039;), it uses the alias instead of\n       the column name."}]},"mssql_rows_affected":{"s":"Returns the number of records affected by the query","p":[{"t":"link_identifier","d":"A MS SQL link identifier, returned by\n       mssql_connect() or\n       mssql_pconnect()."}]},"mssql_select_db":{"s":"Select MS SQL database","p":[{"t":"database_name","d":"The database name."},{"t":"link_identifier","d":"A MS SQL link identifier, returned by\n       mssql_connect() or\n       mssql_pconnect()."}]},"mt_getrandmax":{"s":"Show largest possible random value","p":null},"mt_rand":{"s":"Generate a better random value","p":[{"t":"min","d":"Optional lowest value to be returned (default: 0)"},{"t":"max","d":"Optional highest value to be returned (default: mt_getrandmax())"}]},"mt_srand":{"s":"Seed the better random number generator","p":[{"t":"seed","d":"An optional seed value"}]},"mysqli_bind_param":{"s":"Alias for mysqli_stmt_bind_param()","p":null},"mysqli_bind_result":{"s":"Alias for mysqli_stmt_bind_result()","p":null},"mysqli_client_encoding":{"s":"Alias of mysqli_character_set_name()","p":null},"mysqli_connect":{"s":"Alias of mysqli::__construct()","p":null},"mysqli_disable_reads_from_master":{"s":"Disable reads from master","p":null},"mysqli_disable_rpl_parse":{"s":"Disable RPL parse","p":null},"mysqli_enable_reads_from_master":{"s":"Enable reads from master","p":null},"mysqli_enable_rpl_parse":{"s":"Enable RPL parse","p":null},"mysqli_escape_string":{"s":"Alias of mysqli_real_escape_string()","p":null},"mysqli_execute":{"s":"Alias for mysqli_stmt_execute()","p":null},"mysqli_fetch":{"s":"Alias for mysqli_stmt_fetch()","p":null},"mysqli_get_cache_stats":{"s":"Returns client Zval cache statistics","p":null},"mysqli_get_metadata":{"s":"Alias for mysqli_stmt_result_metadata()","p":null},"mysqli_master_query":{"s":"Enforce execution of a query on the master in a master\/slave setup","p":null},"mysqli_param_count":{"s":"Alias for mysqli_stmt_param_count()","p":null},"mysqli_report":{"s":"Alias of of mysqli_driver-&gt;report_mode","p":null},"mysqli_rpl_parse_enabled":{"s":"Check if RPL parse is enabled","p":null},"mysqli_rpl_probe":{"s":"RPL probe","p":null},"mysqli_send_long_data":{"s":"Alias for mysqli_stmt_send_long_data()","p":null},"mysqli_set_opt":{"s":"Alias of mysqli_options()","p":null},"mysqli_slave_query":{"s":"Force execution of a query on a slave in a master\/slave setup","p":null},"mysqlnd_memcache_get_config":{"s":"Returns information about the plugin configuration","p":[{"t":"connection","d":"A handle to a MySQL Server using one of the MySQL API extensions for PHP, which are\n      PDO_MYSQL, mysqli or\n      ext\/mysql."}]},"mysqlnd_memcache_set":{"s":"Associate a MySQL connection with a Memcache connection","p":[{"t":"mysql_connection","d":"A handle to a MySQL Server using one of the MySQL API extensions for PHP, which are\n      PDO_MYSQL, mysqli or\n      ext\/mysql."},{"t":"memcache_connection","d":"A Memcached instance with a \n      connection to the MySQL Memcache Daemon plugin. If this parameter\n      is omitted, then mysql_connection will be unassociated\n      from any memcache connection. And if a previous association exists, then it will be\n      replaced."},{"t":"pattern","d":"A regular expression in Perl Compatible\n      Regular Expression syntax used to identify potential\n      Memcache-queries. The query should have three sub patterns. The\n      first subpattern contains the requested field list, the second the name\n      of the ID column from the query and the third the requested value. If\n      this parameter is omitted or os set to NULL, then a default\n      pattern will be used."},{"t":"callback","d":"A callback which will be used whenever a query is being sent to \n      MySQL. The callback will receive a single boolean parameter\n      telling if a query was sent via Memcache."}]},"mysqlnd_ms_get_last_gtid":{"s":"Returns the latest global transaction ID","p":[{"t":"connection","d":"A PECL\/mysqlnd_ms connection handle to a MySQL server of the type\n      PDO_MYSQL, mysqli&gt; or\n      ext\/mysql.\n      The connection handle is obtained when opening a connection with\n      a host name that matches a mysqlnd_ms configuration file\n      entry using any of the above three MySQL driver extensions."}]},"mysqlnd_ms_get_last_used_connection":{"s":"Returns an array which describes the last used connection","p":[{"t":"connection","d":"A MySQL connection handle obtained from any of the\n      connect functions of the mysqli,\n      mysql or\n      PDO_MYSQL extensions."}]},"mysqlnd_ms_get_stats":{"s":"Returns query distribution and connection statistics","p":null},"mysqlnd_ms_match_wild":{"s":"Finds whether a table name matches a wildcard pattern or not","p":[{"t":"table_name","d":"The table name to check if it is matched by the wildcard."},{"t":"wildcard","d":"The wildcard pattern to check against the table name.\n      The wildcard pattern supports the same placeholders as\n      MySQL replication filters do."}]},"mysqlnd_ms_query_is_select":{"s":"Find whether to send the query to the master, the slave or the last used MySQL server","p":[{"t":"query","d":"Query string to test."}]},"mysqlnd_ms_set_qos":{"s":"Sets the quality of service needed from the cluster","p":[{"t":"connection","d":"A PECL\/mysqlnd_ms connection handle to a MySQL server of the type\n      PDO_MYSQL, mysqli or\n      ext\/mysql for which a service level is to be set.\n      The connection handle is obtained when opening a connection with\n      a host name that matches a mysqlnd_ms configuration file\n      entry using any of the above three MySQL driver extensions."},{"t":"service_level","d":"The requested service level: MYSQLND_MS_QOS_CONSISTENCY_EVENTUAL,\n      MYSQLND_MS_QOS_CONSISTENCY_SESSION or\n      MYSQLND_MS_QOS_CONSISTENCY_STRONG."},{"t":"service_level_option","d":"An option to parameterize the requested service level.\n      The option can either be MYSQLND_MS_QOS_OPTION_GTID\n      or MYSQLND_MS_QOS_OPTION_AGE."},{"t":"option_value","d":"Parameter value for the service level option. See also the\n      service_level_option parameter."}]},"mysqlnd_ms_set_user_pick_server":{"s":"Sets a callback for user-defined read\/write splitting","p":[{"t":"function","d":"The function to be called. Class methods may also be invoked\n      statically using this function by passing\n      array($classname, $methodname) to this parameter.\n      Additionally class methods of an object instance may be called by passing\n      array($objectinstance, $methodname) to this parameter."}]},"mysqlnd_qc_clear_cache":{"s":"Flush all cache contents","p":null},"mysqlnd_qc_get_available_handlers":{"s":"Returns a list of available storage handler","p":null},"mysqlnd_qc_get_cache_info":{"s":"Returns information on the current handler, the number of cache entries and cache entries, if available","p":null},"mysqlnd_qc_get_core_stats":{"s":"Statistics collected by the core of the query cache","p":null},"mysqlnd_qc_get_normalized_query_trace_log":{"s":"Returns a normalized query trace log for each query inspected by the query cache","p":null},"mysqlnd_qc_get_query_trace_log":{"s":"Returns a backtrace for each query inspected by the query cache","p":null},"mysqlnd_qc_set_cache_condition":{"s":"Set conditions for automatic caching","p":[{"t":"condition_type","d":"Type of the condition. The only allowed value is\n      MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN."},{"t":"condition","d":"Parameter for the condition set with condition_type.\n      Parameter type and structure depend on condition_type"},{"t":"condition_option","d":"Option for condition. Type and structure depend\n      on condition_type."}]},"mysqlnd_qc_set_is_select":{"s":"Installs a callback which decides whether a statement is cached","p":null},"mysqlnd_qc_set_storage_handler":{"s":"Change current storage handler","p":[{"t":"handler","d":"Handler can be of type string representing the name of a\n      built-in storage handler or an object of type\n      mysqlnd_qc_handler_default.\n      The names of the built-in storage handler are\n      default,\n      APC,\n      MEMCACHE,\n      sqlite."}]},"mysqlnd_qc_set_user_handlers":{"s":"Sets the callback functions for a user-defined procedural storage handler","p":[{"t":"get_hash","d":"Name of the user function implementing the storage handler\n      get_hash functionality."},{"t":"find_query_in_cache","d":"Name of the user function implementing the storage handler\n      find_in_cache functionality."},{"t":"return_to_cache","d":"Name of the user function implementing the storage handler\n      return_to_cache functionality."},{"t":"add_query_to_cache_if_not_exists","d":"Name of the user function implementing the storage handler\n      add_query_to_cache_if_not_exists functionality."},{"t":"query_is_select","d":"Name of the user function implementing the storage handler\n      query_is_select functionality."},{"t":"update_query_run_time_stats","d":"Name of the user function implementing the storage handler\n      update_query_run_time_stats functionality."},{"t":"get_stats","d":"Name of the user function implementing the storage handler\n      get_stats functionality."},{"t":"clear_cache","d":"Name of the user function implementing the storage handler\n      clear_cache functionality."}]},"mysqlnd_uh_convert_to_mysqlnd":{"s":"Converts a MySQL connection handle into a mysqlnd connection handle","p":[{"t":"MySQL connection handle","d":"A MySQL connection handle of type mysql, mysqli or PDO_MySQL."}]},"mysqlnd_uh_set_connection_proxy":{"s":"Installs a proxy for mysqlnd connections","p":[{"t":"connection_proxy","d":"A proxy object of type MysqlndUhConnection."},{"t":"mysqli_connection","d":"Object of type mysqli.\n      If given, the proxy will be set for this particular connection only."}]},"mysqlnd_uh_set_statement_proxy":{"s":"Installs a proxy for mysqlnd statements","p":[{"t":"statement_proxy","d":"The mysqlnd statement proxy object of type MysqlndUhStatement"}]},"mysql_affected_rows":{"s":"Get number of affected rows in previous MySQL operation","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_client_encoding":{"s":"Returns the name of the character set","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_close":{"s":"Close MySQL connection","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no connection is found or\nestablished, an E_WARNING level error is\ngenerated."}]},"mysql_connect":{"s":"Open a connection to a MySQL Server","p":[{"t":"server","d":"The MySQL server. It can also include a port number. e.g. \n       &quot;hostname:port&quot; or a path to a local socket e.g. &quot;:\/path\/to\/socket&quot; for \n       the localhost."},{"t":"username","d":"The username. Default value is defined by mysql.default_user. In\n       SQL safe mode, this parameter is ignored and the name of the user that\n       owns the server process is used."},{"t":"password","d":"The password. Default value is defined by mysql.default_password. In\n       SQL safe mode, this parameter is ignored and empty password is used."},{"t":"new_link","d":"If a second call is made to mysql_connect()\n       with the same arguments, no new link will be established, but\n       instead, the link identifier of the already opened link will be\n       returned. The new_link parameter modifies this \n       behavior and makes mysql_connect() always open \n       a new link, even if mysql_connect() was called \n       before with the same parameters.\n       In SQL safe mode, this parameter is ignored."},{"t":"client_flags","d":"The client_flags parameter can be a combination \n       of the following constants:\n       128 (enable LOAD DATA LOCAL handling),\n       MYSQL_CLIENT_SSL,\n       MYSQL_CLIENT_COMPRESS, \n       MYSQL_CLIENT_IGNORE_SPACE or\n       MYSQL_CLIENT_INTERACTIVE.\n       Read the section about MySQL client constants for further information.\n       In SQL safe mode, this parameter is ignored."}]},"mysql_create_db":{"s":"Create a MySQL database","p":[{"t":"database_name","d":"The name of the database being created."},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_data_seek":{"s":"Move internal result pointer","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"row_number","d":"The desired row number of the new result pointer."}]},"mysql_db_name":{"s":"Retrieves database name from the call to mysql_list_dbs()","p":[{"t":"result","d":"The result pointer from a call to mysql_list_dbs()."},{"t":"row","d":"The index into the result set."},{"t":"field","d":"The field name."}]},"mysql_db_query":{"s":"Selects a database and executes a query on it","p":[{"t":"database","d":"The name of the database that will be selected."},{"t":"query","d":"The MySQL query."},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_drop_db":{"s":"Drop (delete) a MySQL database","p":[{"t":"database_name","d":"The name of the database that will be deleted."},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_errno":{"s":"Returns the numerical value of the error message from previous MySQL operation","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_error":{"s":"Returns the text of the error message from previous MySQL operation","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_escape_string":{"s":"Escapes a string for use in a mysql_query","p":[{"t":"unescaped_string","d":"The string that is to be escaped."}]},"mysql_fetch_array":{"s":"Fetch a result row as an associative array, a numeric array, or both","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"result_type","d":"The type of array that is to be fetched. It&#039;s a constant and can\n       take the following values: MYSQL_ASSOC, \n       MYSQL_NUM, and\n       MYSQL_BOTH."}]},"mysql_fetch_assoc":{"s":"Fetch a result row as an associative array","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."}]},"mysql_fetch_field":{"s":"Get column information from a result and return as an object","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"field_offset","d":"The numerical field offset. If the field offset is not specified, the \n       next field that was not yet retrieved by this function is retrieved. \n       The field_offset starts at 0."}]},"mysql_fetch_lengths":{"s":"Get the length of each output in a result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."}]},"mysql_fetch_object":{"s":"Fetch a result row as an object","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"class_name","d":"The name of the class to instantiate, set the properties of and return.\n        If not specified, a stdClass object is returned."},{"t":"params","d":"An optional array of parameters to pass to the constructor\n        for class_name objects."}]},"mysql_fetch_row":{"s":"Get a result row as an enumerated array","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."}]},"mysql_field_flags":{"s":"Get the flags associated with the specified field in a result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 0. If\nfield_offset does not exist, an error of level\nE_WARNING is also issued."}]},"mysql_field_len":{"s":"Returns the length of the specified field","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 0. If\nfield_offset does not exist, an error of level\nE_WARNING is also issued."}]},"mysql_field_name":{"s":"Get the name of the specified field in a result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 0. If\nfield_offset does not exist, an error of level\nE_WARNING is also issued."}]},"mysql_field_seek":{"s":"Set result pointer to a specified field offset","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 0. If\nfield_offset does not exist, an error of level\nE_WARNING is also issued."}]},"mysql_field_table":{"s":"Get name of the table the specified field is in","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 0. If\nfield_offset does not exist, an error of level\nE_WARNING is also issued."}]},"mysql_field_type":{"s":"Get the type of the specified field in a result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"field_offset","d":"The numerical field offset. The\nfield_offset starts at 0. If\nfield_offset does not exist, an error of level\nE_WARNING is also issued."}]},"mysql_free_result":{"s":"Free result memory","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."}]},"mysql_get_client_info":{"s":"Get MySQL client info","p":null},"mysql_get_host_info":{"s":"Get MySQL host info","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_get_proto_info":{"s":"Get MySQL protocol info","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_get_server_info":{"s":"Get MySQL server info","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_info":{"s":"Get information about the most recent query","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_insert_id":{"s":"Get the ID generated in the last query","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_list_dbs":{"s":"List databases available on a MySQL server","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_list_fields":{"s":"List MySQL table fields","p":[{"t":"database_name","d":"The name of the database that&#039;s being queried."},{"t":"table_name","d":"The name of the table that&#039;s being queried."},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_list_processes":{"s":"List MySQL processes","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_list_tables":{"s":"List tables in a MySQL database","p":[{"t":"database","d":"The name of the database"},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_num_fields":{"s":"Get number of fields in result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."}]},"mysql_num_rows":{"s":"Get number of rows in result","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."}]},"mysql_pconnect":{"s":"Open a persistent connection to a MySQL server","p":[{"t":"server","d":"The MySQL server. It can also include a port number. e.g. \n       &quot;hostname:port&quot; or a path to a local socket e.g. &quot;:\/path\/to\/socket&quot; for \n       the localhost."},{"t":"username","d":"The username. Default value is the name of the user that owns the\n       server process."},{"t":"password","d":"The password. Default value is an empty password."},{"t":"client_flags","d":"The client_flags parameter can be a combination \n       of the following constants:\n       128 (enable LOAD DATA LOCAL handling),\n       MYSQL_CLIENT_SSL, \n       MYSQL_CLIENT_COMPRESS, \n       MYSQL_CLIENT_IGNORE_SPACE or\n       MYSQL_CLIENT_INTERACTIVE."}]},"mysql_ping":{"s":"Ping a server connection or reconnect if there is no connection","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_query":{"s":"Send a MySQL query","p":[{"t":"query","d":"An SQL query"},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_real_escape_string":{"s":"Escapes special characters in a string for use in an SQL statement","p":[{"t":"unescaped_string","d":"The string that is to be escaped."},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_result":{"s":"Get result data","p":[{"t":"","d":"The result resource that\nis being evaluated. This result comes from a call to\nmysql_query()."},{"t":"row","d":"The row number from the result that&#039;s being retrieved. Row numbers \n       start at 0."},{"t":"field","d":"The name or offset of the field being retrieved."}]},"mysql_select_db":{"s":"Select a MySQL database","p":[{"t":"database_name","d":"The name of the database that is to be selected."},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_set_charset":{"s":"Sets the client character set","p":[{"t":"charset","d":"A valid character set name."},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_stat":{"s":"Get current system status","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_tablename":{"s":"Get table name of field","p":[{"t":"result","d":"A result pointer resource that&#039;s returned from  \n       mysql_list_tables()."},{"t":"i","d":"The integer index (row\/table number)"}]},"mysql_thread_id":{"s":"Return the current thread ID","p":[{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"mysql_unbuffered_query":{"s":"Send an SQL query to MySQL without fetching and buffering the result rows.","p":[{"t":"query","d":"The SQL query to execute."},{"t":"","d":"The MySQL connection. If the\nlink identifier is not specified, the last link opened by\nmysql_connect() is assumed. If no such link is found, it\nwill try to create one as if mysql_connect() was called\nwith no arguments. If no connection is found or established, an\nE_WARNING level error is generated."}]},"m_checkstatus":{"s":"Check to see if a transaction has completed","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_completeauthorizations":{"s":"Number of complete authorizations in queue, returning an array of their identifiers","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"array","d":"Its description"}]},"m_connect":{"s":"Establish the connection to MCVE","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."}]},"m_connectionerror":{"s":"Get a textual representation of why a connection failed","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."}]},"m_deletetrans":{"s":"Delete specified transaction from MCVE_CONN structure","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_destroyconn":{"s":"Destroy the connection and MCVE_CONN structure","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."}]},"m_destroyengine":{"s":"Free memory associated with IP\/SSL connectivity","p":null},"m_getcell":{"s":"Get a specific cell from a comma delimited response by column name","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""},{"t":"column","d":""},{"t":"row","d":""}]},"m_getcellbynum":{"s":"Get a specific cell from a comma delimited response by column number","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""},{"t":"column","d":""},{"t":"row","d":""}]},"m_getcommadelimited":{"s":"Get the RAW comma delimited data returned from MCVE","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_getheader":{"s":"Get the name of the column in a comma-delimited response","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""},{"t":"column_num","d":""}]},"m_initconn":{"s":"Create and initialize an MCVE_CONN structure","p":null},"m_initengine":{"s":"Ready the client for IP\/SSL Communication","p":[{"t":"location","d":""}]},"m_iscommadelimited":{"s":"Checks to see if response is comma delimited","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_maxconntimeout":{"s":"The maximum amount of time the API will attempt a connection to MCVE","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"secs","d":""}]},"m_monitor":{"s":"Perform communication with MCVE (send\/receive data) Non-blocking","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."}]},"m_numcolumns":{"s":"Number of columns returned in a comma delimited response","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_numrows":{"s":"Number of rows returned in a comma delimited response","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_parsecommadelimited":{"s":"Parse the comma delimited response so m_getcell, etc will work","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_responsekeys":{"s":"","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_responseparam":{"s":"Get a custom response parameter","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""},{"t":"key","d":""}]},"m_returnstatus":{"s":"Check to see if the transaction was successful","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_setblocking":{"s":"Set blocking\/non-blocking mode for connection","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"tf","d":""}]},"m_setdropfile":{"s":"Set the connection method to Drop-File","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"directory","d":""}]},"m_setip":{"s":"Set the connection method to IP","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"host","d":""},{"t":"port","d":""}]},"m_setssl":{"s":"Set the connection method to SSL","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"host","d":""},{"t":"port","d":""}]},"m_setssl_cafile":{"s":"","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"cafile","d":""}]},"m_setssl_files":{"s":"","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"sslkeyfile","d":""},{"t":"sslcertfile","d":""}]},"m_settimeout":{"s":"Set maximum transaction time (per trans)","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"seconds","d":""}]},"m_sslcert_gen_hash":{"s":"Generate hash for SSL client certificate verification","p":[{"t":"filename","d":""}]},"m_transactionssent":{"s":"Check to see if outgoing buffer is clear","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."}]},"m_transinqueue":{"s":"Number of transactions in client-queue","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."}]},"m_transkeyval":{"s":"Add key\/value pair to a transaction. Replaces deprecated transparam()","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""},{"t":"key","d":""},{"t":"value","d":""}]},"m_transnew":{"s":"Start a new transaction","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."}]},"m_transsend":{"s":"Finalize and send the transaction","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"identifier","d":""}]},"m_uwait":{"s":"Wait x microsecs","p":[{"t":"microsecs","d":""}]},"m_validateidentifier":{"s":"Whether or not to validate the passed identifier on any transaction it is passed to","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"tf","d":""}]},"m_verifyconnection":{"s":"Set whether or not to PING upon connect to verify connection","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"tf","d":""}]},"m_verifysslcert":{"s":"Set whether or not to verify the server ssl certificate","p":[{"t":"","d":"An MCVE_CONN resource returned by\nm_initengine()."},{"t":"tf","d":""}]},"natcasesort":{"s":"Sort an array using a case insensitive &quot;natural order&quot; algorithm","p":[{"t":"array","d":"The input array."}]},"natsort":{"s":"Sort an array using a &quot;natural order&quot; algorithm","p":[{"t":"array","d":"The input array."}]},"ncurses_addch":{"s":"Add character at current position and advance cursor ","p":[{"t":"ch","d":""}]},"ncurses_addchnstr":{"s":"Add attributed string with specified length at current position ","p":[{"t":"s","d":""},{"t":"n","d":""}]},"ncurses_addchstr":{"s":"Add attributed string at current position ","p":[{"t":"s","d":""}]},"ncurses_addnstr":{"s":"Add string with specified length at current position ","p":[{"t":"s","d":""},{"t":"n","d":""}]},"ncurses_addstr":{"s":"Output text at current position ","p":[{"t":"text","d":""}]},"ncurses_assume_default_colors":{"s":"Define default colors for color 0 ","p":[{"t":"fg","d":""},{"t":"bg","d":""}]},"ncurses_attroff":{"s":"Turn off the given attributes","p":[{"t":"attributes","d":""}]},"ncurses_attron":{"s":"Turn on the given attributes","p":[{"t":"attributes","d":""}]},"ncurses_attrset":{"s":"Set given attributes","p":[{"t":"attributes","d":""}]},"ncurses_baudrate":{"s":"Returns baudrate of terminal ","p":null},"ncurses_beep":{"s":"Let the terminal beep ","p":null},"ncurses_bkgd":{"s":"Set background property for terminal screen ","p":[{"t":"attrchar","d":""}]},"ncurses_bkgdset":{"s":"Control screen background ","p":[{"t":"attrchar","d":""}]},"ncurses_border":{"s":"Draw a border around the screen using attributed characters","p":[{"t":"left","d":""},{"t":"right","d":""},{"t":"top","d":""},{"t":"bottom","d":""},{"t":"tl_corner","d":"Top left corner"},{"t":"tr_corner","d":"Top right corner"},{"t":"bl_corner","d":"Bottom left corner"},{"t":"br_corner","d":"Bottom right corner"}]},"ncurses_bottom_panel":{"s":"Moves a visible panel to the bottom of the stack","p":[{"t":"panel","d":""}]},"ncurses_can_change_color":{"s":"Checks if terminal color definitions can be changed","p":null},"ncurses_cbreak":{"s":"Switch of input buffering ","p":null},"ncurses_clear":{"s":"Clear screen ","p":null},"ncurses_clrtobot":{"s":"Clear screen from current position to bottom ","p":null},"ncurses_clrtoeol":{"s":"Clear screen from current position to end of line ","p":null},"ncurses_color_content":{"s":"Retrieves RGB components of a color","p":[{"t":"color","d":"The number of the color to retrieve information for. May be one of the\n       pre-defined color constants."},{"t":"r","d":"A reference to which to return the red component of the color. The value\n       returned to the reference will be between 0 and 1000."},{"t":"g","d":"A reference to which to return the green component of the color. The value\n       returned to the reference will be between 0 and 1000."},{"t":"b","d":"A reference to which to return the blue component of the color. The value\n       returned to the reference will be between 0 and 1000."}]},"ncurses_color_set":{"s":"Set active foreground and background colors","p":[{"t":"pair","d":"The color pair from which to get the foreground and background colors\n       to set as the active colors."}]},"ncurses_curs_set":{"s":"Set cursor state ","p":[{"t":"visibility","d":""}]},"ncurses_define_key":{"s":"Define a keycode ","p":[{"t":"definition","d":""},{"t":"keycode","d":""}]},"ncurses_def_prog_mode":{"s":"Saves terminals (program) mode","p":null},"ncurses_def_shell_mode":{"s":"Saves terminals (shell) mode","p":null},"ncurses_delay_output":{"s":"Delay output on terminal using padding characters ","p":[{"t":"milliseconds","d":""}]},"ncurses_delch":{"s":"Delete character at current position, move rest of line left ","p":null},"ncurses_deleteln":{"s":"Delete line at current position, move rest of screen up ","p":null},"ncurses_delwin":{"s":"Delete a ncurses window ","p":[{"t":"window","d":""}]},"ncurses_del_panel":{"s":"Remove panel from the stack and delete it (but not the associated window)","p":[{"t":"panel","d":""}]},"ncurses_doupdate":{"s":"Write all prepared refreshes to terminal ","p":null},"ncurses_echo":{"s":"Activate keyboard input echo ","p":null},"ncurses_echochar":{"s":"Single character output including refresh ","p":[{"t":"character","d":""}]},"ncurses_end":{"s":"Stop using ncurses, clean up the screen ","p":null},"ncurses_erase":{"s":"Erase terminal screen ","p":null},"ncurses_erasechar":{"s":"Returns current erase character ","p":null},"ncurses_filter":{"s":"Set LINES for iniscr() and newterm() to 1","p":null},"ncurses_flash":{"s":"Flash terminal screen (visual bell) ","p":null},"ncurses_flushinp":{"s":"Flush keyboard input buffer ","p":null},"ncurses_getch":{"s":"Read a character from keyboard ","p":null},"ncurses_getmaxyx":{"s":"Returns the size of a window","p":[{"t":"window","d":"The measured window"},{"t":"y","d":"This will be set to the window height"},{"t":"x","d":"This will be set to the window width"}]},"ncurses_getmouse":{"s":"Reads mouse event","p":[{"t":"mevent","d":"Event options will be delivered in this parameter which has to be an\n       array, passed by reference (see example below)."}]},"ncurses_getyx":{"s":"Returns the current cursor position for a window","p":[{"t":"window","d":""},{"t":"y","d":""},{"t":"x","d":""}]},"ncurses_halfdelay":{"s":"Put terminal into halfdelay mode ","p":[{"t":"tenth","d":""}]},"ncurses_has_colors":{"s":"Checks if terminal has color capabilities","p":null},"ncurses_has_ic":{"s":"Check for insert- and delete-capabilities ","p":null},"ncurses_has_il":{"s":"Check for line insert- and delete-capabilities ","p":null},"ncurses_has_key":{"s":"Check for presence of a function key on terminal keyboard ","p":[{"t":"keycode","d":""}]},"ncurses_hide_panel":{"s":"Remove panel from the stack, making it invisible","p":[{"t":"panel","d":""}]},"ncurses_hline":{"s":"Draw a horizontal line at current position using an attributed character and max. n characters long ","p":[{"t":"charattr","d":""},{"t":"n","d":""}]},"ncurses_inch":{"s":"Get character and attribute at current position ","p":null},"ncurses_init":{"s":"Initialize ncurses","p":null},"ncurses_init_color":{"s":"Define a terminal color","p":[{"t":"color","d":"The identification number of the color to redefine. It may be one of\n       the default color constants."},{"t":"r","d":"A color value, between 0 and 1000, for the red component."},{"t":"g","d":"A color value, between 0 and 1000, for the green component."},{"t":"b","d":"A color value, between 0 and 1000, for the blue component."}]},"ncurses_init_pair":{"s":"Define a color pair","p":[{"t":"pair","d":"The number of the color pair to define."},{"t":"fg","d":"The foreground color for the color pair. May be one of the\n       pre-defined colors\n       or one defined by ncurses_init_color() if\n       the terminal has color changing capabilities."},{"t":"bg","d":"The background color for the color pair. May be one of the\n       pre-defined colors\n       or one defined by ncurses_init_color() if\n       the terminal has color changing capabilities."}]},"ncurses_insch":{"s":"Insert character moving rest of line including character at current position ","p":[{"t":"character","d":""}]},"ncurses_insdelln":{"s":"Insert lines before current line scrolling down (negative numbers delete and scroll up) ","p":[{"t":"count","d":""}]},"ncurses_insertln":{"s":"Insert a line, move rest of screen down ","p":null},"ncurses_insstr":{"s":"Insert string at current position, moving rest of line right ","p":[{"t":"text","d":""}]},"ncurses_instr":{"s":"Reads string from terminal screen","p":[{"t":"buffer","d":"The characters. Attributes will be stripped."}]},"ncurses_isendwin":{"s":"Ncurses is in endwin mode, normal screen output may be performed","p":null},"ncurses_keyok":{"s":"Enable or disable a keycode ","p":[{"t":"keycode","d":""},{"t":"enable","d":""}]},"ncurses_keypad":{"s":"Turns keypad on or off","p":[{"t":"window","d":""},{"t":"bf","d":""}]},"ncurses_killchar":{"s":"Returns current line kill character ","p":null},"ncurses_longname":{"s":"Returns terminals description","p":null},"ncurses_meta":{"s":"Enables\/Disable 8-bit meta key information","p":[{"t":"window","d":""},{"t":"8bit","d":""}]},"ncurses_mouseinterval":{"s":"Set timeout for mouse button clicks ","p":[{"t":"milliseconds","d":""}]},"ncurses_mousemask":{"s":"Sets mouse options","p":[{"t":"newmask","d":"Mouse mask options can be set with the following predefined constants:\n       \n        NCURSES_BUTTON1_PRESSED"},{"t":"oldmask","d":"This will be set to the previous value of the mouse event mask."}]},"ncurses_mouse_trafo":{"s":"Transforms coordinates","p":[{"t":"y","d":""},{"t":"x","d":""},{"t":"toscreen","d":""}]},"ncurses_move":{"s":"Move output position ","p":[{"t":"y","d":""},{"t":"x","d":""}]},"ncurses_move_panel":{"s":"Moves a panel so that its upper-left corner is at [startx, starty]","p":[{"t":"panel","d":""},{"t":"startx","d":""},{"t":"starty","d":""}]},"ncurses_mvaddch":{"s":"Move current position and add character ","p":[{"t":"y","d":""},{"t":"x","d":""},{"t":"c","d":""}]},"ncurses_mvaddchnstr":{"s":"Move position and add attributed string with specified length ","p":[{"t":"y","d":""},{"t":"x","d":""},{"t":"s","d":""},{"t":"n","d":""}]},"ncurses_mvaddchstr":{"s":"Move position and add attributed string ","p":[{"t":"y","d":""},{"t":"x","d":""},{"t":"s","d":""}]},"ncurses_mvaddnstr":{"s":"Move position and add string with specified length ","p":[{"t":"y","d":""},{"t":"x","d":""},{"t":"s","d":""},{"t":"n","d":""}]},"ncurses_mvaddstr":{"s":"Move position and add string ","p":[{"t":"y","d":""},{"t":"x","d":""},{"t":"s","d":""}]},"ncurses_mvcur":{"s":"Move cursor immediately ","p":[{"t":"old_y","d":""},{"t":"old_x","d":""},{"t":"new_y","d":""},{"t":"new_x","d":""}]},"ncurses_mvdelch":{"s":"Move position and delete character, shift rest of line left ","p":[{"t":"y","d":""},{"t":"x","d":""}]},"ncurses_mvgetch":{"s":"Move position and get character at new position ","p":[{"t":"y","d":""},{"t":"x","d":""}]},"ncurses_mvhline":{"s":"Set new position and draw a horizontal line using an attributed character and max. n characters long ","p":[{"t":"y","d":""},{"t":"x","d":""},{"t":"attrchar","d":""},{"t":"n","d":""}]},"ncurses_mvinch":{"s":"Move position and get attributed character at new position ","p":[{"t":"y","d":""},{"t":"x","d":""}]},"ncurses_mvvline":{"s":"Set new position and draw a vertical line using an attributed character and max. n characters long ","p":[{"t":"y","d":""},{"t":"x","d":""},{"t":"attrchar","d":""},{"t":"n","d":""}]},"ncurses_mvwaddstr":{"s":"Add string at new position in window ","p":[{"t":"window","d":""},{"t":"y","d":""},{"t":"x","d":""},{"t":"text","d":""}]},"ncurses_napms":{"s":"Sleep","p":[{"t":"milliseconds","d":""}]},"ncurses_newpad":{"s":"Creates a new pad (window)","p":[{"t":"rows","d":""},{"t":"cols","d":""}]},"ncurses_newwin":{"s":"Create a new window","p":[{"t":"rows","d":"Number of rows"},{"t":"cols","d":"Number of columns"},{"t":"y","d":"y-coordinate of the origin"},{"t":"x","d":"x-coordinate of the origin"}]},"ncurses_new_panel":{"s":"Create a new panel and associate it with window","p":[{"t":"window","d":""}]},"ncurses_nl":{"s":"Translate newline and carriage return \/ line feed ","p":null},"ncurses_nocbreak":{"s":"Switch terminal to cooked mode ","p":null},"ncurses_noecho":{"s":"Switch off keyboard input echo ","p":null},"ncurses_nonl":{"s":"Do not translate newline and carriage return \/ line feed ","p":null},"ncurses_noqiflush":{"s":"Do not flush on signal characters","p":null},"ncurses_noraw":{"s":"Switch terminal out of raw mode ","p":null},"ncurses_pair_content":{"s":"Retrieves foreground and background colors of a color pair","p":[{"t":"pair","d":"The number of the color pair to retrieve information for."},{"t":"f","d":"A reference to which to return the foreground color of the color\n       pair. The information returned will be a color number referring to\n       one of the\n       pre-defined colors or a\n       color defined previously by\n       ncurses_init_color() if the terminal supports\n       color changing."},{"t":"b","d":"A reference to which to return the background color of the color\n       pair. The information returned will be a color number referring to\n       one of the\n       pre-defined colors or a\n       color defined previously by\n       ncurses_init_color() if the terminal supports\n       color changing."}]},"ncurses_panel_above":{"s":"Returns the panel above panel","p":[{"t":"panel","d":""}]},"ncurses_panel_below":{"s":"Returns the panel below panel","p":[{"t":"panel","d":""}]},"ncurses_panel_window":{"s":"Returns the window associated with panel","p":[{"t":"panel","d":""}]},"ncurses_pnoutrefresh":{"s":"Copies a region from a pad into the virtual screen","p":[{"t":"pad","d":""},{"t":"pminrow","d":""},{"t":"pmincol","d":""},{"t":"sminrow","d":""},{"t":"smincol","d":""},{"t":"smaxrow","d":""},{"t":"smaxcol","d":""}]},"ncurses_prefresh":{"s":"Copies a region from a pad into the virtual screen","p":[{"t":"pad","d":""},{"t":"pminrow","d":""},{"t":"pmincol","d":""},{"t":"sminrow","d":""},{"t":"smincol","d":""},{"t":"smaxrow","d":""},{"t":"smaxcol","d":""}]},"ncurses_putp":{"s":"Apply padding information to the string and output it","p":[{"t":"text","d":""}]},"ncurses_qiflush":{"s":"Flush on signal characters ","p":null},"ncurses_raw":{"s":"Switch terminal into raw mode ","p":null},"ncurses_refresh":{"s":"Refresh screen ","p":[{"t":"ch","d":""}]},"ncurses_replace_panel":{"s":"Replaces the window associated with panel","p":[{"t":"panel","d":""},{"t":"window","d":""}]},"ncurses_resetty":{"s":"Restores saved terminal state ","p":null},"ncurses_reset_prog_mode":{"s":"Resets the prog mode saved by def_prog_mode","p":null},"ncurses_reset_shell_mode":{"s":"Resets the shell mode saved by def_shell_mode","p":null},"ncurses_savetty":{"s":"Saves terminal state ","p":null},"ncurses_scrl":{"s":"Scroll window content up or down without changing current position ","p":[{"t":"count","d":""}]},"ncurses_scr_dump":{"s":"Dump screen content to file ","p":[{"t":"filename","d":""}]},"ncurses_scr_init":{"s":"Initialize screen from file dump ","p":[{"t":"filename","d":""}]},"ncurses_scr_restore":{"s":"Restore screen from file dump ","p":[{"t":"filename","d":""}]},"ncurses_scr_set":{"s":"Inherit screen from file dump ","p":[{"t":"filename","d":""}]},"ncurses_show_panel":{"s":"Places an invisible panel on top of the stack, making it visible","p":[{"t":"panel","d":""}]},"ncurses_slk_attr":{"s":"Returns current soft label key attribute","p":null},"ncurses_slk_attroff":{"s":"Turn off the given attributes for soft function-key labels","p":[{"t":"intarg","d":""}]},"ncurses_slk_attron":{"s":"Turn on the given attributes for soft function-key labels","p":[{"t":"intarg","d":""}]},"ncurses_slk_attrset":{"s":"Set given attributes for soft function-key labels","p":[{"t":"intarg","d":""}]},"ncurses_slk_clear":{"s":"Clears soft labels from screen","p":null},"ncurses_slk_color":{"s":"Sets color for soft label keys","p":[{"t":"intarg","d":""}]},"ncurses_slk_init":{"s":"Initializes soft label key functions","p":[{"t":"format","d":"If ncurses_init() eventually uses a line from\n       stdscr to emulate the soft labels, then this parameter determines how\n       the labels are arranged of the screen."}]},"ncurses_slk_noutrefresh":{"s":"Copies soft label keys to virtual screen","p":null},"ncurses_slk_refresh":{"s":"Copies soft label keys to screen","p":null},"ncurses_slk_restore":{"s":"Restores soft label keys","p":null},"ncurses_slk_set":{"s":"Sets function key labels","p":[{"t":"labelnr","d":""},{"t":"label","d":""},{"t":"format","d":""}]},"ncurses_slk_touch":{"s":"Forces output when ncurses_slk_noutrefresh is performed","p":null},"ncurses_standend":{"s":"Stop using &#039;standout&#039; attribute ","p":null},"ncurses_standout":{"s":"Start using &#039;standout&#039; attribute ","p":null},"ncurses_start_color":{"s":"Initializes color functionality","p":null},"ncurses_termattrs":{"s":"Returns a logical OR of all attribute flags supported by terminal ","p":null},"ncurses_termname":{"s":"Returns terminals (short)-name","p":null},"ncurses_timeout":{"s":"Set timeout for special key sequences ","p":[{"t":"millisec","d":""}]},"ncurses_top_panel":{"s":"Moves a visible panel to the top of the stack","p":[{"t":"panel","d":""}]},"ncurses_typeahead":{"s":"Specify different filedescriptor for typeahead checking ","p":[{"t":"fd","d":""}]},"ncurses_ungetch":{"s":"Put a character back into the input stream ","p":[{"t":"keycode","d":""}]},"ncurses_ungetmouse":{"s":"Pushes mouse event to queue","p":[{"t":"mevent","d":"An associative array specifying the event options:\n       \n        \n         &quot;id&quot; : Id to distinguish multiple devices"}]},"ncurses_update_panels":{"s":"Refreshes the virtual screen to reflect the relations between panels in the stack","p":null},"ncurses_use_default_colors":{"s":"Assign terminal default colors to color id -1 ","p":null},"ncurses_use_env":{"s":"Control use of environment information about terminal size ","p":[{"t":"flag","d":""}]},"ncurses_use_extended_names":{"s":"Control use of extended names in terminfo descriptions ","p":[{"t":"flag","d":""}]},"ncurses_vidattr":{"s":"Display the string on the terminal in the video attribute mode","p":[{"t":"intarg","d":""}]},"ncurses_vline":{"s":"Draw a vertical line at current position using an attributed character and max. n characters long ","p":[{"t":"charattr","d":""},{"t":"n","d":""}]},"ncurses_waddch":{"s":"Adds character at current position in a window and advance cursor","p":[{"t":"window","d":""},{"t":"ch","d":""}]},"ncurses_waddstr":{"s":"Outputs text at current postion in window","p":[{"t":"window","d":""},{"t":"str","d":""},{"t":"n","d":""}]},"ncurses_wattroff":{"s":"Turns off attributes for a window","p":[{"t":"window","d":""},{"t":"attrs","d":""}]},"ncurses_wattron":{"s":"Turns on attributes for a window","p":[{"t":"window","d":""},{"t":"attrs","d":""}]},"ncurses_wattrset":{"s":"Set the attributes for a window","p":[{"t":"window","d":""},{"t":"attrs","d":""}]},"ncurses_wborder":{"s":"Draws a border around the window using attributed characters","p":[{"t":"window","d":"The window on which we operate"},{"t":"left","d":""},{"t":"right","d":""},{"t":"top","d":""},{"t":"bottom","d":""},{"t":"tl_corner","d":"Top left corner"},{"t":"tr_corner","d":"Top right corner"},{"t":"bl_corner","d":"Bottom left corner"},{"t":"br_corner","d":"Bottom right corner"}]},"ncurses_wclear":{"s":"Clears window","p":[{"t":"window","d":""}]},"ncurses_wcolor_set":{"s":"Sets windows color pairings","p":[{"t":"window","d":""},{"t":"color_pair","d":""}]},"ncurses_werase":{"s":"Erase window contents","p":[{"t":"window","d":""}]},"ncurses_wgetch":{"s":"Reads a character from keyboard (window)","p":[{"t":"window","d":""}]},"ncurses_whline":{"s":"Draws a horizontal line in a window at current position using an attributed character and max. n characters long","p":[{"t":"window","d":""},{"t":"charattr","d":""},{"t":"n","d":""}]},"ncurses_wmouse_trafo":{"s":"Transforms window\/stdscr coordinates","p":[{"t":"window","d":""},{"t":"x","d":""},{"t":"y","d":""},{"t":"toscreen","d":""}]},"ncurses_wmove":{"s":"Moves windows output position","p":[{"t":"window","d":""},{"t":"y","d":""},{"t":"x","d":""}]},"ncurses_wnoutrefresh":{"s":"Copies window to virtual screen","p":[{"t":"window","d":""}]},"ncurses_wrefresh":{"s":"Refresh window on terminal screen ","p":[{"t":"window","d":""}]},"ncurses_wstandend":{"s":"End standout mode for a window","p":[{"t":"window","d":""}]},"ncurses_wstandout":{"s":"Enter standout mode for a window","p":[{"t":"window","d":""}]},"ncurses_wvline":{"s":"Draws a vertical line in a window at current position using an attributed character and max. n characters long","p":[{"t":"window","d":""},{"t":"charattr","d":""},{"t":"n","d":""}]},"newt_bell":{"s":"Send a beep to the terminal","p":null},"newt_button":{"s":"Create a new button","p":[{"t":"left","d":"X-coordinate of the button."},{"t":"top","d":"Y-coordinate of the button."},{"t":"text","d":"The text which should be displayed in the button."}]},"newt_button_bar":{"s":"This function returns a grid containing the buttons created.","p":[{"t":"buttons","d":""}]},"newt_centered_window":{"s":"Open a centered window of the specified size","p":[{"t":"width","d":"Window width"},{"t":"height","d":"Window height"},{"t":"title","d":"Window title"}]},"newt_checkbox":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"text","d":""},{"t":"def_value","d":""},{"t":"seq","d":""}]},"newt_checkbox_get_value":{"s":"Retreives value of checkox resource","p":[{"t":"checkbox","d":""}]},"newt_checkbox_set_flags":{"s":"Configures checkbox resource","p":[{"t":"checkbox","d":""},{"t":"flags","d":""},{"t":"sense","d":""}]},"newt_checkbox_set_value":{"s":"Sets the value of the checkbox","p":[{"t":"checkbox","d":""},{"t":"value","d":""}]},"newt_checkbox_tree":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"height","d":""},{"t":"flags","d":""}]},"newt_checkbox_tree_add_item":{"s":"Adds new item to the checkbox tree","p":[{"t":"checkboxtree","d":""},{"t":"text","d":""},{"t":"data","d":""},{"t":"flags","d":""},{"t":"index","d":""}]},"newt_checkbox_tree_find_item":{"s":"Finds an item in the checkbox tree","p":[{"t":"checkboxtree","d":""},{"t":"data","d":""}]},"newt_checkbox_tree_get_current":{"s":"Returns checkbox tree selected item","p":[{"t":"checkboxtree","d":""}]},"newt_checkbox_tree_get_entry_value":{"s":"","p":[{"t":"checkboxtree","d":""},{"t":"data","d":""}]},"newt_checkbox_tree_get_multi_selection":{"s":"","p":[{"t":"checkboxtree","d":""},{"t":"seqnum","d":""}]},"newt_checkbox_tree_get_selection":{"s":"","p":[{"t":"checkboxtree","d":""}]},"newt_checkbox_tree_multi":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"height","d":""},{"t":"seq","d":""},{"t":"flags","d":""}]},"newt_checkbox_tree_set_current":{"s":"","p":[{"t":"checkboxtree","d":""},{"t":"data","d":""}]},"newt_checkbox_tree_set_entry":{"s":"","p":[{"t":"checkboxtree","d":""},{"t":"data","d":""},{"t":"text","d":""}]},"newt_checkbox_tree_set_entry_value":{"s":"","p":[{"t":"checkboxtree","d":""},{"t":"data","d":""},{"t":"value","d":""}]},"newt_checkbox_tree_set_width":{"s":"","p":[{"t":"checkbox_tree","d":""},{"t":"width","d":""}]},"newt_compact_button":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"text","d":""}]},"newt_component_add_callback":{"s":"","p":[{"t":"component","d":""},{"t":"func_name","d":""},{"t":"data","d":""}]},"newt_component_takes_focus":{"s":"","p":[{"t":"component","d":""},{"t":"takes_focus","d":""}]},"newt_create_grid":{"s":"","p":[{"t":"cols","d":""},{"t":"rows","d":""}]},"newt_delay":{"s":"","p":[{"t":"microseconds","d":""}]},"newt_draw_form":{"s":"","p":[{"t":"form","d":""}]},"newt_draw_root_text":{"s":"Displays the string text at the position indicated","p":[{"t":"left","d":"Column number"},{"t":"top","d":"Line number"},{"t":"text","d":"Text to display."}]},"newt_entry":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"width","d":""},{"t":"init_value","d":""},{"t":"flags","d":""}]},"newt_entry_get_value":{"s":"","p":[{"t":"entry","d":""}]},"newt_entry_set":{"s":"","p":[{"t":"entry","d":""},{"t":"value","d":""},{"t":"cursor_at_end","d":""}]},"newt_entry_set_filter":{"s":"","p":[{"t":"entry","d":""},{"t":"filter","d":""},{"t":"data","d":""}]},"newt_entry_set_flags":{"s":"","p":[{"t":"entry","d":""},{"t":"flags","d":""},{"t":"sense","d":""}]},"newt_finished":{"s":"Uninitializes newt interface","p":null},"newt_form":{"s":"Create a form","p":[{"t":"vert_bar","d":"Vertical scrollbar which should be associated with the form"},{"t":"help","d":"Help text string"},{"t":"flags","d":"Various flags"}]},"newt_form_add_component":{"s":"Adds a single component to the form","p":[{"t":"form","d":"Form to which component will be added"},{"t":"component","d":"Component to add to the form"}]},"newt_form_add_components":{"s":"Add several components to the form","p":[{"t":"form","d":"Form to which components will be added"},{"t":"components","d":"Array of components to add to the form"}]},"newt_form_add_hot_key":{"s":"","p":[{"t":"form","d":""},{"t":"key","d":""}]},"newt_form_destroy":{"s":"Destroys a form","p":[{"t":"form","d":"Form component, which is going to be destroyed"}]},"newt_form_get_current":{"s":"","p":[{"t":"form","d":""}]},"newt_form_run":{"s":"Runs a form","p":[{"t":"form","d":"Form component"},{"t":"exit_struct","d":"Array, used for returning information after running the form component.\n       Keys and values are described in the following table:\n       \n        Form Exit Structure\n        \n         \n          \n           Index Key\n           Value Type\n           Description\n          \n\n         \n\n         \n          \n           reason\n           integer\n           \n            The reason, why the form has been exited. Possible values are\n            defined here.\n           \n          \n\n          \n           watch\n           resource\n           Resource link, specified in\n           newt_form_watch_fd()\n          \n\n          \n           key\n           integer\n           Hotkey\n          \n\n          \n           component\n           resource\n           Component, which caused the form to exit"}]},"newt_form_set_background":{"s":"","p":[{"t":"from","d":""},{"t":"background","d":""}]},"newt_form_set_height":{"s":"","p":[{"t":"form","d":""},{"t":"height","d":""}]},"newt_form_set_size":{"s":"","p":[{"t":"form","d":""}]},"newt_form_set_timer":{"s":"","p":[{"t":"form","d":""},{"t":"milliseconds","d":""}]},"newt_form_set_width":{"s":"","p":[{"t":"form","d":""},{"t":"width","d":""}]},"newt_form_watch_fd":{"s":"","p":[{"t":"form","d":""},{"t":"stream","d":""},{"t":"flags","d":""}]},"newt_get_screen_size":{"s":"","p":[{"t":"cols","d":"Number of columns in the terminal"},{"t":"rows","d":"Number of rows in the terminal"}]},"newt_grid_add_components_to_form":{"s":"","p":[{"t":"grid","d":""},{"t":"form","d":""},{"t":"recurse","d":""}]},"newt_grid_basic_window":{"s":"","p":[{"t":"text","d":""},{"t":"middle","d":""},{"t":"buttons","d":""}]},"newt_grid_free":{"s":"","p":[{"t":"grid","d":""},{"t":"recurse","d":""}]},"newt_grid_get_size":{"s":"","p":[{"t":"grid","d":""},{"t":"width","d":""},{"t":"height","d":""}]},"newt_grid_h_close_stacked":{"s":"","p":[{"t":"element1_type","d":""},{"t":"element1","d":""}]},"newt_grid_h_stacked":{"s":"","p":[{"t":"element1_type","d":""},{"t":"element1","d":""}]},"newt_grid_place":{"s":"","p":[{"t":"grid","d":""},{"t":"left","d":""},{"t":"top","d":""}]},"newt_grid_set_field":{"s":"","p":[{"t":"grid","d":""},{"t":"col","d":""},{"t":"row","d":""},{"t":"type","d":""},{"t":"val","d":""},{"t":"pad_left","d":""},{"t":"pad_top","d":""},{"t":"pad_right","d":""},{"t":"pad_bottom","d":""},{"t":"anchor","d":""},{"t":"flags","d":""}]},"newt_grid_simple_window":{"s":"","p":[{"t":"text","d":""},{"t":"middle","d":""},{"t":"buttons","d":""}]},"newt_grid_v_close_stacked":{"s":"","p":[{"t":"element1_type","d":""},{"t":"element1","d":""}]},"newt_grid_v_stacked":{"s":"","p":[{"t":"element1_type","d":""},{"t":"element1","d":""}]},"newt_grid_wrapped_window":{"s":"","p":[{"t":"grid","d":""},{"t":"title","d":""}]},"newt_grid_wrapped_window_at":{"s":"","p":[{"t":"grid","d":""},{"t":"title","d":""},{"t":"left","d":""},{"t":"top","d":""}]},"newt_init":{"s":"Initialize newt","p":null},"newt_label":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"text","d":""}]},"newt_label_set_text":{"s":"","p":[{"t":"label","d":""},{"t":"text","d":""}]},"newt_listbox":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"height","d":""},{"t":"flags","d":""}]},"newt_listbox_append_entry":{"s":"","p":[{"t":"listbox","d":""},{"t":"text","d":""},{"t":"data","d":""}]},"newt_listbox_clear":{"s":"","p":[{"t":"listobx","d":""}]},"newt_listbox_clear_selection":{"s":"","p":[{"t":"listbox","d":""}]},"newt_listbox_delete_entry":{"s":"","p":[{"t":"listbox","d":""},{"t":"key","d":""}]},"newt_listbox_get_current":{"s":"","p":[{"t":"listbox","d":""}]},"newt_listbox_get_selection":{"s":"","p":[{"t":"listbox","d":""}]},"newt_listbox_insert_entry":{"s":"","p":[{"t":"listbox","d":""},{"t":"text","d":""},{"t":"data","d":""},{"t":"key","d":""}]},"newt_listbox_item_count":{"s":"","p":[{"t":"listbox","d":""}]},"newt_listbox_select_item":{"s":"","p":[{"t":"listbox","d":""},{"t":"key","d":""},{"t":"sense","d":""}]},"newt_listbox_set_current":{"s":"","p":[{"t":"listbox","d":""},{"t":"num","d":""}]},"newt_listbox_set_current_by_key":{"s":"","p":[{"t":"listbox","d":""},{"t":"key","d":""}]},"newt_listbox_set_data":{"s":"","p":[{"t":"listbox","d":""},{"t":"num","d":""},{"t":"data","d":""}]},"newt_listbox_set_entry":{"s":"","p":[{"t":"listbox","d":""},{"t":"num","d":""},{"t":"text","d":""}]},"newt_listbox_set_width":{"s":"","p":[{"t":"listbox","d":""},{"t":"width","d":""}]},"newt_listitem":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"text","d":""},{"t":"is_default","d":""},{"t":"prev_item","d":""},{"t":"data","d":""},{"t":"flags","d":""}]},"newt_listitem_get_data":{"s":"","p":[{"t":"item","d":""}]},"newt_listitem_set":{"s":"","p":[{"t":"item","d":""},{"t":"text","d":""}]},"newt_open_window":{"s":"Open a window of the specified size and position","p":[{"t":"left","d":"Location of the upper left-hand corner of the window (column number)"},{"t":"top","d":"Location of the upper left-hand corner of the window (row number)"},{"t":"width","d":"Window width"},{"t":"height","d":"Window height"},{"t":"title","d":"Window title"}]},"newt_pop_help_line":{"s":"Replaces the current help line with the one from the stack","p":null},"newt_pop_window":{"s":"Removes the top window from the display","p":null},"newt_push_help_line":{"s":"Saves the current help line on a stack, and displays the new line","p":[{"t":"text","d":"New help text message"}]},"newt_radiobutton":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"text","d":""},{"t":"is_default","d":""},{"t":"prev_button","d":""}]},"newt_radio_get_current":{"s":"","p":[{"t":"set_member","d":""}]},"newt_reflow_text":{"s":"","p":[{"t":"text","d":""},{"t":"width","d":""},{"t":"flex_down","d":""},{"t":"flex_up","d":""},{"t":"actual_width","d":""},{"t":"actual_height","d":""}]},"newt_refresh":{"s":"Updates modified portions of the screen","p":null},"newt_resize_screen":{"s":"","p":[{"t":"redraw","d":""}]},"newt_run_form":{"s":"Runs a form","p":[{"t":"form","d":"Form component"}]},"newt_scale":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"width","d":""},{"t":"full_value","d":""}]},"newt_scale_set":{"s":"","p":[{"t":"scale","d":""},{"t":"amount","d":""}]},"newt_scrollbar_set":{"s":"","p":[{"t":"scrollbar","d":""},{"t":"where","d":""},{"t":"total","d":""}]},"newt_set_help_callback":{"s":"","p":[{"t":"function","d":""}]},"newt_set_suspend_callback":{"s":"","p":[{"t":"function","d":"A callback function, which accepts one argument: data"},{"t":"data","d":"This data is been passed to the callback function"}]},"newt_suspend":{"s":"Tells newt to return the terminal to its initial state","p":null},"newt_textbox":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"width","d":""},{"t":"height","d":""},{"t":"flags","d":""}]},"newt_textbox_get_num_lines":{"s":"","p":[{"t":"textbox","d":""}]},"newt_textbox_reflowed":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"*text","d":""},{"t":"width","d":""},{"t":"flex_down","d":""},{"t":"flex_up","d":""},{"t":"flags","d":""}]},"newt_textbox_set_height":{"s":"","p":[{"t":"textbox","d":""},{"t":"height","d":""}]},"newt_textbox_set_text":{"s":"","p":[{"t":"textbox","d":""},{"t":"text","d":""}]},"newt_vertical_scrollbar":{"s":"","p":[{"t":"left","d":""},{"t":"top","d":""},{"t":"height","d":""},{"t":"normal_colorset","d":""},{"t":"thumb_colorset","d":""}]},"newt_wait_for_key":{"s":"Doesn&#039;t return until a key has been pressed","p":null},"newt_win_choice":{"s":"","p":[{"t":"title","d":""},{"t":"button1_text","d":""},{"t":"button2_text","d":""},{"t":"format","d":""},{"t":"args","d":""}]},"newt_win_entries":{"s":"","p":[{"t":"title","d":""},{"t":"text","d":""},{"t":"suggested_width","d":""},{"t":"flex_down","d":""},{"t":"flex_up","d":""},{"t":"data_width","d":""},{"t":"items","d":""},{"t":"button1","d":""},{"t":"button2","d":""}]},"newt_win_menu":{"s":"","p":[{"t":"title","d":""},{"t":"text","d":""},{"t":"suggestedWidth","d":""},{"t":"flexDown","d":""},{"t":"flexUp","d":""},{"t":"maxListHeight","d":""},{"t":"items","d":""},{"t":"listItem","d":""},{"t":"button1","d":""}]},"newt_win_message":{"s":"","p":[{"t":"title","d":""},{"t":"button_text","d":""},{"t":"format","d":""},{"t":"args","d":""}]},"newt_win_messagev":{"s":"","p":[{"t":"title","d":""},{"t":"button_text","d":""},{"t":"format","d":""},{"t":"args","d":""}]},"newt_win_ternary":{"s":"","p":[{"t":"title","d":"Its description"},{"t":"button1_text","d":"Its description"},{"t":"button2_text","d":"Its description"},{"t":"button3_text","d":"Its description"},{"t":"format","d":"Its description"},{"t":"args","d":"Its description"}]},"next":{"s":"Advance the internal array pointer of an array","p":[{"t":"array","d":"The array being affected."}]},"ngettext":{"s":"Plural version of gettext","p":[{"t":"msgid1","d":""},{"t":"msgid2","d":""},{"t":"n","d":""}]},"nl2br":{"s":"Inserts HTML line breaks before all newlines in a string","p":[{"t":"string","d":"The input string."},{"t":"is_xhtml","d":"Whether to use XHTML compatible line breaks or not."}]},"nl_langinfo":{"s":"Query language and locale information","p":[{"t":"item","d":"item may be an integer value of the element or the\n       constant name of the element. The following is a list of constant names\n       for item that may be used and their description.\n       Some of these constants may not be defined or hold no value for certain\n       locales.\n       \n        nl_langinfo Constants\n        \n         \n         \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           LC_TIME Category Constants\n          \n\n          \n           ABDAY_(1-7)\n           Abbreviated name of n-th day of the week.\n          \n\n          \n           DAY_(1-7)\n           Name of the n-th day of the week (DAY_1 = Sunday).\n          \n\n          \n           ABMON_(1-12)\n           Abbreviated name of the n-th month of the year.\n          \n\n          \n           MON_(1-12)\n           Name of the n-th month of the year.\n          \n\n          \n           AM_STR\n           String for Ante meridian.\n          \n\n          \n           PM_STR\n           String for Post meridian.\n          \n\n          \n           D_T_FMT\n           String that can be used as the format string for strftime() to represent time and date.\n          \n\n          \n           D_FMT\n           String that can be used as the format string for strftime() to represent date.\n          \n\n          \n           T_FMT\n           String that can be used as the format string for strftime() to represent time.\n          \n\n          \n           T_FMT_AMPM\n           String that can be used as the format string for strftime() to represent time in 12-hour format with ante\/post meridian.\n          \n\n          \n           ERA\n           Alternate era.\n          \n\n          \n           ERA_YEAR\n           Year in alternate era format.\n          \n\n          \n           ERA_D_T_FMT\n           Date and time in alternate era format (string can be used in strftime()).\n          \n\n          \n           ERA_D_FMT\n           Date in alternate era format (string can be used in strftime()).\n          \n\n          \n           ERA_T_FMT\n           Time in alternate era format (string can be used in strftime()).\n          \n\n          \n           LC_MONETARY Category Constants\n          \n\n          \n           INT_CURR_SYMBOL\n           International currency symbol.\n          \n\n          \n           CURRENCY_SYMBOL\n           Local currency symbol.\n          \n\n          \n           CRNCYSTR\n           Same value as CURRENCY_SYMBOL.\n          \n\n          \n           MON_DECIMAL_POINT\n           Decimal point character.\n          \n\n          \n           MON_THOUSANDS_SEP\n           Thousands separator (groups of three digits).\n          \n\n          \n           MON_GROUPING\n           Like &quot;grouping&quot; element.\n          \n\n          \n           POSITIVE_SIGN\n           Sign for positive values.\n          \n\n          \n           NEGATIVE_SIGN\n           Sign for negative values.\n          \n\n          \n           INT_FRAC_DIGITS\n           International fractional digits.\n          \n\n          \n           FRAC_DIGITS\n           Local fractional digits.\n          \n\n          \n           P_CS_PRECEDES\n           Returns 1 if CURRENCY_SYMBOL precedes a positive value.\n          \n\n          \n           P_SEP_BY_SPACE\n           Returns 1 if a space separates CURRENCY_SYMBOL from a positive value.\n          \n\n          \n           N_CS_PRECEDES\n           Returns 1 if CURRENCY_SYMBOL precedes a negative value.\n          \n\n          \n           N_SEP_BY_SPACE\n           Returns 1 if a space separates CURRENCY_SYMBOL from a negative value.\n          \n\n          \n           P_SIGN_POSN\n           \n            \n             \n              \n                Returns 0 if parentheses surround the quantity and CURRENCY_SYMBOL.\n              \n             \n             \n              \n               Returns 1 if the sign string precedes the quantity and CURRENCY_SYMBOL.\n              \n             \n             \n              \n               Returns 2 if the sign string follows the quantity and CURRENCY_SYMBOL.\n              \n             \n             \n              \n               Returns 3 if the sign string immediately precedes the CURRENCY_SYMBOL.\n              \n             \n             \n              \n               Returns 4 if the sign string immediately follows the CURRENCY_SYMBOL.\n              \n             \n            \n           \n          \n\n          \n           N_SIGN_POSN\n          \n\n          \n           LC_NUMERIC Category Constants\n          \n\n          \n           DECIMAL_POINT\n           Decimal point character.\n          \n\n          \n           RADIXCHAR\n           Same value as DECIMAL_POINT.\n          \n\n          \n           THOUSANDS_SEP\n           Separator character for thousands (groups of three digits).\n          \n\n          \n           THOUSEP\n           Same value as THOUSANDS_SEP.\n          \n\n          \n           GROUPING\n           &nbsp;\n          \n\n          \n           LC_MESSAGES Category Constants\n          \n\n          \n           YESEXPR\n           Regex string for matching &quot;yes&quot; input.\n          \n\n          \n           NOEXPR\n           Regex string for matching &quot;no&quot; input.\n          \n\n          \n           YESSTR\n           Output string for &quot;yes&quot;.\n          \n\n          \n           NOSTR\n           Output string for &quot;no&quot;.\n          \n\n          \n           LC_CTYPE Category Constants\n          \n\n          \n           CODESET\n           Return a string with the name of the character encoding."}]},"notes_body":{"s":"Open the message msg_number in the specified mailbox on the specified server (leave serv","p":null},"notes_copy_db":{"s":"Copy a Lotus Notes database","p":null},"notes_create_db":{"s":"Create a Lotus Notes database","p":null},"notes_create_note":{"s":"Create a note using form form_name","p":null},"notes_drop_db":{"s":"Drop a Lotus Notes database","p":null},"notes_find_note":{"s":"Returns a note id found in database_name","p":null},"notes_header_info":{"s":"Open the message msg_number in the specified mailbox on the specified server (leave serv","p":null},"notes_list_msgs":{"s":"Returns the notes from a selected database_name","p":null},"notes_mark_read":{"s":"Mark a note_id as read for the User user_name","p":null},"notes_mark_unread":{"s":"Mark a note_id as unread for the User user_name","p":null},"notes_nav_create":{"s":"Create a navigator name, in database_name","p":null},"notes_search":{"s":"Find notes that match keywords in database_name","p":null},"notes_unread":{"s":"Returns the unread note id&#039;s for the current User user_name","p":null},"notes_version":{"s":"Get the version Lotus Notes","p":null},"nsapi_request_headers":{"s":"Fetch all HTTP request headers","p":null},"nsapi_virtual":{"s":"Perform an NSAPI sub-request","p":[{"t":"uri","d":"The URI of the script."}]},"nthmac":{"s":"Obtain a nthmac key (needs 2 arguments)","p":null},"number_format":{"s":"Format a number with grouped thousands","p":[{"t":"number","d":"The number being formatted."},{"t":"decimals","d":"Sets the number of decimal points."},{"t":"dec_point","d":"Sets the separator for the decimal point."},{"t":"thousands_sep","d":"Sets the thousands separator."}]},"ob_clean":{"s":"Clean (erase) the output buffer","p":null},"ob_deflatehandler":{"s":"Deflate output handler","p":null},"ob_end_clean":{"s":"Clean (erase) the output buffer and turn off output buffering","p":null},"ob_end_flush":{"s":"Flush (send) the output buffer and turn off output buffering","p":null},"ob_etaghandler":{"s":"ETag output handler","p":null},"ob_flush":{"s":"Flush (send) the output buffer","p":null},"ob_get_clean":{"s":"Get current buffer contents and delete current output buffer","p":null},"ob_get_contents":{"s":"Return the contents of the output buffer","p":null},"ob_get_flush":{"s":"Flush the output buffer, return it as a string and turn off output buffering","p":null},"ob_get_length":{"s":"Return the length of the output buffer","p":null},"ob_get_level":{"s":"Return the nesting level of the output buffering mechanism","p":null},"ob_get_status":{"s":"Get status of output buffers","p":[{"t":"full_status","d":"TRUE to return all active output buffer levels. If FALSE or not\n       set, only the top level output buffer is returned."}]},"ob_gzhandler":{"s":"ob_start callback function to gzip output buffer","p":[{"t":"buffer","d":""},{"t":"mode","d":""}]},"ob_iconv_handler":{"s":"Convert character encoding as output buffer handler","p":null},"ob_implicit_flush":{"s":"Turn implicit flush on\/off","p":[{"t":"flag","d":"TRUE to turn implicit flushing on, FALSE otherwise."}]},"ob_inflatehandler":{"s":"Inflate output handler","p":null},"ob_list_handlers":{"s":"List all output handlers in use","p":null},"ob_start":{"s":"Turn on output buffering","p":[{"t":"output_callback","d":"An optional output_callback function may be\n       specified. This function takes a string as a parameter and should\n       return a string. The function will be called when\n       the output buffer is flushed (sent) or cleaned (with\n       ob_flush(), ob_clean() or similar\n       function) or when the output buffer\n       is flushed to the browser at the end of the request.  When\n       output_callback is called, it will receive the\n       contents of the output buffer as its parameter and is expected to\n       return a new output buffer as a result, which will be sent to the\n       browser. If the output_callback is not a\n       callable function, this function will return FALSE.\n       This is the callback signature:"}]},"ob_tidyhandler":{"s":"ob_start callback function to repair the buffer","p":[{"t":"input","d":"The buffer."},{"t":"mode","d":"The buffer mode."}]},"ocibindbyname":{"s":"Alias of oci_bind_by_name()","p":null},"ocicancel":{"s":"Alias of oci_cancel()","p":null},"ocicloselob":{"s":"Alias of OCI-Lob::close()","p":null},"ocicollappend":{"s":"Alias of OCI-Collection::append()","p":null},"ocicollassign":{"s":"Alias of OCI-Collection::assign()","p":null},"ocicollassignelem":{"s":"Alias of OCI-Collection::assignElem()","p":null},"ocicollgetelem":{"s":"Alias of OCI-Collection::getElem()","p":null},"ocicollmax":{"s":"Alias of OCI-Collection::max()","p":null},"ocicollsize":{"s":"Alias of OCI-Collection::size()","p":null},"ocicolltrim":{"s":"Alias of OCI-Collection::trim()","p":null},"ocicolumnisnull":{"s":"Alias of oci_field_is_null()","p":null},"ocicolumnname":{"s":"Alias of oci_field_name()","p":null},"ocicolumnprecision":{"s":"Alias of oci_field_precision()","p":null},"ocicolumnscale":{"s":"Alias of oci_field_scale()","p":null},"ocicolumnsize":{"s":"Alias of oci_field_size()","p":null},"ocicolumntype":{"s":"Alias of oci_field_type()","p":null},"ocicolumntyperaw":{"s":"Alias of oci_field_type_raw()","p":null},"ocicommit":{"s":"Alias of oci_commit()","p":null},"ocidefinebyname":{"s":"Alias of oci_define_by_name()","p":null},"ocierror":{"s":"Alias of oci_error()","p":null},"ociexecute":{"s":"Alias of oci_execute()","p":null},"ocifetch":{"s":"Alias of oci_fetch()","p":null},"ocifetchinto":{"s":"Obsolete variant of oci_fetch_array()","p":null},"ocifetchstatement":{"s":"Alias of oci_fetch_all()","p":null},"ocifreecollection":{"s":"Alias of OCI-Collection::free()","p":null},"ocifreecursor":{"s":"Alias of oci_free_statement()","p":null},"ocifreedesc":{"s":"Alias of OCI-Lob::free()","p":null},"ocifreestatement":{"s":"Alias of oci_free_statement()","p":null},"ociinternaldebug":{"s":"Alias of oci_internal_debug()","p":null},"ociloadlob":{"s":"Alias of OCI-Lob::load()","p":null},"ocilogoff":{"s":"Alias of oci_close()","p":null},"ocilogon":{"s":"Alias of oci_connect()","p":null},"ocinewcollection":{"s":"Alias of oci_new_collection()","p":null},"ocinewcursor":{"s":"Alias of oci_new_cursor()","p":null},"ocinewdescriptor":{"s":"Alias of oci_new_descriptor()","p":null},"ocinlogon":{"s":"Alias of oci_new_connect()","p":null},"ocinumcols":{"s":"Alias of oci_num_fields()","p":null},"ociparse":{"s":"Alias of oci_parse()","p":null},"ociplogon":{"s":"Alias of oci_pconnect()","p":null},"ociresult":{"s":"Alias of oci_result()","p":null},"ocirollback":{"s":"Alias of oci_rollback()","p":null},"ocirowcount":{"s":"Alias of oci_num_rows()","p":null},"ocisavelob":{"s":"Alias of OCI-Lob::save()","p":null},"ocisavelobfile":{"s":"Alias of OCI-Lob::import()","p":null},"ociserverversion":{"s":"Alias of oci_server_version()","p":null},"ocisetprefetch":{"s":"Alias of oci_set_prefetch()","p":null},"ocistatementtype":{"s":"Alias of oci_statement_type()","p":null},"ociwritelobtofile":{"s":"Alias of OCI-Lob::export()","p":null},"ociwritetemporarylob":{"s":"Alias of OCI-Lob::writeTemporary()","p":null},"oci_bind_array_by_name":{"s":"Binds a PHP array to an Oracle PL\/SQL array parameter","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"name","d":"The Oracle placeholder."},{"t":"var_array","d":"An array."},{"t":"max_table_length","d":"Sets the maximum length both for incoming and result arrays."},{"t":"max_item_length","d":"Sets maximum length for array items. If not specified or equals to -1,\n       oci_bind_array_by_name() will find the longest\n       element in the incoming array and will use it as the maximum length."},{"t":"type","d":"Should be used to set the type of PL\/SQL array items. See list of\n       available types below:"}]},"oci_bind_by_name":{"s":"Binds a PHP variable to an Oracle placeholder","p":[{"t":"statement","d":"A valid OCI8 statement identifer."},{"t":"bv_name","d":"The colon-prefixed bind variable placeholder used in the\n       statement.  The colon is optional\n       in bv_name. Oracle does not use question\n       marks for placeholders."},{"t":"variable","d":"The PHP variable to be associated with bv_name"},{"t":"maxlength","d":"Sets the maximum length for the data. If you set it to -1, this\n       function will use the current length\n       of variable to set the maximum\n       length. In this case the variable must\n       exist and contain data\n       when oci_bind_by_name() is called."},{"t":"type","d":"The datatype that Oracle will treat the data as.  The\n       default type used\n       is SQLT_CHR. Oracle will convert the data\n       between this type and the database column (or PL\/SQL variable\n       type), when possible."}]},"oci_cancel":{"s":"Cancels reading from cursor","p":[{"t":"statement","d":"An OCI statement."}]},"oci_client_version":{"s":"Returns the Oracle client library version","p":null},"oci_close":{"s":"Closes an Oracle connection","p":[{"t":"connection","d":"An Oracle connection identifier returned by \n       oci_connect(), oci_pconnect(),\n       or oci_new_connect()."}]},"oci_commit":{"s":"Commits the outstanding database transaction","p":[{"t":"connection","d":"An Oracle connection identifier, returned by\n       oci_connect(), oci_pconnect(), or oci_new_connect()."}]},"oci_connect":{"s":"Connect to an Oracle database","p":[{"t":"username","d":"The Oracle user name."},{"t":"password","d":"The password for username."},{"t":"connection_string","d":"Contains\nthe Oracle instance to connect to. It can be\nan &raquo;&nbsp;Easy Connect\nstring, or a Connect Name from\nthe tnsnames.ora file, or the name of a local\nOracle instance."},{"t":"character_set","d":"Determines\nthe character set used by the Oracle Client libraries.  The character\nset does not need to match the character set used by the database.  If\nit doesn&#039;t match, Oracle will do its best to convert data to and from\nthe database character set.  Depending on the character sets this may\nnot give usable results.  Conversion also adds some time overhead."},{"t":"session_mode","d":"This\nparameter is available since version PHP 5 (PECL OCI8 1.1) and accepts the\nfollowing values: OCI_DEFAULT,\nOCI_SYSOPER and OCI_SYSDBA.\nIf either OCI_SYSOPER or\nOCI_SYSDBA were specified, this function will try\nto establish privileged connection using external credentials.\nPrivileged connections are disabled by default. To enable them you\nneed to set oci8.privileged_connect\nto On."}]},"oci_define_by_name":{"s":"Associates a PHP variable with a column for query fetches","p":[{"t":"statement","d":"A valid OCI8 statement\nidentifier created by oci_parse() and executed\nby oci_execute(), or a REF\nCURSOR statement identifier."},{"t":"column_name","d":"The column name used in the query."},{"t":"variable","d":"The PHP variable that will contain the returned column value."},{"t":"type","d":"The data type to be returned.  Generally not needed.  Note that\n        Oracle-style data conversions are not performed.  For example,\n        SQLT_INT will be ignored and the returned\n        data type will still be SQLT_CHR."}]},"oci_error":{"s":"Returns the last error found","p":[{"t":"resource","d":"For most errors, resource is the\n       resource handle that was passed to the failing function call.\n       For connection errors with oci_connect(),\n       oci_new_connect() or \n       oci_pconnect() do not pass resource."}]},"oci_execute":{"s":"Executes a statement","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"mode","d":"An optional second parameter can be one of the following constants:\n       \n        Execution Modes\n        \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           OCI_COMMIT_ON_SUCCESS\n           Automatically commit all outstanding changes for\n             this connection when the statement has succeeded. This\n             is the default.\n          \n\n          \n           OCI_DESCRIBE_ONLY\n           Make query meta data available to functions\n             like oci_field_name() but do not\n             create a result set. Any subsequent fetch call such\n             as oci_fetch_array() will\n             fail.\n          \n\n          \n           OCI_NO_AUTO_COMMIT\n           Do not automatically commit changes.  Prior to PHP\n             5.3.2 (PECL OCI8 1.4)\n             use OCI_DEFAULT which is equivalent\n             to OCI_NO_AUTO_COMMIT."}]},"oci_fetch":{"s":"Fetches the next row from a query into internal buffers","p":[{"t":"statement","d":"A valid OCI8 statement\nidentifier created by oci_parse() and executed\nby oci_execute(), or a REF\nCURSOR statement identifier."}]},"oci_fetch_all":{"s":"Fetches multiple rows from a query into a two-dimensional array","p":[{"t":"statement","d":"A valid OCI8 statement\nidentifier created by oci_parse() and executed\nby oci_execute(), or a REF\nCURSOR statement identifier."},{"t":"output","d":"The variable to contain the returned rows."},{"t":"skip","d":"The number of initial rows to discard when fetching the\n       result. The default value is 0, so the first row onwards is\n       returned."},{"t":"maxrows","d":"The number of rows to return.  The default is -1 meaning return\n       all the rows from skip + 1 onwards."},{"t":"flags","d":"Parameter flags indicates the array\n       structure and whether associative arrays should be used.\n       \n        oci_fetch_all() Array Structure Modes\n        \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           OCI_FETCHSTATEMENT_BY_ROW\n           The outer array will contain one sub-array per query\n           row.\n          \n\n          \n           OCI_FETCHSTATEMENT_BY_COLUMN\n           The outer array will contain one sub-array per query\n           column. This is the default."}]},"oci_fetch_array":{"s":"","p":[{"t":"statement","d":"A valid OCI8 statement\nidentifier created by oci_parse() and executed\nby oci_execute(), or a REF\nCURSOR statement identifier."},{"t":"mode","d":"An optional second parameter can be any combination of the following\n       constants:\n       \n        oci_fetch_array() Modes\n        \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           OCI_BOTH\n           Returns an array with both associative and numeric\n            indices. This is the same\n            as OCI_ASSOC\n            + OCI_NUM and is the default\n            behavior.\n          \n\n          \n           OCI_ASSOC\n           Returns an associative array.\n          \n\n          \n           OCI_NUM\n           Returns a numeric array.\n          \n\n          \n           OCI_RETURN_NULLS\n           Creates elements for NULL fields.  The element\n             values will be a PHP NULL.\n           \n          \n\n          \n           OCI_RETURN_LOBS\n           Returns the contents of LOBs instead of the LOB\n             descriptors."}]},"oci_fetch_assoc":{"s":"Returns the next row from a query as an associative array","p":[{"t":"statement","d":"A valid OCI8 statement\nidentifier created by oci_parse() and executed\nby oci_execute(), or a REF\nCURSOR statement identifier."}]},"oci_fetch_object":{"s":"Returns the next row from a query as an object","p":[{"t":"statement","d":"A valid OCI8 statement\nidentifier created by oci_parse() and executed\nby oci_execute(), or a REF\nCURSOR statement identifier."}]},"oci_fetch_row":{"s":"Returns the next row from a query as a numeric array","p":[{"t":"statement","d":"A valid OCI8 statement\nidentifier created by oci_parse() and executed\nby oci_execute(), or a REF\nCURSOR statement identifier."}]},"oci_field_is_null":{"s":"Checks if the field is NULL","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"field","d":"Can be a field&#039;s index or a field&#039;s name (uppercased)."}]},"oci_field_name":{"s":"Returns the name of a field from the statement","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"field","d":"Can be the field&#039;s index (1-based) or name."}]},"oci_field_precision":{"s":"Tell the precision of a field","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"field","d":"Can be the field&#039;s index (1-based) or name."}]},"oci_field_scale":{"s":"Tell the scale of the field","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"field","d":"Can be the field&#039;s index (1-based) or name."}]},"oci_field_size":{"s":"Returns field&#039;s size","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"field","d":"Can be the field&#039;s index (1-based) or name."}]},"oci_field_type":{"s":"Returns field&#039;s data type","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"field","d":"Can be the field&#039;s index (1-based) or name."}]},"oci_field_type_raw":{"s":"Tell the raw Oracle data type of the field","p":[{"t":"statement","d":"A valid OCI statement identifier."},{"t":"field","d":"Can be the field&#039;s index (1-based) or name."}]},"oci_free_descriptor":{"s":"Frees a descriptor","p":null},"oci_free_statement":{"s":"Frees all resources associated with statement or cursor","p":[{"t":"statement","d":"A valid OCI statement identifier."}]},"oci_get_implicit_resultset":{"s":"","p":[{"t":"statement","d":"A valid OCI8 statement identifier created\n         by oci_parse() and executed\n         by oci_execute().  The statement\n         identifier may or may not be associated with a SQL statement\n         that returns Implicit Result Sets."}]},"oci_internal_debug":{"s":"Enables or disables internal debug output","p":[{"t":"onoff","d":"Set this to FALSE to turn debug output off or TRUE to turn it on."}]},"oci_lob_copy":{"s":"Copies large object","p":[{"t":"lob_to","d":"The destination LOB."},{"t":"lob_from","d":"The copied LOB."},{"t":"length","d":"Indicates the length of data to be copied."}]},"oci_lob_is_equal":{"s":"Compares two LOB\/FILE locators for equality","p":[{"t":"lob1","d":"A LOB identifier."},{"t":"lob2","d":"A LOB identifier."}]},"oci_new_collection":{"s":"Allocates new collection object","p":[{"t":"connection","d":"An Oracle connection identifier, returned by \n       oci_connect() or oci_pconnect()."},{"t":"tdo","d":"Should be a valid named type (uppercase)."},{"t":"schema","d":"Should point to the scheme, where the named type was created. The name\n       of the current user is the default value."}]},"oci_new_connect":{"s":"Connect to the Oracle server using a unique connection","p":[{"t":"username","d":"The Oracle user name."},{"t":"password","d":"The password for username."},{"t":"connection_string","d":"Contains\nthe Oracle instance to connect to. It can be\nan &raquo;&nbsp;Easy Connect\nstring, or a Connect Name from\nthe tnsnames.ora file, or the name of a local\nOracle instance."},{"t":"character_set","d":"Determines\nthe character set used by the Oracle Client libraries.  The character\nset does not need to match the character set used by the database.  If\nit doesn&#039;t match, Oracle will do its best to convert data to and from\nthe database character set.  Depending on the character sets this may\nnot give usable results.  Conversion also adds some time overhead."},{"t":"session_mode","d":"This\nparameter is available since version PHP 5 (PECL OCI8 1.1) and accepts the\nfollowing values: OCI_DEFAULT,\nOCI_SYSOPER and OCI_SYSDBA.\nIf either OCI_SYSOPER or\nOCI_SYSDBA were specified, this function will try\nto establish privileged connection using external credentials.\nPrivileged connections are disabled by default. To enable them you\nneed to set oci8.privileged_connect\nto On."}]},"oci_new_cursor":{"s":"Allocates and returns a new cursor (statement handle)","p":[{"t":"connection","d":"An Oracle connection identifier, returned by \n       oci_connect() or oci_pconnect()."}]},"oci_new_descriptor":{"s":"Initializes a new empty LOB or FILE descriptor","p":[{"t":"connection","d":"An Oracle connection identifier, returned by \n       oci_connect() or oci_pconnect()."},{"t":"type","d":"Valid values for type are: \n       OCI_DTYPE_FILE, OCI_DTYPE_LOB and\n       OCI_DTYPE_ROWID."}]},"oci_num_fields":{"s":"Returns the number of result columns in a statement","p":[{"t":"statement","d":"A valid OCI statement identifier."}]},"oci_num_rows":{"s":"Returns number of rows affected during statement execution","p":[{"t":"statement","d":"A valid OCI statement identifier."}]},"oci_parse":{"s":"Prepares an Oracle statement for execution","p":[{"t":"connection","d":"An Oracle connection identifier, returned by \n       oci_connect(), oci_pconnect(), or oci_new_connect()."},{"t":"sql_text","d":"The SQL or PL\/SQL statement."}]},"oci_password_change":{"s":"Changes password of Oracle&#039;s user","p":[{"t":"connection","d":"An Oracle connection identifier, returned by \n       oci_connect() or oci_pconnect()."},{"t":"username","d":"The Oracle user name."},{"t":"old_password","d":"The old password."},{"t":"new_password","d":"The new password to be set."},{"t":"dbname","d":"The database name."}]},"oci_pconnect":{"s":"Connect to an Oracle database using a persistent connection","p":[{"t":"username","d":"The Oracle user name."},{"t":"password","d":"The password for username."},{"t":"connection_string","d":"Contains\nthe Oracle instance to connect to. It can be\nan &raquo;&nbsp;Easy Connect\nstring, or a Connect Name from\nthe tnsnames.ora file, or the name of a local\nOracle instance."},{"t":"character_set","d":"Determines\nthe character set used by the Oracle Client libraries.  The character\nset does not need to match the character set used by the database.  If\nit doesn&#039;t match, Oracle will do its best to convert data to and from\nthe database character set.  Depending on the character sets this may\nnot give usable results.  Conversion also adds some time overhead."},{"t":"session_mode","d":"This\nparameter is available since version PHP 5 (PECL OCI8 1.1) and accepts the\nfollowing values: OCI_DEFAULT,\nOCI_SYSOPER and OCI_SYSDBA.\nIf either OCI_SYSOPER or\nOCI_SYSDBA were specified, this function will try\nto establish privileged connection using external credentials.\nPrivileged connections are disabled by default. To enable them you\nneed to set oci8.privileged_connect\nto On."}]},"oci_result":{"s":"Returns field&#039;s value from the fetched row","p":[{"t":"statement","d":""},{"t":"field","d":"Can be either use the column number (1-based) or the column name.\n       The case of the column name must be the case that Oracle meta data\n       describes the column as, which is uppercase for columns created\n       case insensitively."}]},"oci_rollback":{"s":"Rolls back the outstanding database transaction","p":[{"t":"connection","d":"An Oracle connection identifier, returned by\n       oci_connect(), oci_pconnect()\n       or oci_new_connect()."}]},"oci_server_version":{"s":"Returns the Oracle Database version","p":[{"t":"connection","d":""}]},"oci_set_action":{"s":"Sets the action name","p":[{"t":"connection","d":"An Oracle connection identifier,\nreturned by oci_connect(), oci_pconnect(),\nor oci_new_connect()."},{"t":"action_name","d":"User chosen string up to 32 bytes long."}]},"oci_set_client_identifier":{"s":"Sets the client identifier","p":[{"t":"connection","d":"An Oracle connection identifier,\nreturned by oci_connect(), oci_pconnect(),\nor oci_new_connect()."},{"t":"client_identifier","d":"User chosen string up to 64 bytes long."}]},"oci_set_client_info":{"s":"Sets the client information","p":[{"t":"connection","d":"An Oracle connection identifier,\nreturned by oci_connect(), oci_pconnect(),\nor oci_new_connect()."},{"t":"client_info","d":"User chosen string up to 64 bytes long."}]},"oci_set_edition":{"s":"Sets the database edition","p":[{"t":"edition","d":"Oracle Database edition name previously created with the SQL\n       &quot;CREATE EDITION&quot; command."}]},"oci_set_module_name":{"s":"Sets the module name","p":[{"t":"connection","d":"An Oracle connection identifier,\nreturned by oci_connect(), oci_pconnect(),\nor oci_new_connect()."},{"t":"module_name","d":"User chosen string up to 48 bytes long."}]},"oci_set_prefetch":{"s":"Sets number of rows to be prefetched by queries","p":[{"t":"statement","d":"A valid OCI8 statement\nidentifier created by oci_parse() and executed\nby oci_execute(), or a REF\nCURSOR statement identifier."},{"t":"rows","d":"The number of rows to be prefetched, &gt;= 0"}]},"oci_statement_type":{"s":"Returns the type of a statement","p":[{"t":"statement","d":"A valid OCI8 statement identifier from oci_parse()."}]},"octdec":{"s":"Octal to decimal","p":[{"t":"octal_string","d":"The octal string to convert"}]},"odbc_autocommit":{"s":"Toggle autocommit behaviour","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"OnOff","d":"If OnOff is TRUE, auto-commit is enabled, if\n       it is FALSE auto-commit is disabled."}]},"odbc_binmode":{"s":"Handling of binary column data","p":[{"t":"result_id","d":"The result identifier."},{"t":"mode","d":"Possible values for mode are:\n       \n        \n         \n          ODBC_BINMODE_PASSTHRU: Passthru BINARY data\n         \n        \n        \n         \n          ODBC_BINMODE_RETURN: Return as is\n         \n        \n        \n         \n          ODBC_BINMODE_CONVERT: Convert to char and return"}]},"odbc_close":{"s":"Close an ODBC connection","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."}]},"odbc_close_all":{"s":"Close all ODBC connections","p":null},"odbc_columnprivileges":{"s":"Lists columns and associated privileges for the given table","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"qualifier","d":"The qualifier."},{"t":"owner","d":"The owner."},{"t":"table_name","d":"The table name."},{"t":"column_name","d":"The column_name argument accepts search\n       patterns (&#039;%&#039; to match zero or more characters and &#039;_&#039; to match a\n       single character)."}]},"odbc_columns":{"s":"Lists the column names in specified tables","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"qualifier","d":"The qualifier."},{"t":"schema","d":"The owner."},{"t":"table_name","d":"The table name."},{"t":"column_name","d":"The column name."}]},"odbc_commit":{"s":"Commit an ODBC transaction","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."}]},"odbc_connect":{"s":"Connect to a datasource","p":[{"t":"dsn","d":"The database source name for the connection. Alternatively, a\n       DSN-less connection string can be used."},{"t":"user","d":"The username."},{"t":"password","d":"The password."},{"t":"cursor_type","d":"This sets the type of cursor to be used\n       for this connection. This parameter is not normally needed, but\n       can be useful for working around problems with some ODBC drivers."}]},"odbc_cursor":{"s":"Get cursorname","p":[{"t":"result_id","d":"The result identifier."}]},"odbc_data_source":{"s":"Returns information about a current connection","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"fetch_type","d":"The fetch_type can be one of two constant types:\n       SQL_FETCH_FIRST, SQL_FETCH_NEXT.\n       Use SQL_FETCH_FIRST the first time this function is\n       called, thereafter use the SQL_FETCH_NEXT."}]},"odbc_do":{"s":"Alias of odbc_exec()","p":null},"odbc_error":{"s":"Get the last error code","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."}]},"odbc_errormsg":{"s":"Get the last error message","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."}]},"odbc_exec":{"s":"Prepare and execute an SQL statement","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"query_string","d":"The SQL statement."},{"t":"flags","d":"This parameter is currently not used."}]},"odbc_execute":{"s":"Execute a prepared statement","p":[{"t":"result_id","d":"The result id resource, from odbc_prepare()."},{"t":"parameters_array","d":"Parameters in parameter_array will be\n       substituted for placeholders in the prepared statement in order.\n       Elements of this array will be converted to strings by calling this\n       function."}]},"odbc_fetch_array":{"s":"Fetch a result row as an associative array","p":[{"t":"result","d":"The result resource from odbc_exec()."},{"t":"rownumber","d":"Optionally choose which row number to retrieve."}]},"odbc_fetch_into":{"s":"Fetch one result row into array","p":[{"t":"result_id","d":"The result resource."},{"t":"result_array","d":"The result array\n       that can be of any type since it will be converted to type\n       array. The array will contain the column values starting at array\n       index 0."},{"t":"rownumber","d":"The row number."}]},"odbc_fetch_object":{"s":"Fetch a result row as an object","p":[{"t":"result","d":"The result resource from odbc_exec()."},{"t":"rownumber","d":"Optionally choose which row number to retrieve."}]},"odbc_fetch_row":{"s":"Fetch a row","p":[{"t":"result_id","d":"The result identifier."},{"t":"row_number","d":"If row_number is not specified,\n       odbc_fetch_row() will try to fetch the next row in\n       the result set. Calls to odbc_fetch_row() with and\n       without row_number can be mixed."}]},"odbc_field_len":{"s":"Get the length (precision) of a field","p":[{"t":"result_id","d":"The result identifier."},{"t":"field_number","d":"The field number. Field numbering starts at 1."}]},"odbc_field_name":{"s":"Get the columnname","p":[{"t":"result_id","d":"The result identifier."},{"t":"field_number","d":"The field number. Field numbering starts at 1."}]},"odbc_field_num":{"s":"Return column number","p":[{"t":"result_id","d":"The result identifier."},{"t":"field_name","d":"The field name."}]},"odbc_field_precision":{"s":"Alias of odbc_field_len()","p":null},"odbc_field_scale":{"s":"Get the scale of a field","p":[{"t":"result_id","d":"The result identifier."},{"t":"field_number","d":"The field number. Field numbering starts at 1."}]},"odbc_field_type":{"s":"Datatype of a field","p":[{"t":"result_id","d":"The result identifier."},{"t":"field_number","d":"The field number. Field numbering starts at 1."}]},"odbc_foreignkeys":{"s":"Retrieves a list of foreign keys","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"pk_qualifier","d":"The primary key qualifier."},{"t":"pk_owner","d":"The primary key owner."},{"t":"pk_table","d":"The primary key table."},{"t":"fk_qualifier","d":"The foreign key qualifier."},{"t":"fk_owner","d":"The foreign key owner."},{"t":"fk_table","d":"The foreign key table."}]},"odbc_free_result":{"s":"Free resources associated with a result","p":[{"t":"result_id","d":"The result identifier."}]},"odbc_gettypeinfo":{"s":"Retrieves information about data types supported by the data source","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"data_type","d":"The data type, which can be used to restrict the information to a\n       single data type."}]},"odbc_longreadlen":{"s":"Handling of LONG columns","p":[{"t":"result_id","d":"The result identifier."},{"t":"length","d":"The number of bytes returned to PHP is controlled by the parameter\n       length. If it is set to 0, Long column data is passed through to the\n       client."}]},"odbc_next_result":{"s":"Checks if multiple results are available","p":[{"t":"result_id","d":"The result identifier."}]},"odbc_num_fields":{"s":"Number of columns in a result","p":[{"t":"result_id","d":"The result identifier returned by odbc_exec()."}]},"odbc_num_rows":{"s":"Number of rows in a result","p":[{"t":"result_id","d":"The result identifier returned by odbc_exec()."}]},"odbc_pconnect":{"s":"Open a persistent database connection","p":null},"odbc_prepare":{"s":"Prepares a statement for execution","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"query_string","d":"The query string statement being prepared."}]},"odbc_primarykeys":{"s":"Gets the primary keys for a table","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"qualifier","d":""},{"t":"owner","d":""},{"t":"table","d":""}]},"odbc_procedurecolumns":{"s":"Retrieve information about parameters to procedures","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"qualifier","d":"The qualifier."},{"t":"owner","d":"The owner.\n       This parameter accepts the following search patterns:\n&quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character."},{"t":"proc","d":"The proc.\n       This parameter accepts the following search patterns:\n&quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character."},{"t":"column","d":"The column.\n       This parameter accepts the following search patterns:\n&quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character."}]},"odbc_procedures":{"s":"Get the list of procedures stored in a specific data source","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"qualifier","d":"The qualifier."},{"t":"owner","d":"The owner.\n       This parameter accepts the following search patterns:\n&quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character."},{"t":"name","d":"The name.\n       This parameter accepts the following search patterns:\n&quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character."}]},"odbc_result":{"s":"Get result data","p":[{"t":"result_id","d":"The ODBC resource."},{"t":"field","d":"The field name being retrieved. It can either be an integer containing\n       the column number of the field you want; or it can be a string\n       containing the name of the field."}]},"odbc_result_all":{"s":"Print result as HTML table","p":[{"t":"result_id","d":"The result identifier."},{"t":"format","d":"Additional overall table formatting."}]},"odbc_rollback":{"s":"Rollback a transaction","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."}]},"odbc_setoption":{"s":"Adjust ODBC settings","p":[{"t":"id","d":"Is a connection id or result id on which to change the settings.\n       For SQLSetConnectOption(), this is a connection id.\n       For SQLSetStmtOption(), this is a result id."},{"t":"function","d":"Is the ODBC function to use. The value should be\n       1 for SQLSetConnectOption() and\n       2 for SQLSetStmtOption()."},{"t":"option","d":"The option to set."},{"t":"param","d":"The value for the given option."}]},"odbc_specialcolumns":{"s":"Retrieves special columns","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"type","d":""},{"t":"qualifier","d":"The qualifier."},{"t":"owner","d":"The owner."},{"t":"table","d":"The table."},{"t":"scope","d":"The scope, which orders the result set."},{"t":"nullable","d":"The nullable option."}]},"odbc_statistics":{"s":"Retrieve statistics about a table","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"qualifier","d":"The qualifier."},{"t":"owner","d":"The owner."},{"t":"table_name","d":"The table name."},{"t":"unique","d":"The unique attribute."},{"t":"accuracy","d":"The accuracy."}]},"odbc_tableprivileges":{"s":"Lists tables and the privileges associated with each table","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"qualifier","d":"The qualifier."},{"t":"owner","d":"The owner. Accepts the following search patterns:\n       (&#039;%&#039; to match zero or more characters and &#039;_&#039; to match a single character)"},{"t":"name","d":"The name. Accepts the following search patterns:\n       (&#039;%&#039; to match zero or more characters and &#039;_&#039; to match a single character)"}]},"odbc_tables":{"s":"Get the list of table names stored in a specific data source","p":[{"t":"connection_id","d":"The ODBC connection identifier,\nsee odbc_connect() for details."},{"t":"qualifier","d":"The qualifier."},{"t":"owner","d":"The owner. Accepts search patterns (&#039;%&#039; to match zero or more\n       characters and &#039;_&#039; to match a single character)."},{"t":"name","d":"The name. Accepts search patterns (&#039;%&#039; to match zero or more\n       characters and &#039;_&#039; to match a single character)."},{"t":"types","d":"If table_type is not an empty string, it\n       must contain a list of comma-separated values for the types of\n       interest; each value may be enclosed in single quotes (&#039;) or\n       unquoted. For example, &quot;&#039;TABLE&#039;,&#039;VIEW&#039;&quot; or &quot;TABLE, VIEW&quot;.  If the\n       data source does not support a specified table type,\n       odbc_tables() does not return any results for\n       that type."}]},"opcache_compile_file":{"s":"Compiles and caches a PHP script without executing it","p":[{"t":"file","d":"The path to the PHP script to be compiled."}]},"opcache_get_configuration":{"s":"Get configuration information about the cache","p":null},"opcache_get_status":{"s":"Get status information about the cache","p":[{"t":"get_scripts","d":"Include script specific state information"}]},"opcache_invalidate":{"s":"Invalidates a cached script","p":[{"t":"script","d":"The path to the script being invalidated."},{"t":"force","d":"If set to TRUE, the script will be invalidated regardless of whether\n      invalidation is necessary."}]},"opcache_reset":{"s":"Resets the contents of the opcode cache","p":null},"openal_buffer_data":{"s":"","p":[{"t":"buffer","d":"An Open AL(Buffer) resource\n      (previously created by openal_buffer_create())."},{"t":"format","d":"Format of data, one of: \n      AL_FORMAT_MONO8,\n      AL_FORMAT_MONO16,\n      AL_FORMAT_STEREO8 and\n      AL_FORMAT_STEREO16"},{"t":"data","d":"Block of binary audio data in the format and\n      freq specified."},{"t":"freq","d":"Frequency of data given in Hz."}]},"openal_buffer_destroy":{"s":"","p":[{"t":"buffer","d":"An Open AL(Buffer) resource\n      (previously created by openal_buffer_create())."}]},"openal_buffer_get":{"s":"","p":[{"t":"buffer","d":"An Open AL(Buffer) resource\n      (previously created by openal_buffer_create())."},{"t":"property","d":"Specific property, one of:\n      AL_FREQUENCY,\n      AL_BITS,\n      AL_CHANNELS and\n      AL_SIZE."}]},"openal_buffer_loadwav":{"s":"","p":[{"t":"buffer","d":"An Open AL(Buffer) resource\n      (previously created by openal_buffer_create())."},{"t":"wavfile","d":"Path to .wav file on\n      local file system."}]},"openal_context_create":{"s":"","p":[{"t":"device","d":"An Open AL(Device) resource\n      (previously created by openal_device_open())."}]},"openal_context_current":{"s":"","p":[{"t":"context","d":"An Open AL(Context) resource\n      (previously created by openal_context_create())."}]},"openal_context_destroy":{"s":"","p":[{"t":"context","d":"An Open AL(Context) resource\n      (previously created by openal_context_create())."}]},"openal_context_process":{"s":"","p":[{"t":"context","d":"An Open AL(Context) resource\n      (previously created by openal_context_create())."}]},"openal_context_suspend":{"s":"","p":[{"t":"context","d":"An Open AL(Context) resource\n      (previously created by openal_context_create())."}]},"openal_device_close":{"s":"","p":[{"t":"device","d":"An Open AL(Device) resource\n      (previously created by openal_device_open())\n      to be closed."}]},"openal_device_open":{"s":"","p":[{"t":"device_desc","d":"Open an audio device optionally specified by device_desc.\n      If device_desc is not specified the first available audio\n      device will be used."}]},"openal_listener_get":{"s":"","p":[{"t":"property","d":"Property to retrieve, one of:\n      AL_GAIN (float),\n      AL_POSITION (array(float,float,float)),\n      AL_VELOCITY (array(float,float,float)) and\n      AL_ORIENTATION (array(float,float,float))."}]},"openal_listener_set":{"s":"","p":[{"t":"property","d":"Property to set, one of:\n      AL_GAIN (float),\n      AL_POSITION (array(float,float,float)),\n      AL_VELOCITY (array(float,float,float)) and\n      AL_ORIENTATION (array(float,float,float))."},{"t":"setting","d":"Value to set, either float, or an array of floats as appropriate."}]},"openal_source_destroy":{"s":"","p":[{"t":"source","d":"An Open AL(Source) resource\n      (previously created by openal_source_create())."}]},"openal_source_get":{"s":"","p":[{"t":"source","d":"An Open AL(Source) resource\n      (previously created by openal_source_create())."},{"t":"property","d":"Property to get, one of:\n      AL_SOURCE_RELATIVE (int),\n      AL_SOURCE_STATE (int),\n      AL_PITCH (float),\n      AL_GAIN (float),\n      AL_MIN_GAIN (float),\n      AL_MAX_GAIN (float),\n      AL_MAX_DISTANCE (float),\n      AL_ROLLOFF_FACTOR (float),\n      AL_CONE_OUTER_GAIN (float),\n      AL_CONE_INNER_ANGLE (float),\n      AL_CONE_OUTER_ANGLE (float),\n      AL_REFERENCE_DISTANCE (float),\n      AL_POSITION (array(float,float,float)),\n      AL_VELOCITY (array(float,float,float)),\n      AL_DIRECTION (array(float,float,float))."}]},"openal_source_pause":{"s":"","p":[{"t":"source","d":"An Open AL(Source) resource\n      (previously created by openal_source_create())."}]},"openal_source_play":{"s":"","p":[{"t":"source","d":"An Open AL(Source) resource\n      (previously created by openal_source_create())."}]},"openal_source_rewind":{"s":"","p":[{"t":"source","d":"An Open AL(Source) resource\n      (previously created by openal_source_create())."}]},"openal_source_set":{"s":"","p":[{"t":"source","d":"An Open AL(Source) resource\n      (previously created by openal_source_create())."},{"t":"property","d":"Property to set, one of:\n      AL_BUFFER (OpenAL(Source)),\n      AL_LOOPING (bool),\n      AL_SOURCE_RELATIVE (int),\n      AL_SOURCE_STATE (int),\n      AL_PITCH (float),\n      AL_GAIN (float),\n      AL_MIN_GAIN (float),\n      AL_MAX_GAIN (float),\n      AL_MAX_DISTANCE (float),\n      AL_ROLLOFF_FACTOR (float),\n      AL_CONE_OUTER_GAIN (float),\n      AL_CONE_INNER_ANGLE (float),\n      AL_CONE_OUTER_ANGLE (float),\n      AL_REFERENCE_DISTANCE (float),\n      AL_POSITION (array(float,float,float)),\n      AL_VELOCITY (array(float,float,float)),\n      AL_DIRECTION (array(float,float,float))."},{"t":"setting","d":"Value to assign to specified property.\n      Refer to the description of property\n      for a description of the value(s) expected."}]},"openal_source_stop":{"s":"","p":[{"t":"source","d":"An Open AL(Source) resource\n      (previously created by openal_source_create())."}]},"openal_stream":{"s":"","p":[{"t":"source","d":"An Open AL(Source) resource\n      (previously created by openal_source_create())."},{"t":"format","d":"Format of data, one of:\n      AL_FORMAT_MONO8,\n      AL_FORMAT_MONO16,\n      AL_FORMAT_STEREO8 and\n      AL_FORMAT_STEREO16"},{"t":"rate","d":"Frequency of data to stream given in Hz."}]},"opendir":{"s":"Open directory handle","p":[{"t":"path","d":"The directory path that is to be opened"},{"t":"context","d":"For a description of the context parameter, \n       refer to the streams section of\n       the manual."}]},"openlog":{"s":"Open connection to system logger","p":[{"t":"ident","d":"The string ident is added to each message."},{"t":"option","d":"The option argument is used to indicate\n       what logging options will be used when generating a log message.\n       \n        openlog() Options\n        \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           LOG_CONS\n           \n            if there is an error while sending data to the system logger,\n            write directly to the system console\n           \n          \n\n          \n           LOG_NDELAY\n           \n            open the connection to the logger immediately\n           \n          \n\n          \n           LOG_ODELAY\n           \n            (default) delay opening the connection until the first\n            message is logged\n           \n          \n\n          \n           LOG_PERROR\n           print log message also to standard error\n          \n\n          \n           LOG_PID\n           include PID with each message\n          \n\n         \n        \n       \n\n       You can use one or more of this options. When using multiple options\n       you need to OR them, i.e. to open the connection\n       immediately, write to the console and include the PID in each message,\n       you will use: LOG_CONS | LOG_NDELAY | LOG_PID"},{"t":"facility","d":"The facility argument is used to specify what\n       type of program is logging the message. This allows you to specify\n       (in your machine&#039;s syslog configuration) how messages coming from\n       different facilities will be handled.\n       \n        openlog() Facilities\n        \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           LOG_AUTH\n           \n            security\/authorization messages (use \n            LOG_AUTHPRIV instead\n            in systems where that constant is defined)\n           \n          \n\n          \n           LOG_AUTHPRIV\n           security\/authorization messages (private)\n          \n\n          \n           LOG_CRON\n           clock daemon (cron and at)\n          \n\n          \n           LOG_DAEMON\n           other system daemons\n          \n\n          \n           LOG_KERN\n           kernel messages\n          \n\n          \n           LOG_LOCAL0 ... LOG_LOCAL7\n           reserved for local use, these are not available in Windows\n          \n\n          \n           LOG_LPR\n           line printer subsystem\n          \n\n          \n           LOG_MAIL\n           mail subsystem\n          \n\n          \n           LOG_NEWS\n           USENET news subsystem\n          \n\n          \n           LOG_SYSLOG\n           messages generated internally by syslogd\n          \n\n          \n           LOG_USER\n           generic user-level messages\n          \n\n          \n           LOG_UUCP\n           UUCP subsystem"}]},"openssl_cipher_iv_length":{"s":"Gets the cipher iv length","p":[{"t":"method","d":"The method."}]},"openssl_csr_export":{"s":"Exports a CSR as a string","p":[{"t":"csr","d":""},{"t":"out","d":""},{"t":"notext","d":"The optional parameter notext affects\n the verbosity of the output; if it is FALSE, then additional human-readable\n information is included in the output. The default value of\n notext is TRUE."}]},"openssl_csr_export_to_file":{"s":"Exports a CSR to a file","p":[{"t":"csr","d":""},{"t":"outfilename","d":"Path to the output file."},{"t":"notext","d":"The optional parameter notext affects\n the verbosity of the output; if it is FALSE, then additional human-readable\n information is included in the output. The default value of\n notext is TRUE."}]},"openssl_csr_get_public_key":{"s":"Returns the public key of a CERT","p":null},"openssl_csr_get_subject":{"s":"Returns the subject of a CERT","p":null},"openssl_csr_new":{"s":"Generates a CSR","p":[{"t":"dn","d":"The Distinguished Name to be used in the certificate."},{"t":"privkey","d":"privkey should be set to a private key that was\n       previously generated by openssl_pkey_new() (or\n       otherwise obtained from the other openssl_pkey family of functions).\n       The corresponding public portion of the key will be used to sign the\n       CSR."},{"t":"configargs","d":"By default, the information in your system openssl.conf\n       is used to initialize the request; you can specify a configuration file\n       section by setting the config_section_section key of\n       configargs.  You can also specify an alternative\n       openssl configuration file by setting the value of the\n       config key to the path of the file you want to use.\n       The following keys, if present in configargs\n       behave as their equivalents in the openssl.conf, as\n       listed in the table below.\n       \n        Configuration overrides\n        \n         \n          \n           configargs key\n           type\n           openssl.conf equivalent\n           description\n          \n\n         \n\n         \n          \n           digest_alg\n           string\n           default_md\n           Selects which digest method to use\n          \n\n          \n           x509_extensions\n           string\n           x509_extensions\n           Selects which extensions should be used when creating an x509\n           certificate\n          \n\n          \n           req_extensions\n           string\n           req_extensions\n           Selects which extensions should be used when creating a CSR\n          \n\n          \n           private_key_bits\n           integer\n           default_bits\n           Specifies how many bits should be used to generate a private\n            key\n          \n\n          \n           private_key_type\n           integer\n           none\n           Specifies the type of private key to create.  This can be one\n            of OPENSSL_KEYTYPE_DSA,\n            OPENSSL_KEYTYPE_DH or\n            OPENSSL_KEYTYPE_RSA.\n            The default value is OPENSSL_KEYTYPE_RSA which\n            is currently the only supported key type.\n           \n          \n\n          \n           encrypt_key\n           boolean\n           encrypt_key\n           Should an exported key (with passphrase) be encrypted?\n          \n\n          \n           encrypt_key_cipher\n           integer\n           none\n           \n            One of cipher constants."},{"t":"extraattribs","d":"extraattribs is used to specify additional\n       configuration options for the CSR.  Both dn and\n       extraattribs are associative arrays whose keys are\n       converted to OIDs and applied to the relevant part of the request."}]},"openssl_csr_sign":{"s":"Sign a CSR with another certificate (or itself) and generate a certificate","p":[{"t":"csr","d":"A CSR previously generated by openssl_csr_new().\n       It can also be the path to a PEM encoded CSR when specified as\n       file:\/\/path\/to\/csr or an exported string generated\n       by openssl_csr_export()."},{"t":"cacert","d":"The generated certificate will be signed by cacert.\n       If cacert is NULL, the generated certificate\n       will be a self-signed certificate."},{"t":"priv_key","d":"priv_key is the private key that corresponds to\n       cacert."},{"t":"days","d":"days specifies the length of time for which the\n       generated certificate will be valid, in days."},{"t":"configargs","d":"You can finetune the CSR signing by configargs.\n       See openssl_csr_new() for more information about\n       configargs."},{"t":"serial","d":"An optional the serial number of issued certificate. If not specified\n       it will default to 0."}]},"openssl_decrypt":{"s":"Decrypts data","p":[{"t":"data","d":"The data."},{"t":"method","d":"The cipher method."},{"t":"password","d":"The password."},{"t":"options","d":"options can be one of\n        OPENSSL_RAW_DATA,\n        OPENSSL_ZERO_PADDING."},{"t":"iv","d":"A non-NULL Initialization Vector."}]},"openssl_dh_compute_key":{"s":"Computes shared secret for public value of remote DH key and local DH key","p":[{"t":"pub_key","d":"Public key"},{"t":"dh_key","d":"DH key"}]},"openssl_digest":{"s":"Computes a digest","p":[{"t":"data","d":"The data."},{"t":"method","d":"The digest method."},{"t":"raw_output","d":"Setting to TRUE will return as raw output data, otherwise the return\n       value is binhex encoded."}]},"openssl_encrypt":{"s":"Encrypts data","p":[{"t":"data","d":"The data."},{"t":"method","d":"The cipher method."},{"t":"password","d":"The password."},{"t":"options","d":"options can be one of\n          OPENSSL_RAW_DATA,\n          OPENSSL_ZERO_PADDING."},{"t":"iv","d":"A non-NULL Initialization Vector."}]},"openssl_error_string":{"s":"Return openSSL error message","p":null},"openssl_free_key":{"s":"Free key resource","p":[{"t":"key_identifier","d":""}]},"openssl_get_cipher_methods":{"s":"Gets available cipher methods","p":[{"t":"aliases","d":"Set to TRUE if cipher aliases should be included within the\n       returned array."}]},"openssl_get_md_methods":{"s":"Gets available digest methods","p":[{"t":"aliases","d":"Set to TRUE if digest aliases should be included within the\n       returned array."}]},"openssl_get_privatekey":{"s":"Alias of openssl_pkey_get_private()","p":null},"openssl_get_publickey":{"s":"Alias of openssl_pkey_get_public()","p":null},"openssl_open":{"s":"Open sealed data","p":[{"t":"sealed_data","d":""},{"t":"open_data","d":"If the call is successful the opened data is returned in this\n       parameter."},{"t":"env_key","d":""},{"t":"priv_key_id","d":""}]},"openssl_pbkdf2":{"s":"Generates a PKCS5 v2 PBKDF2 string, defaults to SHA-1","p":[{"t":"password","d":""},{"t":"salt","d":""},{"t":"key_length","d":""},{"t":"iterations","d":""},{"t":"digest_algorithm","d":""}]},"openssl_pkcs12_export":{"s":"Exports a PKCS#12 Compatible Certificate Store File to variable.","p":[{"t":"x509","d":"See Key\/Certificate parameters for a list of valid values."},{"t":"out","d":"On success, this will hold the PKCS#12."},{"t":"priv_key","d":"Private key component of PKCS#12 file."},{"t":"pass","d":"Encryption password for unlocking the PKCS#12 file."},{"t":"args","d":""}]},"openssl_pkcs12_export_to_file":{"s":"Exports a PKCS#12 Compatible Certificate Store File","p":[{"t":"x509","d":"See Key\/Certificate parameters for a list of valid values."},{"t":"filename","d":"Path to the output file."},{"t":"priv_key","d":"Private key component of PKCS#12 file."},{"t":"pass","d":"Encryption password for unlocking the PKCS#12 file."},{"t":"args","d":""}]},"openssl_pkcs12_read":{"s":"Parse a PKCS#12 Certificate Store into an array","p":[{"t":"pkcs12","d":""},{"t":"certs","d":"On success, this will hold the Certificate Store Data."},{"t":"pass","d":"Encryption password for unlocking the PKCS#12 file."}]},"openssl_pkcs7_decrypt":{"s":"Decrypts an S\/MIME encrypted message","p":[{"t":"infilename","d":""},{"t":"outfilename","d":"The decrypted message is written to the file specified by\n       outfilename."},{"t":"recipcert","d":""},{"t":"recipkey","d":""}]},"openssl_pkcs7_encrypt":{"s":"Encrypt an S\/MIME message","p":[{"t":"infile","d":""},{"t":"outfile","d":""},{"t":"recipcerts","d":"Either a lone X.509 certificate, or an array of X.509 certificates."},{"t":"headers","d":"headers is an array of headers that\n       will be prepended to the data after it has been encrypted."},{"t":"flags","d":"flags can be used to specify options that affect\n       the encoding process - see PKCS7\n       constants."},{"t":"cipherid","d":"One of cipher constants."}]},"openssl_pkcs7_sign":{"s":"Sign an S\/MIME message","p":[{"t":"infilename","d":""},{"t":"outfilename","d":""},{"t":"signcert","d":""},{"t":"privkey","d":""},{"t":"headers","d":"headers is an array of headers that\n       will be prepended to the data after it has been signed (see\n       openssl_pkcs7_encrypt() for more information about\n       the format of this parameter)."},{"t":"flags","d":"flags can be used to alter the output - see PKCS7 constants."},{"t":"extracerts","d":"extracerts specifies the name of a file containing\n       a bunch of extra certificates to include in the signature which can for\n       example be used to help the recipient to verify the certificate that you used."}]},"openssl_pkcs7_verify":{"s":"Verifies the signature of an S\/MIME signed message","p":[{"t":"filename","d":"Path to the message."},{"t":"flags","d":"flags can be used to affect how the signature is\n       verified - see PKCS7 constants\n       for more information."},{"t":"outfilename","d":"If the outfilename is specified, it should be a\n       string holding the name of a file into which the certificates of the\n       persons that signed the messages will be stored in PEM format."},{"t":"cainfo","d":"If the cainfo is specified, it should hold\n       information about the trusted CA certificates to use in the verification\n       process - see certificate\n       verification for more information about this parameter."},{"t":"extracerts","d":"If the extracerts is specified, it is the filename\n       of a file containing a bunch of certificates to use as untrusted CAs."},{"t":"content","d":"You can specify a filename with content that will\n       be filled with the verified data, but with the signature information\n       stripped."}]},"openssl_pkey_export":{"s":"Gets an exportable representation of a key into a string","p":[{"t":"key","d":""},{"t":"out","d":""},{"t":"passphrase","d":"The key is optionally protected by passphrase."},{"t":"configargs","d":"configargs can be used to fine-tune the export\n       process by specifying and\/or overriding options for the openssl\n       configuration file.  See openssl_csr_new() for more\n       information about configargs."}]},"openssl_pkey_export_to_file":{"s":"Gets an exportable representation of a key into a file ","p":[{"t":"key","d":""},{"t":"outfilename","d":"Path to the output file."},{"t":"passphrase","d":"The key can be optionally protected by a\n       passphrase."},{"t":"configargs","d":"configargs can be used to fine-tune the export\n       process by specifying and\/or overriding options for the openssl\n       configuration file. See openssl_csr_new() for more\n       information about configargs."}]},"openssl_pkey_free":{"s":"Frees a private key","p":[{"t":"key","d":"Resource holding the key."}]},"openssl_pkey_get_details":{"s":"Returns an array with the key details","p":[{"t":"key","d":"Resource holding the key."}]},"openssl_pkey_get_private":{"s":"Get a private key","p":[{"t":"key","d":"key can be one of the following:\n       \n        a string having the format\n          file:\/\/path\/to\/file.pem. The named file must\n          contain a PEM encoded certificate\/private key (it may contain both).\n         \n        \n        A PEM formatted private key."},{"t":"passphrase","d":"The optional parameter passphrase must be used\n       if the specified key is encrypted (protected by a passphrase)."}]},"openssl_pkey_get_public":{"s":"Extract public key from certificate and prepare it for use","p":[{"t":"certificate","d":"certificate can be one of the following:\n       \n        an X.509 certificate resource\n        a string having the format\n          file:\/\/path\/to\/file.pem. The named file must\n          contain a PEM encoded certificate\/public key (it may contain both).\n         \n        \n        A PEM formatted public key."}]},"openssl_pkey_new":{"s":"Generates a new private key ","p":[{"t":"configargs","d":"You can finetune the key generation (such as specifying the number of\n       bits) using configargs.  See\n       openssl_csr_new() for more information about\n       configargs."}]},"openssl_private_decrypt":{"s":"Decrypts data with private key ","p":[{"t":"data","d":""},{"t":"decrypted","d":""},{"t":"key","d":"key must be the private key corresponding that\n       was used to encrypt the data."},{"t":"padding","d":"padding can be one of\n       OPENSSL_PKCS1_PADDING,\n       OPENSSL_SSLV23_PADDING,\n       OPENSSL_PKCS1_OAEP_PADDING,\n       OPENSSL_NO_PADDING."}]},"openssl_private_encrypt":{"s":"Encrypts data with private key ","p":[{"t":"data","d":""},{"t":"crypted","d":""},{"t":"key","d":""},{"t":"padding","d":"padding can be one of\n       OPENSSL_PKCS1_PADDING,\n       OPENSSL_NO_PADDING."}]},"openssl_public_decrypt":{"s":"Decrypts data with public key ","p":[{"t":"data","d":""},{"t":"decrypted","d":""},{"t":"key","d":"key must be the public key corresponding that\n       was used to encrypt the data."},{"t":"padding","d":"padding can be one of\n       OPENSSL_PKCS1_PADDING,\n       OPENSSL_NO_PADDING."}]},"openssl_public_encrypt":{"s":"Encrypts data with public key ","p":[{"t":"data","d":""},{"t":"crypted","d":"This will hold the result of the encryption."},{"t":"key","d":"The public key."},{"t":"padding","d":"padding can be one of\n       OPENSSL_PKCS1_PADDING,\n       OPENSSL_SSLV23_PADDING,\n       OPENSSL_PKCS1_OAEP_PADDING,\n       OPENSSL_NO_PADDING."}]},"openssl_random_pseudo_bytes":{"s":"Generate a pseudo-random string of bytes","p":[{"t":"length","d":"The length of the desired string of bytes. Must be a positive integer. PHP will\n       try to cast this parameter to a non-null integer to use it."},{"t":"crypto_strong","d":"If passed into the function, this will hold a boolean value that determines\n       if the algorithm used was &quot;cryptographically strong&quot;, e.g., safe for usage with GPG, \n       passwords, etc. TRUE if it did, otherwise FALSE"}]},"openssl_seal":{"s":"Seal (encrypt) data","p":[{"t":"data","d":""},{"t":"sealed_data","d":""},{"t":"env_keys","d":""},{"t":"pub_key_ids","d":""}]},"openssl_sign":{"s":"Generate signature","p":[{"t":"data","d":"The string of data you wish to sign"},{"t":"signature","d":"If the call was successful the signature is returned in\n       signature."},{"t":"priv_key_id","d":"resource - a key, returned by openssl_get_privatekey()"},{"t":"signature_alg","d":"int - one of these Signature Algorithms."}]},"openssl_verify":{"s":"Verify signature","p":[{"t":"data","d":"The string of data used to generate the signature previously"},{"t":"signature","d":"A raw binary string, generated by openssl_sign() or similar means"},{"t":"pub_key_id","d":"resource - a key, returned by openssl_get_publickey()"},{"t":"signature_alg","d":"int - one of these Signature Algorithms."}]},"openssl_x509_checkpurpose":{"s":"Verifies if a certificate can be used for a particular purpose","p":[{"t":"x509cert","d":"The examined certificate."},{"t":"purpose","d":"openssl_x509_checkpurpose() purposes\n        \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           X509_PURPOSE_SSL_CLIENT\n           Can the certificate be used for the client side of an SSL\n           connection?\n          \n\n          \n           X509_PURPOSE_SSL_SERVER\n           Can the certificate be used for the server side of an SSL\n           connection?\n          \n\n          \n           X509_PURPOSE_NS_SSL_SERVER\n           Can the cert be used for Netscape SSL server?\n          \n\n          \n           X509_PURPOSE_SMIME_SIGN\n           Can the cert be used to sign S\/MIME email?\n          \n\n          \n           X509_PURPOSE_SMIME_ENCRYPT\n           Can the cert be used to encrypt S\/MIME email?\n          \n\n          \n           X509_PURPOSE_CRL_SIGN\n           Can the cert be used to sign a certificate revocation list\n           (CRL)?\n          \n\n          \n           X509_PURPOSE_ANY\n           Can the cert be used for Any\/All purposes?\n          \n\n         \n        \n       \n\n       These options are not bitfields - you may specify one only!"},{"t":"cainfo","d":"cainfo should be an array of trusted CA files\/dirs\n       as described in Certificate\n       Verification."},{"t":"untrustedfile","d":"If specified, this should be the name of a PEM encoded file holding\n       certificates that can be used to help verify the certificate, although\n       no trust is placed in the certificates that come from that file."}]},"openssl_x509_check_private_key":{"s":"Checks if a private key corresponds to a certificate","p":[{"t":"cert","d":"The certificate."},{"t":"key","d":"The private key."}]},"openssl_x509_export":{"s":"Exports a certificate as a string","p":[{"t":"x509","d":"See Key\/Certificate parameters for a list of valid values."},{"t":"output","d":"On success, this will hold the PEM."},{"t":"notext","d":"The optional parameter notext affects\n the verbosity of the output; if it is FALSE, then additional human-readable\n information is included in the output. The default value of\n notext is TRUE."}]},"openssl_x509_export_to_file":{"s":"Exports a certificate to file","p":[{"t":"x509","d":"See Key\/Certificate parameters for a list of valid values."},{"t":"outfilename","d":"Path to the output file."},{"t":"notext","d":"The optional parameter notext affects\n the verbosity of the output; if it is FALSE, then additional human-readable\n information is included in the output. The default value of\n notext is TRUE."}]},"openssl_x509_free":{"s":"Free certificate resource","p":[{"t":"x509cert","d":""}]},"openssl_x509_parse":{"s":"Parse an X509 certificate and return the information as an array","p":[{"t":"x509cert","d":""},{"t":"shortnames","d":"shortnames controls how the data is indexed in the\n       array - if shortnames is TRUE (the default) then\n       fields will be indexed with the short name form, otherwise, the long name\n       form will be used - e.g.: CN is the shortname form of commonName."}]},"openssl_x509_read":{"s":"","p":[{"t":"x509certdata","d":""}]},"ord":{"s":"Return ASCII value of character","p":[{"t":"string","d":"A character."}]},"output_add_rewrite_var":{"s":"Add URL rewriter values","p":[{"t":"name","d":"The variable name."},{"t":"value","d":"The variable value."}]},"output_reset_rewrite_vars":{"s":"Reset URL rewriter values","p":null},"override_function":{"s":"Overrides built-in functions","p":[{"t":"function_name","d":"The function to override."},{"t":"function_args","d":"The function arguments, as a comma separated string."},{"t":"function_code","d":"The new code for the function."}]},"ovrimos_close":{"s":"Closes the connection to ovrimos","p":[{"t":"connection","d":"The Ovrimos connection identifier, returned by \n       ovrimos_connect()."}]},"ovrimos_commit":{"s":"Commits the transaction","p":[{"t":"connection_id","d":"The Ovrimos connection identifier, returned by \n       ovrimos_connect()."}]},"ovrimos_connect":{"s":"Connect to the specified database","p":[{"t":"host","d":"A host name or IP address."},{"t":"dborport","d":"Either a database name, or the port number to connect to."},{"t":"user","d":"The user name."},{"t":"password","d":"Password associated with user."}]},"ovrimos_cursor":{"s":"Returns the name of the cursor","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."}]},"ovrimos_exec":{"s":"Executes an SQL statement","p":[{"t":"connection_id","d":"The Ovrimos connection identifier, returned by \n       ovrimos_connect()."},{"t":"query","d":"The SQL statement. Evidently, it should not contain parameters.\n       Use ovrimos_prepare() for prepared statements."}]},"ovrimos_execute":{"s":"Executes a prepared SQL statement","p":[{"t":"result_id","d":"An Ovrimos result identifier prepared with\n       ovrimos_prepare()."},{"t":"parameters_array","d":"If the prepared statement contained parameters (question marks in the\n       statement), the correct number of parameters should be passed in an\n       array."}]},"ovrimos_fetch_into":{"s":"Fetches a row from the result set","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"result_array","d":"You must provide an array by reference. It will be filled with the\n       fetched values."},{"t":"how","d":"Determines how the rows are fetched. This can be one of the following\n       strings (case is not significant):\n       \n        \n         \n          \n           Option\n           Notes\n          \n\n         \n\n         \n          \n           Next\n           \n            Forward direction from current position.\n            This is the default value.\n           \n          \n\n          \n           Prev\n           \n            Backward direction from current position.\n           \n          \n\n          \n           First\n           \n            Forward direction from the start.\n           \n          \n\n          \n           Last\n           \n            Backward direction from the end.\n           \n          \n\n          \n           Absolute\n           \n            Absolute position from the start.\n            Requires rownumber."},{"t":"rownumber","d":"The row number, first one is 0. Only needed when \n       how is set to\n       Absolute."}]},"ovrimos_fetch_row":{"s":"Fetches a row from the result set","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"how","d":"Determines how the rows are fetched. This can be one of the following\n       strings (case is not significant):\n       \n        \n         \n          \n           Option\n           Notes\n          \n\n         \n\n         \n          \n           Next\n           \n            Forward direction from current position.\n            This is the default value.\n           \n          \n\n          \n           Prev\n           \n            Backward direction from current position.\n           \n          \n\n          \n           First\n           \n            Forward direction from the start.\n           \n          \n\n          \n           Last\n           \n            Backward direction from the end.\n           \n          \n\n          \n           Absolute\n           \n            Absolute position from the start.\n            Requires rownumber."},{"t":"rownumber","d":"The row number, first one is 0. Only needed when \n       how is set to\n       Absolute."}]},"ovrimos_field_len":{"s":"Returns the length of the output column","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"field_number","d":"The field number. Starts at 1."}]},"ovrimos_field_name":{"s":"Returns the output column name","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"field_number","d":"The field number. Starts at 1."}]},"ovrimos_field_num":{"s":"Returns the (1-based) index of the output column","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"field_name","d":"The field name."}]},"ovrimos_field_type":{"s":"Returns the type of the output column","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"field_number","d":"A 1-based index."}]},"ovrimos_free_result":{"s":"Frees the specified result_id","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."}]},"ovrimos_longreadlen":{"s":"Specifies how many bytes are to be retrieved from long datatypes","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"length","d":"The number of bytes to retrieve. Default is zero."}]},"ovrimos_num_fields":{"s":"Returns the number of columns","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."}]},"ovrimos_num_rows":{"s":"Returns the number of rows affected by update operations","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."}]},"ovrimos_prepare":{"s":"Prepares an SQL statement","p":[{"t":"connection_id","d":"The Ovrimos connection identifier, returned by \n       ovrimos_connect()."},{"t":"query","d":"The SQL statement."}]},"ovrimos_result":{"s":"Retrieves the output column","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"field","d":"Either as a string with the field name or as an 1-based index."}]},"ovrimos_result_all":{"s":"Prints the whole result set as an HTML table","p":[{"t":"result_id","d":"A result identifier, returned by ovrimos_execute()\n       or ovrimos_exec()."},{"t":"format","d":"Optional HTML attributes for the generated table element."}]},"ovrimos_rollback":{"s":"Rolls back the transaction","p":[{"t":"connection_id","d":"The Ovrimos connection identifier, returned by \n       ovrimos_connect()."}]},"pack":{"s":"Pack data into binary string","p":[{"t":"format","d":"The format string consists of format codes\n       followed by an optional repeater argument. The repeater argument can\n       be either an integer value or * for repeating to\n       the end of the input data. For a, A, h, H the repeat count specifies\n       how many characters of one data argument are taken, for @ it is the\n       absolute position where to put the next data, for everything else the\n       repeat count specifies how many data arguments are consumed and packed\n       into the resulting binary string."},{"t":"args","d":""}]},"parsekit_compile_file":{"s":"Compile a string of PHP code and return the resulting op array","p":[{"t":"filename","d":"A string containing the name of the file to compile. \n       Similar to the argument to include."},{"t":"errors","d":"A 2D hash of errors (including fatal errors) encountered during compilation.\n       Returned by reference."},{"t":"options","d":"One of either PARSEKIT_QUIET or \n       PARSEKIT_SIMPLE. To produce varying\n       degrees of verbosity in the returned output."}]},"parsekit_compile_string":{"s":"Compile a string of PHP code and return the resulting op array","p":[{"t":"phpcode","d":"A string containing phpcode. Similar to the argument to eval()."},{"t":"errors","d":"A 2D hash of errors (including fatal errors) encountered during compilation.\n       Returned by reference."},{"t":"options","d":"One of either PARSEKIT_QUIET or \n       PARSEKIT_SIMPLE. To produce varying\n       degrees of verbosity in the returned output."}]},"parsekit_func_arginfo":{"s":"Return information regarding function argument(s)","p":[{"t":"function","d":"A string describing a function, or an array describing a class\/method."}]},"parse_ini_file":{"s":"Parse a configuration file","p":[{"t":"filename","d":"The filename of the ini file being parsed."},{"t":"process_sections","d":"By setting the process_sections\n       parameter to TRUE, you get a multidimensional array, with\n       the section names and settings included. The default\n       for process_sections is FALSE"},{"t":"scanner_mode","d":"Can either be INI_SCANNER_NORMAL (default) or \n       INI_SCANNER_RAW. If INI_SCANNER_RAW \n       is supplied, then option values will not be parsed."}]},"parse_ini_string":{"s":"Parse a configuration string","p":[{"t":"ini","d":"The contents of the ini file being parsed."},{"t":"process_sections","d":"By setting the process_sections\n       parameter to TRUE, you get a multidimensional array, with\n       the section names and settings included. The default\n       for process_sections is FALSE"},{"t":"scanner_mode","d":"Can either be INI_SCANNER_NORMAL (default) or \n       INI_SCANNER_RAW. If INI_SCANNER_RAW \n       is supplied, then option values will not be parsed."}]},"parse_str":{"s":"Parses the string into variables","p":[{"t":"str","d":"The input string."},{"t":"arr","d":"If the second parameter arr is present,\n       variables are stored in this variable as array elements instead."}]},"parse_url":{"s":"Parse a URL and return its components","p":[{"t":"url","d":"The URL to parse. Invalid characters are replaced by\n       _."},{"t":"component","d":"Specify one of PHP_URL_SCHEME,\n       PHP_URL_HOST, PHP_URL_PORT,\n       PHP_URL_USER, PHP_URL_PASS,\n       PHP_URL_PATH, PHP_URL_QUERY\n       or PHP_URL_FRAGMENT to retrieve just a specific\n       URL component as a string (except when\n       PHP_URL_PORT is given, in which case the return\n       value will be an integer)."}]},"passthru":{"s":"Execute an external program and display raw output","p":[{"t":"command","d":"The command that will be executed."},{"t":"return_var","d":"If the return_var argument is present, the \n       return status of the Unix command will be placed here."}]},"password_get_info":{"s":"Returns information about the given hash","p":[{"t":"hash","d":"A hash created by password_hash()."}]},"password_hash":{"s":"Creates a password hash","p":[{"t":"password","d":"The user&#039;s password."}]},"password_needs_rehash":{"s":"Checks if the given hash matches the given options","p":[{"t":"hash","d":"A hash created by password_hash()."},{"t":"algo","d":"A password algorithm constant denoting the algorithm to use when hashing the password."},{"t":"options","d":"An associative array containing options. See the password algorithm constants for documentation on the supported options for each algorithm."}]},"password_verify":{"s":"Verifies that a password matches a hash","p":[{"t":"password","d":"The user&#039;s password."},{"t":"hash","d":"A hash created by password_hash()."}]},"pathinfo":{"s":"Returns information about a file path","p":[{"t":"path","d":"The path to be parsed."},{"t":"options","d":"If present, specifies a specific element to be returned; one of\n       PATHINFO_DIRNAME,\n       PATHINFO_BASENAME,\n       PATHINFO_EXTENSION or\n       PATHINFO_FILENAME."}]},"pclose":{"s":"Closes process file pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must have been returned by a\n       successful call to popen()."}]},"pcntl_alarm":{"s":"Set an alarm clock for delivery of a signal","p":[{"t":"seconds","d":"The number of seconds to wait. If seconds is\n       zero, no new alarm is created."}]},"pcntl_errno":{"s":"Alias of pcntl_strerror()","p":null},"pcntl_exec":{"s":"Executes specified program in current process space","p":[{"t":"path","d":"path must be the path to a binary executable or a\n       script with a valid path pointing to an executable in the shebang (\n       #!\/usr\/local\/bin\/perl for example) as the first line.  See your system&#039;s\n       man execve(2) page for additional information."},{"t":"args","d":"args is an array of argument strings passed to the\n       program."},{"t":"envs","d":"envs is an array of strings which are passed as\n       environment to the program.  The array is in the format of name =&gt; value,\n       the key being the name of the environmental variable and the value being\n       the value of that variable."}]},"pcntl_fork":{"s":"Forks the currently running process","p":null},"pcntl_getpriority":{"s":"Get the priority of any process","p":[{"t":"pid","d":"If not specified, the pid of the current process is used."},{"t":"process_identifier","d":"One of PRIO_PGRP, PRIO_USER\n       or PRIO_PROCESS."}]},"pcntl_get_last_error":{"s":"Retrieve the error number set by the last pcntl function which failed","p":null},"pcntl_setpriority":{"s":"Change the priority of any process","p":[{"t":"priority","d":"priority is generally a value in the range\n       -20 to 20. The default priority\n       is 0 while a lower numerical value causes more\n       favorable scheduling.  Because priority levels can differ between\n       system types and kernel versions, please see your system&#039;s setpriority(2)\n       man page for specific details."},{"t":"pid","d":"If not specified, the pid of the current process is used."},{"t":"process_identifier","d":"One of PRIO_PGRP, PRIO_USER\n       or PRIO_PROCESS."}]},"pcntl_signal":{"s":"Installs a signal handler","p":[{"t":"signo","d":"The signal number."},{"t":"handler","d":"The signal handler. This may be either a callable, which\n       will be invoked to handle the signal, or either of the two global\n       constants SIG_IGN or SIG_DFL,\n       which will ignore the signal or restore the default signal handler\n       respectively."}]},"pcntl_signal_dispatch":{"s":"Calls signal handlers for pending signals","p":null},"pcntl_sigprocmask":{"s":"Sets and retrieves blocked signals","p":[{"t":"how","d":"Sets the behavior of pcntl_sigprocmask(). Possible\n       values: \n       \n        SIG_BLOCK: Add the signals to the\n         currently blocked signals.\n        SIG_UNBLOCK: Remove the signals from the\n         currently blocked signals.\n        SIG_SETMASK: Replace the currently\n         blocked signals by the given list of signals."},{"t":"set","d":"List of signals."},{"t":"oldset","d":"The oldset parameter is set to an array\n       containing the list of the previously blocked signals."}]},"pcntl_sigtimedwait":{"s":"Waits for signals, with a timeout","p":[{"t":"set","d":"Array of signals to wait for."},{"t":"siginfo","d":"The siginfo is set to an array containing\n       informations about the signal. See\n       pcntl_sigwaitinfo()."},{"t":"seconds","d":"Timeout in seconds."},{"t":"nanoseconds","d":"Timeout in nanoseconds."}]},"pcntl_sigwaitinfo":{"s":"Waits for signals","p":[{"t":"set","d":"Array of signals to wait for."},{"t":"siginfo","d":"The siginfo parameter is set to an array containing\n       informations about the signal."}]},"pcntl_strerror":{"s":"Retrieve the system error message associated with the given errno","p":[{"t":"errno","d":""}]},"pcntl_wait":{"s":"Waits on or returns the status of a forked child","p":[{"t":"status","d":"pcntl_wait() will store status information\n       in the status parameter which can be\n       evaluated using the following functions:\n       pcntl_wifexited(),\n       pcntl_wifstopped(),\n       pcntl_wifsignaled(),\n       pcntl_wexitstatus(),\n       pcntl_wtermsig() and\n       pcntl_wstopsig()."},{"t":"options","d":"If wait3 is available on your system (mostly BSD-style systems), you can\n       provide the optional options parameter.  If this\n       parameter is not provided, wait will be used for the system call.  If\n       wait3 is not available, providing a value for options\n        will have no effect. The value of options\n        is the value of zero or more of the following two constants\n       OR&#039;ed together:\n       \n        Possible values for options\n        \n         \n          \n           WNOHANG\n           \n            Return immediately if no child has exited.\n           \n          \n\n          \n           WUNTRACED\n           \n            Return for children which are stopped, and whose status has\n            not been reported."}]},"pcntl_waitpid":{"s":"Waits on or returns the status of a forked child","p":[{"t":"pid","d":"The value of pid can be one of the following:\n       \n        possible values for pid\n        \n         \n          \n           &lt; -1\n           \n            wait for any child process whose process group ID is equal to\n            the absolute value of pid.\n           \n          \n\n          \n           -1\n           \n            wait for any child process; this is the same behaviour that\n            the wait function exhibits.\n           \n          \n\n          \n           0\n           \n            wait for any child process whose process group ID is equal to\n            that of the calling process.\n           \n          \n\n          \n           &gt; 0\n           \n            wait for the child whose process ID is equal to the value of\n            pid."},{"t":"status","d":"pcntl_waitpid() will store status information\n       in the status parameter which can be\n       evaluated using the following functions:\n       pcntl_wifexited(),\n       pcntl_wifstopped(),\n       pcntl_wifsignaled(),\n       pcntl_wexitstatus(),\n       pcntl_wtermsig() and\n       pcntl_wstopsig()."},{"t":"options","d":"The value of options is the value of zero\n       or more of the following two global constants\n       OR&#039;ed together:\n       \n        possible values for options\n        \n         \n          \n           WNOHANG\n           \n            return immediately if no child has exited.\n           \n          \n\n          \n           WUNTRACED\n           \n            return for children which are stopped, and whose status has\n            not been reported."}]},"pcntl_wexitstatus":{"s":"Returns the return code of a terminated child","p":[{"t":"status","d":"The status\nparameter is the status parameter supplied to a successful\ncall to pcntl_waitpid()."}]},"pcntl_wifexited":{"s":"Checks if status code represents a normal exit","p":[{"t":"status","d":"The status\nparameter is the status parameter supplied to a successful\ncall to pcntl_waitpid()."}]},"pcntl_wifsignaled":{"s":"Checks whether the status code represents a termination due to a signal","p":[{"t":"status","d":"The status\nparameter is the status parameter supplied to a successful\ncall to pcntl_waitpid()."}]},"pcntl_wifstopped":{"s":"Checks whether the child process is currently stopped","p":[{"t":"status","d":"The status\nparameter is the status parameter supplied to a successful\ncall to pcntl_waitpid()."}]},"pcntl_wstopsig":{"s":"Returns the signal which caused the child to stop","p":[{"t":"status","d":"The status\nparameter is the status parameter supplied to a successful\ncall to pcntl_waitpid()."}]},"pcntl_wtermsig":{"s":"Returns the signal which caused the child to terminate","p":[{"t":"status","d":"The status\nparameter is the status parameter supplied to a successful\ncall to pcntl_waitpid()."}]},"pfsockopen":{"s":"Open persistent Internet or Unix domain socket connection","p":null},"pg_affected_rows":{"s":"Returns number of affected records (tuples)","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."}]},"pg_cancel_query":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."}]},"pg_client_encoding":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_close":{"s":"Closes a PostgreSQL connection","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_connect":{"s":"Open a PostgreSQL connection","p":[{"t":"connection_string","d":"The connection_string can be empty to use all default parameters, or it \n       can contain one or more parameter settings separated by whitespace. \n       Each parameter setting is in the form keyword = value. Spaces around \n       the equal sign are optional. To write an empty value or a value \n       containing spaces, surround it with single quotes, e.g., keyword = \n       &#039;a value&#039;. Single quotes and backslashes within the value must be \n       escaped with a backslash, i.e., \\&#039; and \\\\."},{"t":"connect_type","d":"If PGSQL_CONNECT_FORCE_NEW is passed, then a new connection\n       is created, even if the connection_string is identical to\n       an existing connection."}]},"pg_connection_busy":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."}]},"pg_connection_reset":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."}]},"pg_connection_status":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."}]},"pg_convert":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"table_name","d":"Name of the table against which to convert types."},{"t":"assoc_array","d":"Data to be converted."},{"t":"options","d":"Any number of PGSQL_CONV_IGNORE_DEFAULT,\n       PGSQL_CONV_FORCE_NULL or\n       PGSQL_CONV_IGNORE_NOT_NULL, combined."}]},"pg_copy_from":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"table_name","d":"Name of the table into which to copy the rows."},{"t":"rows","d":"An array of data to be copied into table_name.\n       Each value in rows becomes a row in table_name.\n       Each value in rows should be a delimited string of the values\n       to insert into each field.  Values should be linefeed terminated."},{"t":"delimiter","d":"The token that separates values for each field in each element of\n       rows.  Default is TAB."},{"t":"null_as","d":"How SQL NULL values are represented in the\n       rows.  Default is \\N (&quot;\\\\N&quot;)."}]},"pg_copy_to":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"table_name","d":"Name of the table from which to copy the data into rows."},{"t":"delimiter","d":"The token that separates values for each field in each element of\n       rows.  Default is TAB."},{"t":"null_as","d":"How SQL NULL values are represented in the\n       rows.  Default is \\N (&quot;\\\\N&quot;)."}]},"pg_dbname":{"s":"Get the database name","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_delete":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"table_name","d":"Name of the table from which to delete rows."},{"t":"assoc_array","d":"An array whose keys are field names in the table table_name,\n       and whose values are the values of those fields that are to be deleted."},{"t":"options","d":"Any number of PGSQL_CONV_FORCE_NULL,\n       PGSQL_DML_NO_CONV,\n       PGSQL_DML_ESCAPE,\n       PGSQL_DML_EXEC,\n       PGSQL_DML_ASYNC or\n       PGSQL_DML_STRING combined. If PGSQL_DML_STRING is part of the\n       options then query string is returned. When PGSQL_DML_NO_CONV\n       or PGSQL_DML_ESCAPE is set, it does not call pg_convert() internally."}]},"pg_end_copy":{"s":"Sync with PostgreSQL backend","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_escape_bytea":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"data","d":"A string containing text or binary data to be inserted into a bytea\n       column."}]},"pg_escape_identifier":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"data","d":"A string containing text to be escaped."}]},"pg_escape_literal":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"data","d":"A string containing text to be escaped."}]},"pg_escape_string":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"data","d":"A string containing text to be escaped."}]},"pg_execute":{"s":"Sends a request to execute a prepared statement with given parameters, and waits for the result.","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"stmtname","d":"The name of the prepared statement to execute.  if\n       &quot;&quot; is specified, then the unnamed statement is executed.  The name must have\n       been previously prepared using pg_prepare(), \n       pg_send_prepare() or a PREPARE SQL\n       command."},{"t":"params","d":"An array of parameter values to substitute for the $1, $2, etc. placeholders\n        in the original prepared query string.  The number of elements in the array\n        must match the number of placeholders."}]},"pg_fetch_all":{"s":"Fetches all rows from a result as an array","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."}]},"pg_fetch_all_columns":{"s":"Fetches all rows in a particular result column as an array","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"column","d":"Column number, zero-based, to be retrieved from the result resource.  Defaults\n       to the first column if not specified."}]},"pg_fetch_array":{"s":"Fetch a row as an array","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"row","d":"Row number in result to fetch. Rows are numbered from 0 upwards. If\n       omitted or NULL, the next row is fetched."},{"t":"result_type","d":"An optional parameter that controls\n       how the returned array is indexed.\n       result_type is a constant and can take the\n       following values: PGSQL_ASSOC, \n       PGSQL_NUM and PGSQL_BOTH.\n       Using PGSQL_NUM, pg_fetch_array()\n       will return an array with numerical indices, using\n       PGSQL_ASSOC it will return only associative indices\n       while PGSQL_BOTH, the default, will return both\n       numerical and associative indices."}]},"pg_fetch_assoc":{"s":"Fetch a row as an associative array","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"row","d":"Row number in result to fetch. Rows are numbered from 0 upwards. If\n       omitted or NULL, the next row is fetched."}]},"pg_fetch_object":{"s":"Fetch a row as an object","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"row","d":"Row number in result to fetch. Rows are numbered from 0 upwards. If\n       omitted or NULL, the next row is fetched."},{"t":"result_type","d":"Ignored and deprecated."},{"t":"class_name","d":"The name of the class to instantiate, set the properties of and return.\n        If not specified, a stdClass object is returned."},{"t":"params","d":"An optional array of parameters to pass to the constructor\n        for class_name objects."}]},"pg_fetch_result":{"s":"Returns values from a result resource","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"row","d":"Row number in result to fetch.  Rows are numbered from 0 upwards.  If omitted,\n       next row is fetched."},{"t":"field","d":"A string representing the name of the field (column) to fetch, otherwise\n       an int representing the field number to fetch.  Fields are\n       numbered from 0 upwards."}]},"pg_fetch_row":{"s":"Get a row as an enumerated array","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"row","d":"Row number in result to fetch. Rows are numbered from 0 upwards. If\n       omitted or NULL, the next row is fetched."}]},"pg_field_is_null":{"s":"Test if a field is SQL NULL","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"row","d":"Row number in result to fetch.  Rows are numbered from 0 upwards.  If omitted,\n       current row is fetched."},{"t":"field","d":"Field number (starting from 0) as an integer or \n        the field name as a string."}]},"pg_field_name":{"s":"Returns the name of a field","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"field_number","d":"Field number, starting from 0."}]},"pg_field_num":{"s":"Returns the field number of the named field","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"field_name","d":"The name of the field."}]},"pg_field_prtlen":{"s":"Returns the printed length","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"row","d":"Row number in result.  Rows are numbered from 0 upwards.  If omitted,\n       current row is fetched."}]},"pg_field_size":{"s":"","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"field_number","d":"Field number, starting from 0."}]},"pg_field_table":{"s":"Returns the name or oid of the tables field","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"field_number","d":"Field number, starting from 0."},{"t":"oid_only","d":"By default the tables name that field belongs to is returned but\n        if oid_only is set to TRUE, then the\n        oid will instead be returned."}]},"pg_field_type":{"s":"","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"field_number","d":"Field number, starting from 0."}]},"pg_field_type_oid":{"s":"","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"field_number","d":"Field number, starting from 0."}]},"pg_free_result":{"s":"Free result memory","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."}]},"pg_get_notify":{"s":"Gets SQL NOTIFY message","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"result_type","d":"An optional parameter that controls\n       how the returned array is indexed.\n       result_type is a constant and can take the\n       following values: PGSQL_ASSOC, \n       PGSQL_NUM and PGSQL_BOTH.\n       Using PGSQL_NUM, pg_get_notify()\n       will return an array with numerical indices, using\n       PGSQL_ASSOC it will return only associative indices\n       while PGSQL_BOTH, the default, will return both\n       numerical and associative indices."}]},"pg_get_pid":{"s":"Gets the backend&#039;s process ID","p":[{"t":"connection","d":"PostgreSQL database connection resource."}]},"pg_get_result":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."}]},"pg_host":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_insert":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"table_name","d":"Name of the table into which to insert rows.  The table table_name must at least \n       have as many columns as assoc_array has elements."},{"t":"assoc_array","d":"An array whose keys are field names in the table table_name,\n       and whose values are the values of those fields that are to be inserted."},{"t":"options","d":"Any number of PGSQL_CONV_OPTS,\n       PGSQL_DML_NO_CONV,\n       PGSQL_DML_ESCAPE,\n       PGSQL_DML_EXEC,\n       PGSQL_DML_ASYNC or\n       PGSQL_DML_STRING combined. If PGSQL_DML_STRING is part of the\n       options then query string is returned. When PGSQL_DML_NO_CONV\n       or PGSQL_DML_ESCAPE is set, it does not call pg_convert() internally."}]},"pg_last_error":{"s":"Get the last error message string of a connection","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_last_notice":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."}]},"pg_last_oid":{"s":"Returns the last row&#039;s OID","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."}]},"pg_lo_close":{"s":"Close a large object","p":[{"t":"result","d":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."}]},"pg_lo_create":{"s":"Create a large object","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"object_id","d":"If an object_id is given the function\n       will try to create a large object with this id, else a free\n       object id is assigned by the server. The parameter\n       was added in PHP 5.3 and relies on functionality that first\n       appeared in PostgreSQL 8.1."}]},"pg_lo_export":{"s":"Export a large object to file","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"oid","d":"The OID of the large object in the database."},{"t":"pathname","d":"The full path and file name of the file in which to write the\n       large object on the client filesystem."}]},"pg_lo_import":{"s":"Import a large object from file","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"pathname","d":"The full path and file name of the file on the client\n       filesystem from which to read the large object data."},{"t":"object_id","d":"If an object_id is given the function\n       will try to create a large object with this id, else a free\n       object id is assigned by the server. The parameter\n       was added in PHP 5.3 and relies on functionality that first\n       appeared in PostgreSQL 8.1."}]},"pg_lo_open":{"s":"Open a large object","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"oid","d":"The OID of the large object in the database."},{"t":"mode","d":"Can be either &quot;r&quot; for read-only, &quot;w&quot; for write only or &quot;rw&quot; for read and \n       write."}]},"pg_lo_read":{"s":"Read a large object","p":[{"t":"large_object","d":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."},{"t":"len","d":"An optional maximum number of bytes to return."}]},"pg_lo_read_all":{"s":"","p":[{"t":"large_object","d":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."}]},"pg_lo_seek":{"s":"","p":[{"t":"large_object","d":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."},{"t":"offset","d":"The number of bytes to seek."},{"t":"whence","d":"One of the constants PGSQL_SEEK_SET (seek from object start), \n       PGSQL_SEEK_CUR (seek from current position)\n       or PGSQL_SEEK_END (seek from object end) ."}]},"pg_lo_tell":{"s":"","p":[{"t":"large_object","d":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."}]},"pg_lo_truncate":{"s":"","p":[{"t":"large_object","d":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."},{"t":"size","d":"The number of bytes to truncate."}]},"pg_lo_unlink":{"s":"Delete a large object","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"oid","d":"The OID of the large object in the database."}]},"pg_lo_write":{"s":"Write to a large object","p":[{"t":"large_object","d":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."},{"t":"data","d":"The data to be written to the large object.  If len is\n       specified and is less than the length of data, only\n       len bytes will be written."},{"t":"len","d":"An optional maximum number of bytes to write.  Must be greater than zero\n       and no greater than the length of data.  Defaults to\n       the length of data."}]},"pg_meta_data":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"table_name","d":"The name of the table."},{"t":"extended","d":"Flag for returning extended meta data. Default to FALSE."}]},"pg_num_fields":{"s":"Returns the number of fields in a result","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."}]},"pg_num_rows":{"s":"Returns the number of rows in a result","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."}]},"pg_options":{"s":"Get the options associated with the connection","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_parameter_status":{"s":"Looks up a current parameter setting of the server.","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"param_name","d":"Possible param_name values include server_version, \n        server_encoding, client_encoding, \n        is_superuser, session_authorization, \n        DateStyle, TimeZone, and \n        integer_datetimes."}]},"pg_pconnect":{"s":"Open a persistent PostgreSQL connection","p":[{"t":"connection_string","d":"The connection_string can be empty to use all default parameters, or it \n       can contain one or more parameter settings separated by whitespace. \n       Each parameter setting is in the form keyword = value. Spaces around \n       the equal sign are optional. To write an empty value or a value \n       containing spaces, surround it with single quotes, e.g., keyword = \n       &#039;a value&#039;. Single quotes and backslashes within the value must be \n       escaped with a backslash, i.e., \\&#039; and \\\\."},{"t":"connect_type","d":"If PGSQL_CONNECT_FORCE_NEW is passed, then a new connection\n       is created, even if the connection_string is identical to\n       an existing connection."}]},"pg_ping":{"s":"Ping database connection","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_port":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_prepare":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"stmtname","d":"The name to give the prepared statement.  Must be unique per-connection.  If\n       &quot;&quot; is specified, then an unnamed statement is created, overwriting any\n       previously defined unnamed statement."},{"t":"query","d":"The parameterized SQL statement.  Must contain only a single statement.\n       (multiple statements separated by semi-colons are not allowed.)  If any parameters \n       are used, they are referred to as $1, $2, etc."}]},"pg_put_line":{"s":"Send a NULL-terminated string to PostgreSQL backend","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"data","d":"A line of text to be sent directly to the PostgreSQL backend.  A NULL\n       terminator is added automatically."}]},"pg_query":{"s":"Execute a query","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"query","d":"The SQL statement or statements to be executed. When multiple statements are passed to the function,\n       they are automatically executed as one transaction, unless there are explicit BEGIN\/COMMIT commands\n       included in the query string. However, using multiple transactions in one function call is not recommended."}]},"pg_query_params":{"s":"Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text.","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"query","d":"The parameterized SQL statement.  Must contain only a single statement.\n       (multiple statements separated by semi-colons are not allowed.)  If any parameters \n       are used, they are referred to as $1, $2, etc."},{"t":"params","d":"An array of parameter values to substitute for the $1, $2, etc. placeholders\n        in the original prepared query string.  The number of elements in the array\n        must match the number of placeholders."}]},"pg_result_error":{"s":"","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."}]},"pg_result_error_field":{"s":"Returns an individual field of an error report.","p":[{"t":"result","d":"A PostgreSQL query result resource from a previously executed\n       statement."},{"t":"fieldcode","d":"Possible fieldcode values are: PGSQL_DIAG_SEVERITY,\n         PGSQL_DIAG_SQLSTATE, PGSQL_DIAG_MESSAGE_PRIMARY,\n         PGSQL_DIAG_MESSAGE_DETAIL,\n         PGSQL_DIAG_MESSAGE_HINT, PGSQL_DIAG_STATEMENT_POSITION,\n         PGSQL_DIAG_INTERNAL_POSITION (PostgreSQL 8.0+ only),\n         PGSQL_DIAG_INTERNAL_QUERY (PostgreSQL 8.0+ only),\n         PGSQL_DIAG_CONTEXT, PGSQL_DIAG_SOURCE_FILE,\n         PGSQL_DIAG_SOURCE_LINE or\n         PGSQL_DIAG_SOURCE_FUNCTION."}]},"pg_result_seek":{"s":"Set internal row offset in result resource","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"offset","d":"Row to move the internal offset to in the result resource.\n       Rows are numbered starting from zero."}]},"pg_result_status":{"s":"","p":[{"t":"result","d":"PostgreSQL query result resource, returned by pg_query(),\n       pg_query_params() or pg_execute()\n       (among others)."},{"t":"type","d":"Either PGSQL_STATUS_LONG to return the numeric status \n       of the result, or PGSQL_STATUS_STRING \n       to return the command tag of the result.\n       If not specified, PGSQL_STATUS_LONG is the default."}]},"pg_select":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"table_name","d":"Name of the table from which to select rows."},{"t":"assoc_array","d":"An array whose keys are field names in the table table_name,\n       and whose values are the conditions that a row must meet to be retrieved."},{"t":"options","d":"Any number of PGSQL_CONV_FORCE_NULL,\n       PGSQL_DML_NO_CONV,\n       PGSQL_DML_ESCAPE,\n       PGSQL_DML_EXEC,\n       PGSQL_DML_ASYNC or\n       PGSQL_DML_STRING combined. If PGSQL_DML_STRING is part of the\n       options then query string is returned. When PGSQL_DML_NO_CONV\n       or PGSQL_DML_ESCAPE is set, it does not call pg_convert() internally."}]},"pg_send_execute":{"s":"Sends a request to execute a prepared statement with given parameters, without waiting for the result(s).","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"stmtname","d":"The name of the prepared statement to execute.  if\n       &quot;&quot; is specified, then the unnamed statement is executed.  The name must have\n       been previously prepared using pg_prepare(), \n       pg_send_prepare() or a PREPARE SQL\n       command."},{"t":"params","d":"An array of parameter values to substitute for the $1, $2, etc. placeholders\n        in the original prepared query string.  The number of elements in the array\n        must match the number of placeholders."}]},"pg_send_prepare":{"s":"Sends a request to create a prepared statement with the given parameters, without waiting for completion.","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"stmtname","d":"The name to give the prepared statement.  Must be unique per-connection.  If\n       &quot;&quot; is specified, then an unnamed statement is created, overwriting any\n       previously defined unnamed statement."},{"t":"query","d":"The parameterized SQL statement.  Must contain only a single statement.\n       (multiple statements separated by semi-colons are not allowed.)  If any parameters \n       are used, they are referred to as $1, $2, etc."}]},"pg_send_query":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"query","d":"The SQL statement or statements to be executed."}]},"pg_send_query_params":{"s":"Submits a command and separate parameters to the server without waiting for the result(s).","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"query","d":"The parameterized SQL statement.  Must contain only a single statement.\n       (multiple statements separated by semi-colons are not allowed.)  If any parameters \n       are used, they are referred to as $1, $2, etc."},{"t":"params","d":"An array of parameter values to substitute for the $1, $2, etc. placeholders\n        in the original prepared query string.  The number of elements in the array\n        must match the number of placeholders."}]},"pg_set_client_encoding":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"encoding","d":"The required client encoding.  One of SQL_ASCII, EUC_JP, \n       EUC_CN, EUC_KR, EUC_TW, \n       UNICODE, MULE_INTERNAL, LATINX (X=1...9), \n       KOI8, WIN, ALT, SJIS, \n       BIG5 or WIN1250."}]},"pg_set_error_verbosity":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."},{"t":"verbosity","d":"The required verbosity: PGSQL_ERRORS_TERSE,\n       PGSQL_ERRORS_DEFAULT\n       or PGSQL_ERRORS_VERBOSE."}]},"pg_trace":{"s":"Enable tracing a PostgreSQL connection","p":[{"t":"pathname","d":"The full path and file name of the file in which to write the\n       trace log.  Same as in fopen()."},{"t":"mode","d":"An optional file access mode, same as for fopen()."},{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_transaction_status":{"s":"Returns the current in-transaction status of the server.","p":[{"t":"connection","d":"PostgreSQL database connection resource."}]},"pg_tty":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_unescape_bytea":{"s":"","p":[{"t":"data","d":"A string containing PostgreSQL bytea data to be converted into\n       a PHP binary string."}]},"pg_untrace":{"s":"Disable tracing of a PostgreSQL connection","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"pg_update":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource."},{"t":"table_name","d":"Name of the table into which to update rows."},{"t":"data","d":"An array whose keys are field names in the table table_name,\n       and whose values are what matched rows are to be updated to."},{"t":"condition","d":"An array whose keys are field names in the table table_name,\n       and whose values are the conditions that a row must meet to be updated."},{"t":"options","d":"Any number of PGSQL_CONV_FORCE_NULL,\n       PGSQL_DML_NO_CONV,\n       PGSQL_DML_ESCAPE,\n       PGSQL_DML_EXEC,\n       PGSQL_DML_ASYNC or\n       PGSQL_DML_STRING combined. If PGSQL_DML_STRING is part of the\n       options then query string is returned. When PGSQL_DML_NO_CONV\n       or PGSQL_DML_ESCAPE is set, it does not call pg_convert() internally."}]},"pg_version":{"s":"","p":[{"t":"connection","d":"PostgreSQL database connection resource.  When \n       connection is not present, the default connection \n       is used. The default connection is the last connection made by \n       pg_connect() or pg_pconnect()."}]},"phpcredits":{"s":"Prints out the credits for PHP","p":[{"t":"flag","d":"To generate a custom credits page, you may want to use the\n       flag parameter."}]},"phpinfo":{"s":"Outputs information about PHP&#039;s configuration","p":[{"t":"what","d":"The output may be customized by passing one or more of the\n       following constants bitwise values summed\n       together in the optional what parameter.\n       One can also combine the respective constants or bitwise values\n       together with the or operator."}]},"phpversion":{"s":"Gets the current PHP version","p":[{"t":"extension","d":"An optional extension name."}]},"php_check_syntax":{"s":"","p":[{"t":"filename","d":"The name of the file being checked."},{"t":"error_message","d":"If the error_message parameter is used, it will\n       contain the error message generated by the syntax check. \n       error_message is passed by \n       reference."}]},"php_ini_loaded_file":{"s":"Retrieve a path to the loaded php.ini file","p":null},"php_ini_scanned_files":{"s":"Return a list of .ini files parsed from the additional ini dir","p":null},"php_logo_guid":{"s":"Gets the logo guid","p":null},"php_sapi_name":{"s":"Returns the type of interface between web server and PHP","p":null},"php_strip_whitespace":{"s":"Return source with stripped comments and whitespace","p":[{"t":"filename","d":"Path to the PHP file."}]},"php_uname":{"s":"Returns information about the operating system PHP is running on","p":[{"t":"mode","d":"mode is a single character that defines what\n       information is returned:\n       \n        \n         \n          &#039;a&#039;: This is the default. Contains all modes in\n          the sequence &quot;s n r v m&quot;.\n         \n        \n        \n         \n          &#039;s&#039;: Operating system name. eg.\n           FreeBSD.\n         \n        \n        \n         \n          &#039;n&#039;: Host name. eg. \n          localhost.example.com.\n         \n        \n        \n         \n          &#039;r&#039;: Release name. eg. \n          5.1.2-RELEASE.\n         \n        \n        \n         \n          &#039;v&#039;: Version information. Varies a lot between\n          operating systems.\n         \n        \n        \n         \n          &#039;m&#039;: Machine type. eg. i386."}]},"pi":{"s":"Get value of pi","p":null},"png2wbmp":{"s":"Convert PNG image file to WBMP image file","p":[{"t":"pngname","d":"Path to PNG file."},{"t":"wbmpname","d":"Path to destination WBMP file."},{"t":"dest_height","d":"Destination image height."},{"t":"dest_width","d":"Destination image width."},{"t":"threshold","d":"Threshold value, between 0 and 8 (inclusive)."}]},"popen":{"s":"Opens process file pointer","p":[{"t":"command","d":"The command"},{"t":"mode","d":"The mode"}]},"pos":{"s":"Alias of current()","p":null},"posix_access":{"s":"","p":[{"t":"file","d":"The name of the file to be tested."},{"t":"mode","d":"A mask consisting of one or more of POSIX_F_OK,\n        POSIX_R_OK, POSIX_W_OK and\n        POSIX_X_OK."}]},"posix_ctermid":{"s":"Get path name of controlling terminal","p":null},"posix_errno":{"s":"Alias of posix_get_last_error()","p":null},"posix_getcwd":{"s":"Pathname of current directory","p":null},"posix_getegid":{"s":"Return the effective group ID of the current process","p":null},"posix_geteuid":{"s":"Return the effective user ID of the current process","p":null},"posix_getgid":{"s":"Return the real group ID of the current process","p":null},"posix_getgrgid":{"s":"Return info about a group by group id","p":[{"t":"gid","d":"The group id."}]},"posix_getgrnam":{"s":"Return info about a group by name","p":[{"t":"name","d":"The name of the group"}]},"posix_getgroups":{"s":"Return the group set of the current process","p":null},"posix_getlogin":{"s":"Return login name","p":null},"posix_getpgid":{"s":"Get process group id for job control","p":[{"t":"pid","d":"The process id."}]},"posix_getpgrp":{"s":"Return the current process group identifier","p":null},"posix_getpid":{"s":"Return the current process identifier","p":null},"posix_getppid":{"s":"Return the parent process identifier","p":null},"posix_getpwnam":{"s":"Return info about a user by username","p":[{"t":"username","d":"An alphanumeric username."}]},"posix_getpwuid":{"s":"Return info about a user by user id","p":[{"t":"uid","d":"The user identifier."}]},"posix_getrlimit":{"s":"Return info about system resource limits","p":null},"posix_getsid":{"s":"Get the current sid of the process","p":[{"t":"pid","d":"The process identifier. If set to 0, the current process is\n       assumed.  If an invalid pid is\n       specified, then FALSE is returned and an error is set which\n       can be checked with posix_get_last_error()."}]},"posix_getuid":{"s":"Return the real user ID of the current process","p":null},"posix_get_last_error":{"s":"Retrieve the error number set by the last posix function that failed","p":null},"posix_initgroups":{"s":"Calculate the group access list","p":[{"t":"name","d":"The user to calculate the list for."},{"t":"base_group_id","d":"Typically the group number from the password file."}]},"posix_isatty":{"s":"Determine if a file descriptor is an interactive terminal","p":[{"t":"fd","d":"The file descriptor."}]},"posix_kill":{"s":"Send a signal to a process","p":[{"t":"pid","d":"The process identifier."},{"t":"sig","d":"One of the PCNTL signals constants."}]},"posix_mkfifo":{"s":"Create a fifo special file (a named pipe)","p":[{"t":"pathname","d":"Path to the FIFO file."},{"t":"mode","d":"The second parameter mode has to be given in\n       octal notation (e.g. 0644). The permission of the newly created\n       FIFO also depends on the setting of the current\n       umask(). The permissions of the created file are\n       (mode &amp; ~umask)."}]},"posix_mknod":{"s":"","p":[{"t":"pathname","d":"The file to create"},{"t":"mode","d":"This parameter is constructed by a bitwise OR between file type (one of\n       the following constants: POSIX_S_IFREG,\n       POSIX_S_IFCHR, POSIX_S_IFBLK,\n       POSIX_S_IFIFO or\n       POSIX_S_IFSOCK) and permissions."},{"t":"major","d":"The major device kernel identifier (required to pass when using\n       S_IFCHR or S_IFBLK)."},{"t":"minor","d":"The minor device kernel identifier."}]},"posix_setegid":{"s":"Set the effective GID of the current process","p":[{"t":"gid","d":"The group id."}]},"posix_seteuid":{"s":"Set the effective UID of the current process","p":[{"t":"uid","d":"The user id."}]},"posix_setgid":{"s":"Set the GID of the current process","p":[{"t":"gid","d":"The group id."}]},"posix_setpgid":{"s":"Set process group id for job control","p":[{"t":"pid","d":"The process id."},{"t":"pgid","d":"The process group id."}]},"posix_setsid":{"s":"Make the current process a session leader","p":null},"posix_setuid":{"s":"Set the UID of the current process","p":[{"t":"uid","d":"The user id."}]},"posix_strerror":{"s":"Retrieve the system error message associated with the given errno","p":[{"t":"errno","d":"A POSIX error number, returned by \n       posix_get_last_error(). If set to 0, then the\n       string &quot;Success&quot; is returned."}]},"posix_times":{"s":"Get process times","p":null},"posix_ttyname":{"s":"Determine terminal device name","p":[{"t":"fd","d":"The file descriptor."}]},"posix_uname":{"s":"Get system name","p":null},"pow":{"s":"Exponential expression","p":[{"t":"base","d":"The base to use"},{"t":"exp","d":"The exponent"}]},"preg_filter":{"s":"Perform a regular expression search and replace","p":null},"preg_grep":{"s":"Return array entries that match the pattern","p":[{"t":"pattern","d":"The pattern to search for, as a string."},{"t":"input","d":"The input array."},{"t":"flags","d":"If set to PREG_GREP_INVERT, this function returns\n       the elements of the input array that do not match\n       the given pattern."}]},"preg_last_error":{"s":"Returns the error code of the last PCRE regex execution","p":null},"preg_match":{"s":"Perform a regular expression match","p":[{"t":"pattern","d":"The pattern to search for, as a string."},{"t":"subject","d":"The input string."},{"t":"matches","d":"If matches is provided, then it is filled with\n       the results of search. $matches[0] will contain the\n       text that matched the full pattern, $matches[1]\n       will have the text that matched the first captured parenthesized\n       subpattern, and so on."},{"t":"flags","d":""},{"t":"matches","d":""},{"t":"offset","d":"Normally, the search starts from the beginning of the subject string.\n       The optional parameter offset can be used to\n       specify the alternate place from which to start the search (in bytes)."}]},"preg_match_all":{"s":"Perform a global regular expression match","p":[{"t":"pattern","d":"The pattern to search for, as a string."},{"t":"subject","d":"The input string."},{"t":"matches","d":"Array of all matches in multi-dimensional array ordered according to\n       flags."},{"t":"flags","d":""},{"t":"","d":"Orders results so that $matches[0] is an array of full\n           pattern matches, $matches[1] is an array of strings matched by\n           the first parenthesized subpattern, and so on."}]},"preg_quote":{"s":"Quote regular expression characters","p":[{"t":"str","d":"The input string."},{"t":"delimiter","d":"If the optional delimiter is specified, it\n       will also be escaped.  This is useful for escaping the delimiter\n       that is required by the PCRE functions. The \/ is the most commonly\n       used delimiter."}]},"preg_replace":{"s":"Perform a regular expression search and replace","p":[{"t":"pattern","d":"The pattern to search for. It can be either a string or an array with\n       strings."},{"t":"replacement","d":"The string or an array with strings to replace. If this parameter is a\n       string and the pattern parameter is an array,\n       all patterns will be replaced by that string. If both\n       pattern and replacement\n       parameters are arrays, each pattern will be\n       replaced by the replacement counterpart. If\n       there are fewer elements in the replacement\n       array than in the pattern array, any extra\n       patterns will be replaced by an empty string."},{"t":"subject","d":"The string or an array with strings to search and replace."},{"t":"limit","d":"The maximum possible replacements for each pattern in each\n       subject string. Defaults to\n       -1 (no limit)."},{"t":"count","d":"If specified, this variable will be filled with the number of\n       replacements done."}]},"preg_replace_callback":{"s":"Perform a regular expression search and replace using a callback","p":[{"t":"pattern","d":"The pattern to search for. It can be either a string or an array with\n       strings."},{"t":"callback","d":"A callback that will be called and passed an array of matched elements\n       in the subject string. The callback should\n       return the replacement string. This is the callback signature:"}]},"preg_split":{"s":"Split string by a regular expression","p":[{"t":"pattern","d":"The pattern to search for, as a string."},{"t":"subject","d":"The input string."},{"t":"limit","d":"If specified, then only substrings up to limit\n       are returned with the rest of the string being placed in the last\n       substring.  A limit of -1, 0 or NULL means &quot;no limit&quot;\n       and, as is standard across PHP, you can use NULL to skip to the \n       flags parameter."},{"t":"flags","d":""},{"t":"","d":""},{"t":"","d":""},{"t":"subject","d":"If this flag is set, for every occurring match the appendant string\n           offset will also be returned. Note that this changes the return\n           value in an array where every element is an array consisting of the\n           matched string at offset 0 and its string offset\n           into subject at offset 1."}]},"prev":{"s":"Rewind the internal array pointer","p":[{"t":"array","d":"The input array."}]},"print":{"s":"Output a string","p":[{"t":"arg","d":"The input data."}]},"printf":{"s":"Output a formatted string","p":[{"t":"format","d":"See sprintf() for a description of\n       format."},{"t":"args","d":""},{"t":"...","d":""}]},"proc_close":{"s":"Close a process opened by proc_open()","p":[{"t":"process","d":"The proc_open() resource that will\n       be closed."}]},"proc_get_status":{"s":"Get information about a process opened by proc_open()","p":[{"t":"process","d":"The proc_open() resource that will\n       be evaluated."}]},"proc_nice":{"s":"Change the priority of the current process","p":[{"t":"increment","d":"The increment value of the priority change."}]},"proc_open":{"s":"","p":[{"t":"cmd","d":"The command to execute"},{"t":"descriptorspec","d":"An indexed array where the key represents the descriptor number and the\n       value represents how PHP will pass that descriptor to the child\n       process. 0 is stdin, 1 is stdout, while 2 is stderr."},{"t":"pipes","d":"Will be set to an indexed array of file pointers that correspond to\n       PHP&#039;s end of any pipes that are created."},{"t":"cwd","d":"The initial working dir for the command. This must be an\n       absolute directory path, or NULL\n       if you want to use the default value (the working dir of the current\n       PHP process)"},{"t":"env","d":"An array with the environment variables for the command that will be\n       run, or NULL to use the same environment as the current PHP process"},{"t":"other_options","d":"Allows you to specify additional options. Currently supported options\n       include:\n       \n        \n         suppress_errors (windows only): suppresses errors\n         generated by this function when it&#039;s set to TRUE\n        \n        \n         bypass_shell (windows only): bypass\n         cmd.exe shell when set to TRUE"}]},"proc_terminate":{"s":"Kills a process opened by proc_open","p":[{"t":"process","d":"The proc_open() resource that will\n       be closed."},{"t":"signal","d":"This optional parameter is only useful on POSIX\n       operating systems; you may specify a signal to send to the process\n       using the kill(2) system call.  The default is\n       SIGTERM."}]},"property_exists":{"s":"","p":[{"t":"class","d":"The class name or an object of the class to test for"},{"t":"property","d":"The name of the property"}]},"pspell_add_to_personal":{"s":"Add the word to a personal wordlist","p":[{"t":"dictionary_link","d":""},{"t":"word","d":"The added word."}]},"pspell_add_to_session":{"s":"Add the word to the wordlist in the current session","p":[{"t":"dictionary_link","d":""},{"t":"word","d":"The added word."}]},"pspell_check":{"s":"Check a word","p":[{"t":"dictionary_link","d":""},{"t":"word","d":"The tested word."}]},"pspell_clear_session":{"s":"Clear the current session","p":[{"t":"dictionary_link","d":""}]},"pspell_config_create":{"s":"Create a config used to open a dictionary","p":[{"t":"language","d":"The language parameter is the language code which consists of the\n       two letter ISO 639 language code and an optional two letter ISO\n       3166 country code after a dash or underscore."},{"t":"spelling","d":"The spelling parameter is the requested spelling for languages\n       with more than one spelling such as English. Known values are\n       &#039;american&#039;, &#039;british&#039;, and &#039;canadian&#039;."},{"t":"jargon","d":"The jargon parameter contains extra information to distinguish\n       two different words lists that have the same language and\n       spelling parameters."},{"t":"encoding","d":"The encoding parameter is the encoding that words are expected to\n       be in.  Valid values are &#039;utf-8&#039;, &#039;iso8859-*&#039;, &#039;koi8-r&#039;,\n       &#039;viscii&#039;, &#039;cp1252&#039;, &#039;machine unsigned 16&#039;, &#039;machine unsigned\n       32&#039;. This parameter is largely untested, so be careful when\n       using."}]},"pspell_config_data_dir":{"s":"location of language data files","p":null},"pspell_config_dict_dir":{"s":"Location of the main word list","p":null},"pspell_config_ignore":{"s":"Ignore words less than N characters long","p":[{"t":"dictionary_link","d":""},{"t":"n","d":"Words less than n characters will be skipped."}]},"pspell_config_mode":{"s":"Change the mode number of suggestions returned","p":[{"t":"dictionary_link","d":""},{"t":"mode","d":"The mode parameter is the mode in which spellchecker will work.\n       There are several modes available:\n       \n        \n         \n          PSPELL_FAST - Fast mode (least number of\n          suggestions)\n         \n        \n        \n         \n          PSPELL_NORMAL - Normal mode (more suggestions)\n         \n        \n        \n         \n          PSPELL_BAD_SPELLERS - Slow mode (a lot of\n          suggestions)"}]},"pspell_config_personal":{"s":"Set a file that contains personal wordlist","p":[{"t":"dictionary_link","d":""},{"t":"file","d":"The personal wordlist. If the file does not exist, it will be created.\n       The file should be writable by whoever PHP runs as (e.g. nobody)."}]},"pspell_config_repl":{"s":"Set a file that contains replacement pairs","p":[{"t":"dictionary_link","d":""},{"t":"file","d":"The file should be writable by whoever PHP runs as (e.g. nobody)."}]},"pspell_config_runtogether":{"s":"Consider run-together words as valid compounds","p":[{"t":"dictionary_link","d":""},{"t":"flag","d":"TRUE if run-together words should be treated as legal compounds,\n       FALSE otherwise."}]},"pspell_config_save_repl":{"s":"","p":[{"t":"dictionary_link","d":""},{"t":"flag","d":"TRUE if replacement pairs should be saved, FALSE otherwise."}]},"pspell_new":{"s":"Load a new dictionary","p":[{"t":"language","d":"The language parameter is the language code which consists of the\n       two letter ISO 639 language code and an optional two letter ISO\n       3166 country code after a dash or underscore."},{"t":"spelling","d":"The spelling parameter is the requested spelling for languages\n       with more than one spelling such as English. Known values are\n       &#039;american&#039;, &#039;british&#039;, and &#039;canadian&#039;."},{"t":"jargon","d":"The jargon parameter contains extra information to distinguish\n       two different words lists that have the same language and\n       spelling parameters."},{"t":"encoding","d":"The encoding parameter is the encoding that words are expected to\n       be in.  Valid values are &#039;utf-8&#039;, &#039;iso8859-*&#039;, &#039;koi8-r&#039;,\n       &#039;viscii&#039;, &#039;cp1252&#039;, &#039;machine unsigned 16&#039;, &#039;machine unsigned\n       32&#039;. This parameter is largely untested, so be careful when\n       using."},{"t":"mode","d":"The mode parameter is the mode in which spellchecker will work.\n       There are several modes available:\n       \n        \n         \n          PSPELL_FAST - Fast mode (least number of\n          suggestions)\n         \n        \n        \n         \n          PSPELL_NORMAL - Normal mode (more suggestions)\n         \n        \n        \n         \n          PSPELL_BAD_SPELLERS - Slow mode (a lot of\n          suggestions)\n         \n        \n        \n         \n          PSPELL_RUN_TOGETHER - Consider run-together words\n          as legal compounds.  That is, &quot;thecat&quot; will be a legal compound,\n          although there should be a space between the two words. Changing this\n          setting only affects the results returned by\n          pspell_check(); pspell_suggest()\n          will still return suggestions.\n         \n        \n       \n       Mode is a bitmask constructed from different constants listed above.\n       However, PSPELL_FAST,\n       PSPELL_NORMAL and\n       PSPELL_BAD_SPELLERS are mutually exclusive, so you\n       should select only one of them."}]},"pspell_new_config":{"s":"","p":[{"t":"config","d":"The config parameter is the one returned by\n       pspell_config_create() when the config was created."}]},"pspell_new_personal":{"s":"Load a new dictionary with personal wordlist","p":[{"t":"personal","d":"The file where words added to the personal list will be stored.\n       It should be an absolute filename beginning with &#039;\/&#039; because otherwise\n       it will be relative to $HOME, which is &quot;\/root&quot; for most systems, and\n       is probably not what you want."},{"t":"language","d":"The language code which consists of the two letter ISO 639 language\n       code and an optional two letter ISO 3166 country code after a dash\n       or underscore."},{"t":"spelling","d":"The requested spelling for languages with more than one spelling such\n       as English. Known values are &#039;american&#039;, &#039;british&#039;, and &#039;canadian&#039;."},{"t":"jargon","d":"Extra information to distinguish two different words lists that have\n       the same language and spelling parameters."},{"t":"encoding","d":"The encoding that words are expected to be in.  Valid values are\n       utf-8, iso8859-*, \n       koi8-r, viscii, \n       cp1252, machine unsigned 16, \n       machine unsigned 32."},{"t":"mode","d":"The mode in which spellchecker will work. There are several modes available:\n       \n        \n         \n          PSPELL_FAST - Fast mode (least number of\n          suggestions)\n         \n        \n        \n         \n          PSPELL_NORMAL - Normal mode (more suggestions)\n         \n        \n        \n         \n          PSPELL_BAD_SPELLERS - Slow mode (a lot of\n          suggestions)\n         \n        \n        \n         \n          PSPELL_RUN_TOGETHER - Consider run-together words\n          as legal compounds.  That is, &quot;thecat&quot; will be a legal compound,\n          although there should be a space between the two words. Changing this\n          setting only affects the results returned by\n          pspell_check(); pspell_suggest()\n          will still return suggestions.\n         \n        \n       \n       Mode is a bitmask constructed from different constants listed above.\n       However, PSPELL_FAST,\n       PSPELL_NORMAL and\n       PSPELL_BAD_SPELLERS are mutually exclusive, so you\n       should select only one of them."}]},"pspell_save_wordlist":{"s":"Save the personal wordlist to a file","p":[{"t":"dictionary_link","d":"A dictionary link identifier opened with\n       pspell_new_personal()."}]},"pspell_store_replacement":{"s":"Store a replacement pair for a word","p":[{"t":"dictionary_link","d":"A dictionary link identifier, opened with\n       pspell_new_personal()"},{"t":"misspelled","d":"The misspelled word."},{"t":"correct","d":"The fixed spelling for the misspelled word."}]},"pspell_suggest":{"s":"Suggest spellings of a word","p":[{"t":"dictionary_link","d":""},{"t":"word","d":"The tested word."}]},"ps_add_bookmark":{"s":"Add bookmark to current page","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":"The text used for displaying the bookmark."},{"t":"parent","d":"A bookmark previously created by this function which\n       is used as the parent of the new bookmark."},{"t":"open","d":"If open is unequal to zero the bookmark will\n       be shown open by the pdf viewer."}]},"ps_add_launchlink":{"s":"Adds link which launches file","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"llx","d":"The x-coordinate of the lower left corner."},{"t":"lly","d":"The y-coordinate of the lower left corner."},{"t":"urx","d":"The x-coordinate of the upper right corner."},{"t":"ury","d":"The y-coordinate of the upper right corner."},{"t":"filename","d":"The path of the program to be started, when the link is clicked on."}]},"ps_add_locallink":{"s":"Adds link to a page in the same document","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"llx","d":"The x-coordinate of the lower left corner."},{"t":"lly","d":"The y-coordinate of the lower left corner."},{"t":"urx","d":"The x-coordinate of the upper right corner."},{"t":"ury","d":"The y-coordinate of the upper right corner."},{"t":"page","d":"The number of the page displayed when clicking on the link."},{"t":"dest","d":"The parameter dest determines how the document\n       is being viewed. It can be fitpage,\n       fitwidth, fitheight, or\n       fitbbox."}]},"ps_add_note":{"s":"Adds note to current page","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"llx","d":"The x-coordinate of the lower left corner."},{"t":"lly","d":"The y-coordinate of the lower left corner."},{"t":"urx","d":"The x-coordinate of the upper right corner."},{"t":"ury","d":"The y-coordinate of the upper right corner."},{"t":"contents","d":"The text of the note."},{"t":"title","d":"The title of the note as displayed in the header of the note."},{"t":"icon","d":"The icon shown if the note is folded. This parameter can be set\n       to comment, insert,\n       note, paragraph,\n       newparagraph, key, or\n       help."},{"t":"open","d":"If open is unequal to zero the note will\n       be shown unfolded after opening the document with a pdf viewer."}]},"ps_add_pdflink":{"s":"Adds link to a page in a second pdf document","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"llx","d":"The x-coordinate of the lower left corner."},{"t":"lly","d":"The y-coordinate of the lower left corner."},{"t":"urx","d":"The x-coordinate of the upper right corner."},{"t":"ury","d":"The y-coordinate of the upper right corner."},{"t":"filename","d":"The name of the pdf document to be opened when clicking on\n       this link."},{"t":"page","d":"The page number of the destination pdf document"},{"t":"dest","d":"The parameter dest determines how the document\n       is being viewed. It can be fitpage,\n       fitwidth, fitheight, or\n       fitbbox."}]},"ps_add_weblink":{"s":"Adds link to a web location","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"llx","d":"The x-coordinate of the lower left corner."},{"t":"lly","d":"The y-coordinate of the lower left corner."},{"t":"urx","d":"The x-coordinate of the upper right corner."},{"t":"ury","d":"The y-coordinate of the upper right corner."},{"t":"url","d":"The url of the hyperlink to be opened when clicking on\n       this link, e.g. http:\/\/www.php.net."}]},"ps_arc":{"s":"Draws an arc counterclockwise","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"The x-coordinate of the circle&#039;s middle point."},{"t":"y","d":"The y-coordinate of the circle&#039;s middle point."},{"t":"radius","d":"The radius of the circle"},{"t":"alpha","d":"The start angle given in degrees."},{"t":"beta","d":"The end angle given in degrees."}]},"ps_arcn":{"s":"Draws an arc clockwise","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"The x-coordinate of the circle&#039;s middle point."},{"t":"y","d":"The y-coordinate of the circle&#039;s middle point."},{"t":"radius","d":"The radius of the circle"},{"t":"alpha","d":"The starting angle given in degrees."},{"t":"beta","d":"The end angle given in degrees."}]},"ps_begin_page":{"s":"Start a new page","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"width","d":"The width of the page in pixel, e.g. 596 for A4 format."},{"t":"height","d":"The height of the page in pixel, e.g. 842 for A4 format."}]},"ps_begin_pattern":{"s":"Start a new pattern","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"width","d":"The width of the pattern in pixel."},{"t":"height","d":"The height of the pattern in pixel."},{"t":"x-step","d":"The distance in pixel of placements of the pattern in\n       horizontal direction."},{"t":"y-step","d":"The distance in pixel of placements of the pattern in\n       vertical direction."},{"t":"painttype","d":"Must be 1 or 2."}]},"ps_begin_template":{"s":"Start a new template","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"width","d":"The width of the template in pixel."},{"t":"height","d":"The height of the template in pixel."}]},"ps_circle":{"s":"Draws a circle","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"The x-coordinate of the circle&#039;s middle point."},{"t":"y","d":"The y-coordinate of the circle&#039;s middle point."},{"t":"radius","d":"The radius of the circle"}]},"ps_clip":{"s":"Clips drawing to current path","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_close":{"s":"Closes a PostScript document","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_closepath":{"s":"Closes path","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_closepath_stroke":{"s":"Closes and strokes path","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_close_image":{"s":"Closes image and frees memory","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"imageid","d":"Resource identifier of the image as returned by\n       ps_open_image() or\n       ps_open_image_file()."}]},"ps_continue_text":{"s":"Continue text in next line","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":"The text to output."}]},"ps_curveto":{"s":"Draws a curve","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x1","d":"x-coordinate of first control point."},{"t":"y1","d":"y-coordinate of first control point."},{"t":"x2","d":"x-coordinate of second control point."},{"t":"y2","d":"y-coordinate of second control point."},{"t":"x3","d":"x-coordinate of third control point."},{"t":"y3","d":"y-coordinate of third control point."}]},"ps_delete":{"s":"Deletes all resources of a PostScript document","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_end_page":{"s":"End a page","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_end_pattern":{"s":"End a pattern","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_end_template":{"s":"End a template","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_fill":{"s":"Fills the current path","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_fill_stroke":{"s":"Fills and strokes the current path","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_findfont":{"s":"Loads a font","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"fontname","d":"The name of the font."},{"t":"encoding","d":"ps_findfont() will try to load the file passed in\n       the parameter encoding. Encoding files are of\n       the same syntax as those used by dvips(1). They\n       contain a font encoding vector (which is currently not used but must be\n       present) and a list of extra ligatures to extend the list of ligatures\n       derived from the afm file."},{"t":"embed","d":"If set to a value &gt;0 the font will be embedded into the document. This\n       requires the font outline (.pfb file) to be present."}]},"ps_get_buffer":{"s":"Fetches the full buffer containig the generated PS data","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_get_parameter":{"s":"Gets certain parameters","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"name","d":"Name of the parameter."},{"t":"modifier","d":"An identifier needed if a parameter of a resource is requested,\n       e.g. the size of an image. In such a case the resource id is\n       passed."}]},"ps_get_value":{"s":"Gets certain values","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"name","d":"Name of the value."},{"t":"modifier","d":"The parameter modifier specifies the resource\n       for which the value is to be retrieved. This can be the id of a font or\n       an image."}]},"ps_hyphenate":{"s":"Hyphenates a word","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":"text should not contain any non alpha\n       characters. Possible positions for breaks are returned in an array of\n       interger numbers. Each number is the position of the char in \n       text after which a hyphenation can take place."}]},"ps_include_file":{"s":"Reads an external file with raw PostScript code","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"file","d":""}]},"ps_lineto":{"s":"Draws a line","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"x-coordinate of the end point of the line."},{"t":"y","d":"y-coordinate of the end point of the line."}]},"ps_makespotcolor":{"s":"Create spot color","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"name","d":"Name of the spot color, e.g. Pantone 5565."}]},"ps_moveto":{"s":"Sets current point","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"x-coordinate of the point to move to."},{"t":"y","d":"y-coordinate of the point to move to."}]},"ps_new":{"s":"Creates a new PostScript document object","p":null},"ps_open_file":{"s":"Opens a file for output","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"filename","d":"The name of the postscript file.\n       If filename is not passed the document will be\n       created in memory and all output will go straight to the browser."}]},"ps_open_image":{"s":"Reads an image for later placement","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"type","d":"The type of the image. Possible values are png,\n       jpeg, or eps."},{"t":"source","d":"Not used."},{"t":"data","d":"The image data."},{"t":"length","d":"The length of the image data."},{"t":"width","d":"The width of the image."},{"t":"height","d":"The height of the image."},{"t":"components","d":"The number of components for each pixel. This can be\n       1 (gray scale images), 3 (rgb images), or 4 (cmyk, rgba images)."},{"t":"bpc","d":"Number of bits per component (quite often 8)."},{"t":"params","d":""}]},"ps_open_image_file":{"s":"Opens image from file","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"type","d":"The type of the image. Possible values are png,\n       jpeg, or eps."},{"t":"filename","d":"The name of the file containing the image data."},{"t":"stringparam","d":"Not used."},{"t":"intparam","d":"Not used."}]},"ps_open_memory_image":{"s":"Takes an GD image and returns an image for placement in a PS document","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"gd","d":""}]},"ps_place_image":{"s":"Places image on the page","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"imageid","d":"The resource identifier of the image as returned by \n       ps_open_image() or\n       ps_open_image_file()."},{"t":"x","d":"x-coordinate of the lower left corner of the image."},{"t":"y","d":"y-coordinate of the lower left corner of the image."},{"t":"scale","d":"The scaling factor for the image. A scale of 1.0 will result\n       in a resolution of 72 dpi, because each pixel is equivalent to\n       1 point."}]},"ps_rect":{"s":"Draws a rectangle","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"x-coordinate of the lower left corner of the rectangle."},{"t":"y","d":"y-coordinate of the lower left corner of the rectangle."},{"t":"width","d":"The width of the image."},{"t":"height","d":"The height of the image."}]},"ps_restore":{"s":"Restore previously save context","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_rotate":{"s":"Sets rotation factor","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"rot","d":"Angle of rotation in degree."}]},"ps_save":{"s":"Save current context","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_scale":{"s":"Sets scaling factor","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"Scaling factor in horizontal direction."},{"t":"y","d":"Scaling factor in vertical direction."}]},"ps_setcolor":{"s":"Sets current color","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"type","d":"The parameter type can be \n       both, fill, or\n       fillstroke."},{"t":"colorspace","d":"The colorspace should be one of gray,\n       rgb, cmyk, \n       spot, pattern. Depending on the\n       colorspace either only the first, the first three or all parameters\n       will be used."},{"t":"c1","d":"Depending on the colorspace this is either the red component (rgb),\n       the cyan component (cmyk), the gray value (gray), the identifier of\n       the spot color or the identifier of the pattern."},{"t":"c2","d":"Depending on the colorspace this is either the green component (rgb),\n       the magenta component (cmyk)."},{"t":"c3","d":"Depending on the colorspace this is either the blue component (rgb),\n       the yellow component (cmyk)."},{"t":"c4","d":"This must only be set in cmyk colorspace and specifies the black\n       component."}]},"ps_setdash":{"s":"Sets appearance of a dashed line","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"on","d":"The length of the dash."},{"t":"off","d":"The length of the gap between dashes."}]},"ps_setflat":{"s":"Sets flatness","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"value","d":"The value must be between 0.2 and 1."}]},"ps_setfont":{"s":"Sets font to use for following output","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"fontid","d":"The font identifier as returned by ps_findfont()."},{"t":"size","d":"The size of the font."}]},"ps_setgray":{"s":"Sets gray value","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"gray","d":"The value must be between 0 (white) and 1 (black)."}]},"ps_setlinecap":{"s":"Sets appearance of line ends","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"type","d":"The type of line ends. Possible values are\n       PS_LINECAP_BUTT,\n       PS_LINECAP_ROUND, or\n       PS_LINECAP_SQUARED."}]},"ps_setlinejoin":{"s":"Sets how contected lines are joined","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"type","d":"The way lines are joined. Possible values are\n       PS_LINEJOIN_MITER,\n       PS_LINEJOIN_ROUND, or\n       PS_LINEJOIN_BEVEL."}]},"ps_setlinewidth":{"s":"Sets width of a line","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"width","d":"The width of lines in points."}]},"ps_setmiterlimit":{"s":"Sets the miter limit","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"value","d":"The maximum ratio between the miter length and the line width. Larger\n       values (&gt; 10) will result in very long spikes when two lines meet\n       in a small angle. Keep the default unless you know what you are doing."}]},"ps_setoverprintmode":{"s":"Sets overprint mode","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"mode","d":""}]},"ps_setpolydash":{"s":"Sets appearance of a dashed line","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"arr","d":"arr is a list of length elements alternately for\n       the black and white portion."}]},"ps_set_border_color":{"s":"Sets color of border for annotations","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"red","d":"The red component of the border color."},{"t":"green","d":"The green component of the border color."},{"t":"blue","d":"The blue component of the border color."}]},"ps_set_border_dash":{"s":"Sets length of dashes for border of annotations","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"black","d":"The length of the dash."},{"t":"white","d":"The length of the gap between dashes."}]},"ps_set_border_style":{"s":"Sets border style of annotations","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"style","d":"style can be solid or\n       dashed."},{"t":"width","d":"The line width of the border."}]},"ps_set_info":{"s":"Sets information fields of document","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"key","d":"The name of the information field to set. The values which can be\n       set are Keywords, Subject,\n       Title, Creator,\n       Author, BoundingBox, and\n       Orientation. Be aware that some of them has a\n       meaning to PostScript viewers."},{"t":"value","d":"The value of the information field. The field\n       Orientation can be set to either\n       Portrait or Landscape. The\n       BoundingBox is a string consisting of four numbers.\n       The first two numbers are the coordinates of the lower left corner of\n       the page. The last two numbers are the coordinates of the upper\n       right corner."}]},"ps_set_parameter":{"s":"Sets certain parameters","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"name","d":"For a list of possible names see ps_get_parameter()."},{"t":"value","d":"The value of the parameter."}]},"ps_set_text_pos":{"s":"Sets position for text output","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"x-coordinate of the new text position."},{"t":"y","d":"y-coordinate of the new text position."}]},"ps_set_value":{"s":"Sets certain values","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"name","d":""},{"t":"","d":"The way how text is shown."},{"t":"","d":"The x coordinate for text output."},{"t":"","d":"The y coordinate for text output."},{"t":"","d":"The distance between words relative to the width of a space."},{"t":"","d":"The distance between lines in pixels."},{"t":"value","d":"The value of the parameter."}]},"ps_shading":{"s":"Creates a shading for later use","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"type","d":"The type of shading can be either radial or\n       axial. Each shading starts with the current fill\n       color and ends with the given color values passed in the parameters\n       c1 to c4\n       (see ps_setcolor() for their meaning)."},{"t":"x0, x1, y0, y1","d":"The coordinates x0, y0,\n       x1, y1 are the start and\n       end point of the shading. If the type of shading is\n       radial the two points are the middle points of\n       a starting and ending circle."},{"t":"c1, c2, c3, c4","d":"See ps_setcolor() for their meaning."},{"t":"optlist","d":"If the shading is of type radial the\n       optlist must also contain the parameters\n       r0 and r1 with the radius of the\n       start and end circle."}]},"ps_shading_pattern":{"s":"Creates a pattern based on a shading","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"shadingid","d":"The identifier of a shading previously created with\n       ps_shading()."},{"t":"optlist","d":"This argument is not currently used."}]},"ps_shfill":{"s":"Fills an area with a shading","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"shadingid","d":"The identifier of a shading previously created with\n       ps_shading()."}]},"ps_show":{"s":"Output text","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":"The text to be output."}]},"ps_show2":{"s":"Output a text at current position","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":""},{"t":"len","d":""}]},"ps_show_boxed":{"s":"Output text in a box","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":"The text to be output into the given box."},{"t":"left","d":"x-coordinate of the lower left corner of the box."},{"t":"bottom","d":"y-coordinate of the lower left corner of the box."},{"t":"width","d":"Width of the box."},{"t":"height","d":"Height of the box."},{"t":"hmode","d":"The parameter hmode can be &quot;justify&quot;,\n       &quot;fulljustify&quot;, &quot;right&quot;, &quot;left&quot;, or &quot;center&quot;. The difference of\n       &quot;justify&quot; and &quot;fulljustify&quot; just affects the last line of the box. In\n       fulljustify mode the last line will be left and right justified unless\n       this is also the last line of paragraph. In justify mode it will always\n       be left justified."},{"t":"feature","d":""}]},"ps_show_xy":{"s":"Output text at given position","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":"The text to be output."},{"t":"x","d":"x-coordinate of the lower left corner of the box surrounding the text."},{"t":"y","d":"y-coordinate of the lower left corner of the box surrounding the text."}]},"ps_show_xy2":{"s":"Output text at position","p":null},"ps_stringwidth":{"s":"Gets width of a string","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":"The text for which the width is to be calculated."},{"t":"fontid","d":"The identifier of the font to be used. If not font is specified\n       the current font will be used."},{"t":"size","d":"The size of the font. If no size is specified the current size\n       is used."}]},"ps_string_geometry":{"s":"Gets geometry of a string","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"text","d":"The text for which the geometry is to be calculated."},{"t":"fontid","d":"The identifier of the font to be used. If not font is specified\n       the current font will be used."},{"t":"size","d":"The size of the font. If no size is specified the current size\n       is used."}]},"ps_stroke":{"s":"Draws the current path","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."}]},"ps_symbol":{"s":"Output a glyph","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"ord","d":"The position of the glyph in the font encoding vector."}]},"ps_symbol_name":{"s":"Gets name of a glyph","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"ord","d":"The parameter ord is the position of the glyph\n       in the font encoding vector."},{"t":"fontid","d":"The identifier of the font to be used. If not font is specified\n       the current font will be used."}]},"ps_symbol_width":{"s":"Gets width of a glyph","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"ord","d":"The position of the glyph in the font encoding vector."},{"t":"fontid","d":"The identifier of the font to be used. If not font is specified\n       the current font will be used."},{"t":"size","d":"The size of the font. If no size is specified the current size\n       is used."}]},"ps_translate":{"s":"Sets translation","p":[{"t":"psdoc","d":"Resource identifier of the postscript file\n       as returned by ps_new()."},{"t":"x","d":"x-coordinate of the origin of the translated coordinate system."},{"t":"y","d":"y-coordinate of the origin of the translated coordinate system."}]},"putenv":{"s":"Sets the value of an environment variable","p":[{"t":"setting","d":"The setting, like &quot;FOO=BAR&quot;"}]},"px_close":{"s":"Closes a paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."}]},"px_create_fp":{"s":"Create a new paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"file","d":"File handle as returned by fopen()."},{"t":"fielddesc","d":"fielddesc\n is an array containing one element for each\n       field specification. A field specification is an array itself with\n       either two or three elements.The first element is always a string value\n       used as the name of the field. It may not be larger than ten\n       characters. The second element contains the field type which is one of\n       the constants listed in the table Constants for field types.\n       In the case of a character field or bcd field, you will have to provide\n       a third element specifying the length respectively the precesion of the\n       field. If your field specification contains blob fields, you will have\n       to make sure to either make the field large enough for all field values\n       to fit or specify a blob file with\n       px_set_blob_file() for storing the blobs. If this is\n       not done the field data is truncated."}]},"px_date2string":{"s":"","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"value","d":"Value as stored in paradox database field of type\n       PX_FIELD_DATE."},{"t":"format","d":"String format similar to the format used by date().\n        The placeholders support by this function is a subset of those\n        supported by date() (Y, y, m, n, d, j, L)."}]},"px_delete":{"s":"Deletes resource of paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."}]},"px_delete_record":{"s":"Deletes record from paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"num","d":"The record number is an artificial number counting records in the order\n       as they are stored in the database. The first record has number 0."}]},"px_get_field":{"s":"Returns the specification of a single field","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"fieldno","d":"Number of the field. The first field has number 0. Specifying a field\n       number less than 0 and greater or equal the number of fields will\n       trigger an error."}]},"px_get_info":{"s":"Return lots of information about a paradox file","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."}]},"px_get_parameter":{"s":"Gets a parameter","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"name","d":"The name can be one of the following:"},{"t":"","d":"The name of the table as it will be stored in the database header."},{"t":"","d":"The encoding for the output. Data which is being read from character\n          fields with px_get_record() or\n          px_retrieve_record() is recoded into the\n          targetencoding. If it is not set, then the data\n          will be delivered as stored in the database file."},{"t":"","d":"The encoding of the input data which is to be stored into the database.\n          When storing data of character fields in the database, the data is\n          expected to be delivered in this encoding."}]},"px_get_record":{"s":"Returns record of paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"num","d":"The record number is an artificial number counting records in the order\n       as they are stored in the database. The first record has number 0."},{"t":"mode","d":"The optional mode can be\n       PX_KEYTOLOWER or PX_KEYTOUPPER\n       in order to convert the keys of the returned array into lower or\n       upper case. If\n       mode is not passed or is 0, then the key will be\n       exactly like the field name. The element values will contain the field\n       values. NULL values will be retained and are different from 0.0, 0 or\n       the empty string. Fields of type PX_FIELD_TIME\n       will be returned as an integer counting the number of milliseconds\n       starting at midnight. A timestamp\n       (PX_FIELD_TIMESTAMP) and date\n       (PX_FIELD_DATE) are floating point respectively\n       int values counting milliseconds respectively days starting\n       at the beginning of julian calendar.\n       Use the functions px-timestamp2string() and\n       px-date2string() to convert them into a character\n       representation."}]},"px_get_schema":{"s":"Returns the database schema","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"mode","d":"If the optional mode is\n       PX_KEYTOLOWER or\n       PX_KEYTOUPPER the keys of the returned array\n       will be converted to lower\n       or upper case. If mode is 0 or not passed at all,\n       then the key name will be identical to the field name."}]},"px_get_value":{"s":"Gets a value","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"name","d":""},{"t":"","d":"The number of primary keys. Paradox databases always use the\n             first numprimkeys fields for the primary\n             index."}]},"px_insert_record":{"s":"Inserts record into paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"data","d":"Associated or indexed array containing the field values as e.g.\n       returned by px_retrieve_record()."}]},"px_new":{"s":"Create a new paradox object","p":null},"px_numfields":{"s":"Returns number of fields in a database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."}]},"px_numrecords":{"s":"Returns number of records in a database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."}]},"px_open_fp":{"s":"Open paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"file","d":"file is the return value from\n       fopen() with the actual database file as parameter.\n       Make sure the database is writable if you plan to update or insert\n       records."}]},"px_put_record":{"s":"Stores record into paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"record","d":"Associated or indexed array containing the field values as e.g.\n       returned by px_retrieve_record()."},{"t":"recpos","d":"This optional parameter may be used to specify a record number\n       greater than the current number of records in the database. The\n       function will add as many empty records as needed. There is hardly\n       any need for this parameter."}]},"px_retrieve_record":{"s":"Returns record of paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"num","d":"The record number is an artificial number counting records in the order\n       as they are stored in the database. The first record has number 0."},{"t":"mode","d":"The optional mode can be\n       PX_KEYTOLOWER or PX_KEYTOUPPER\n       in order to convert the keys into lower or upper case. If\n       mode is not passed or is 0, then the key will be\n       exactly like the field name. The element values will contain the field\n       values. NULL values will be retained and are different from 0.0, 0 or\n       the empty string. Fields of type PX_FIELD_TIME\n       will be returned as an integer counting the number of milliseconds\n       starting at midnight. A timestamp is a floating point value also\n       counting milliseconds starting at the beginning of julian calendar."}]},"px_set_blob_file":{"s":"Sets the file where blobs are read from","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"filename","d":"The name of the file. Its extension should be .MB."}]},"px_set_parameter":{"s":"Sets a parameter","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"name","d":"Depending on the parameter you want to set, name\n       can be one of the following."},{"t":"","d":"The name of the table as it will be stored in the database header."},{"t":"","d":"The encoding for the output. Data which is being read from\n           character fields is recoded into the targetencoding."},{"t":"","d":"The encoding of the input data which is to be stored into the\n           database."},{"t":"value","d":"The value of parameter to set. For inputencoding and targetencoding\n       this must be the name of the encoding as understood by iconv or\n       recode, e.g. iso-8859-1, utf-8, cp850."}]},"px_set_tablename":{"s":"Sets the name of a table (deprecated)","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"tablename","d":"The name of the table. If it is not set explicitly it will be set\n       to the name of the database file."}]},"px_set_targetencoding":{"s":"Sets the encoding for character fields (deprecated)","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"encoding","d":"The encoding for the output. Data which is being read from\n       character fields is recoded into the targetencoding."}]},"px_set_value":{"s":"Sets a value","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"name","d":"name can be one of the following."},{"t":"","d":"The number of primary keys. Paradox databases always use the first\n           numprimkeys\n fields for the primary index."},{"t":"value","d":""}]},"px_timestamp2string":{"s":"","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database."},{"t":"value","d":"Value as stored in paradox database field of type\n       PX_FIELD_TIME, or PX_FIELD_TIMESTAMP."},{"t":"format","d":"String format similar to the format used by date().\n        The placeholders support by this function is a subset of those\n        supported by date() (Y, y, m, n, d, j, H, h, G, g,\n        i, s, A, a, L)."}]},"px_update_record":{"s":"Updates record in paradox database","p":[{"t":"pxdoc","d":"Resource identifier of the paradox database\n       as returned by px_new()."},{"t":"data","d":"Associated array containing the field values as returned by\n       px_retrieve_record()."},{"t":"num","d":"The record number is an artificial number counting records in the order\n       as they are stored in the database. The first record has number 0."}]},"quoted_printable_decode":{"s":"Convert a quoted-printable string to an 8 bit string","p":[{"t":"str","d":"The input string."}]},"quoted_printable_encode":{"s":"Convert a 8 bit string to a quoted-printable string","p":[{"t":"str","d":"The input string."}]},"quotemeta":{"s":"Quote meta characters","p":[{"t":"str","d":"The input string."}]},"rad2deg":{"s":"","p":[{"t":"number","d":"A radian value"}]},"radius_acct_open":{"s":"Creates a Radius handle for accounting","p":null},"radius_add_server":{"s":"Adds a server","p":[{"t":"radius_handle","d":""},{"t":"hostname","d":"The hostname parameter specifies the server host,\n       either as a fully qualified domain name or as a dotted-quad IP address\n       in text form."},{"t":"port","d":"The port specifies the UDP port to contact on\n       the server. If port is given as 0, the library looks up the\n       radius\/udp or\n       radacct\/udp service in the\n       network services database, and uses the port found there.  If no entry\n       is found, the library uses the standard Radius ports, 1812 for\n       authentication and 1813 for accounting."},{"t":"secret","d":"The shared secret for the server host is passed to the\n       secret parameter. The Radius protocol ignores\n       all but the leading 128 bytes of the shared secret."},{"t":"timeout","d":"The timeout for receiving replies from the server is passed to the\n       timeout parameter, in units of seconds."},{"t":"max_tries","d":"The maximum number of repeated requests to make before giving up is\n       passed into the max_tries."}]},"radius_auth_open":{"s":"Creates a Radius handle for authentication","p":null},"radius_close":{"s":"Frees all ressources","p":null},"radius_config":{"s":"Causes the library to read the given configuration file","p":[{"t":"radius_handle","d":""},{"t":"file","d":"The pathname of the configuration file is passed as the file argument\n       to radius_config(). The library can also be\n       configured programmatically by calls to\n       radius_add_server()."}]},"radius_create_request":{"s":"Create accounting or authentication request","p":[{"t":"radius_handle","d":""},{"t":"type","d":"Type is RADIUS_ACCESS_REQUEST or\n       RADIUS_ACCOUNTING_REQUEST."}]},"radius_cvt_addr":{"s":"Converts raw data to IP-Address","p":null},"radius_cvt_int":{"s":"Converts raw data to integer","p":null},"radius_cvt_string":{"s":"Converts raw data to string","p":null},"radius_demangle":{"s":"Demangles data","p":null},"radius_demangle_mppe_key":{"s":"Derives mppe-keys from mangled data","p":null},"radius_get_attr":{"s":"Extracts an attribute","p":null},"radius_get_tagged_attr_data":{"s":"Extracts the data from a tagged attribute","p":[{"t":"data","d":"The tagged attribute to be decoded."}]},"radius_get_tagged_attr_tag":{"s":"Extracts the tag from a tagged attribute","p":[{"t":"data","d":"The tagged attribute to be decoded."}]},"radius_get_vendor_attr":{"s":"Extracts a vendor specific attribute","p":null},"radius_put_addr":{"s":"Attaches an IP address attribute","p":[{"t":"radius_handle","d":"The RADIUS resource."},{"t":"type","d":"The attribute type."},{"t":"addr","d":"An IPv4 address in string form, such as 10.0.0.1."},{"t":"options","d":"A bitmask of the attribute options. The available options include RADIUS_OPTION_TAGGED and RADIUS_OPTION_SALT."},{"t":"tag","d":"The attribute tag. This parameter is ignored unless the RADIUS_OPTION_TAGGED option is set."}]},"radius_put_attr":{"s":"Attaches a binary attribute","p":[{"t":"radius_handle","d":"The RADIUS resource."},{"t":"type","d":"The attribute type."},{"t":"value","d":"The attribute value, which will be treated as a raw binary string."},{"t":"options","d":"A bitmask of the attribute options. The available options include RADIUS_OPTION_TAGGED and RADIUS_OPTION_SALT."},{"t":"tag","d":"The attribute tag. This parameter is ignored unless the RADIUS_OPTION_TAGGED option is set."}]},"radius_put_int":{"s":"Attaches an integer attribute","p":[{"t":"radius_handle","d":"The RADIUS resource."},{"t":"type","d":"The attribute type."},{"t":"value","d":"The attribute value."},{"t":"options","d":"A bitmask of the attribute options. The available options include RADIUS_OPTION_TAGGED and RADIUS_OPTION_SALT."},{"t":"tag","d":"The attribute tag. This parameter is ignored unless the RADIUS_OPTION_TAGGED option is set."}]},"radius_put_string":{"s":"Attaches a string attribute","p":[{"t":"radius_handle","d":"The RADIUS resource."},{"t":"type","d":"The attribute type."},{"t":"value","d":"The attribute value. This value is expected by the underlying library\n       to be null terminated, therefore this parameter is not binary safe."},{"t":"options","d":"A bitmask of the attribute options. The available options include RADIUS_OPTION_TAGGED and RADIUS_OPTION_SALT."},{"t":"tag","d":"The attribute tag. This parameter is ignored unless the RADIUS_OPTION_TAGGED option is set."}]},"radius_put_vendor_addr":{"s":"Attaches a vendor specific IP address attribute","p":[{"t":"radius_handle","d":"The RADIUS resource."},{"t":"vendor","d":"The vendor ID."},{"t":"type","d":"The attribute type."},{"t":"addr","d":"An IPv4 address in string form, such as 10.0.0.1."},{"t":"options","d":"A bitmask of the attribute options. The available options include RADIUS_OPTION_TAGGED and RADIUS_OPTION_SALT."},{"t":"tag","d":"The attribute tag. This parameter is ignored unless the RADIUS_OPTION_TAGGED option is set."}]},"radius_put_vendor_attr":{"s":"Attaches a vendor specific binary attribute","p":[{"t":"radius_handle","d":"The RADIUS resource."},{"t":"vendor","d":"The vendor ID."},{"t":"type","d":"The attribute type."},{"t":"value","d":"The attribute value, which will be treated as a raw binary string."},{"t":"options","d":"A bitmask of the attribute options. The available options include RADIUS_OPTION_TAGGED and RADIUS_OPTION_SALT."},{"t":"tag","d":"The attribute tag. This parameter is ignored unless the RADIUS_OPTION_TAGGED option is set."}]},"radius_put_vendor_int":{"s":"Attaches a vendor specific integer attribute","p":[{"t":"radius_handle","d":"The RADIUS resource."},{"t":"vendor","d":"The vendor ID."},{"t":"type","d":"The attribute type."},{"t":"value","d":"The attribute value."},{"t":"options","d":"A bitmask of the attribute options. The available options include RADIUS_OPTION_TAGGED and RADIUS_OPTION_SALT."},{"t":"tag","d":"The attribute tag. This parameter is ignored unless the RADIUS_OPTION_TAGGED option is set."}]},"radius_put_vendor_string":{"s":"Attaches a vendor specific string attribute","p":[{"t":"radius_handle","d":"The RADIUS resource."},{"t":"vendor","d":"The vendor ID."},{"t":"type","d":"The attribute type."},{"t":"value","d":"The attribute value. This value is expected by the underlying library\n       to be null terminated, therefore this parameter is not binary safe."},{"t":"options","d":"A bitmask of the attribute options. The available options include RADIUS_OPTION_TAGGED and RADIUS_OPTION_SALT."},{"t":"tag","d":"The attribute tag. This parameter is ignored unless the RADIUS_OPTION_TAGGED option is set."}]},"radius_request_authenticator":{"s":"Returns the request authenticator","p":null},"radius_salt_encrypt_attr":{"s":"Salt-encrypts a value","p":[{"t":"data","d":"The data to be salt-encrypted."}]},"radius_send_request":{"s":"Sends the request and waites for a reply","p":null},"radius_server_secret":{"s":"Returns the shared secret","p":null},"radius_strerror":{"s":"Returns an error message","p":null},"rand":{"s":"Generate a random integer","p":[{"t":"min","d":"The lowest value to return (default: 0)"},{"t":"max","d":"The highest value to return (default: getrandmax())"}]},"range":{"s":"Create an array containing a range of elements","p":[{"t":"start","d":"First value of the sequence."},{"t":"end","d":"The sequence is ended upon reaching the\n       end value."},{"t":"step","d":"If a step value is given, it will be used as the\n       increment between elements in the sequence.  step\n       should be given as a positive number.  If not specified,\n       step will default to 1."}]},"rar_wrapper_cache_stats":{"s":"Cache hits and misses for the URL wrapper","p":null},"rawurldecode":{"s":"Decode URL-encoded strings","p":[{"t":"str","d":"The URL to be decoded."}]},"rawurlencode":{"s":"URL-encode according to RFC 3986","p":[{"t":"str","d":"The URL to be encoded."}]},"readdir":{"s":"Read entry from directory handle","p":[{"t":"dir_handle","d":"The directory handle resource previously opened\n       with opendir(). If the directory handle is \n       not specified, the last link opened by opendir() \n       is assumed."}]},"readfile":{"s":"Outputs a file","p":[{"t":"filename","d":"The filename being read."},{"t":"use_include_path","d":"You can use the optional second parameter and set it to TRUE, if\n       you want to search for the file in the include_path, too."},{"t":"context","d":"A context stream resource."}]},"readgzfile":{"s":"Output a gz-file","p":[{"t":"filename","d":"The file name. This file will be opened from the filesystem and its\n       contents written to standard output."},{"t":"use_include_path","d":"You can set this optional parameter to 1, if you\n       want to search for the file in the include_path too."}]},"readline":{"s":"Reads a line","p":[{"t":"prompt","d":"You may specify a string with which to prompt the user."}]},"readline_add_history":{"s":"Adds a line to the history","p":[{"t":"line","d":"The line to be added in the history."}]},"readline_callback_handler_install":{"s":"Initializes the readline callback interface and terminal, prints the prompt and returns immediately","p":[{"t":"prompt","d":"The prompt message."},{"t":"callback","d":"The callback function takes one parameter; the\n       user input returned."}]},"readline_callback_handler_remove":{"s":"Removes a previously installed callback handler and restores terminal settings","p":null},"readline_callback_read_char":{"s":"Reads a character and informs the readline callback interface when a line is received","p":null},"readline_clear_history":{"s":"Clears the history","p":null},"readline_completion_function":{"s":"Registers a completion function","p":[{"t":"function","d":"You must supply the name of an existing function which accepts a\n       partial command line and returns an array of possible matches."}]},"readline_info":{"s":"Gets\/sets various internal readline variables","p":[{"t":"varname","d":"A variable name."},{"t":"newvalue","d":"If provided, this will be the new value of the setting."}]},"readline_list_history":{"s":"Lists the history","p":null},"readline_on_new_line":{"s":"Inform readline that the cursor has moved to a new line","p":null},"readline_read_history":{"s":"Reads the history","p":[{"t":"filename","d":"Path to the filename containing the command history."}]},"readline_redisplay":{"s":"Redraws the display","p":null},"readline_write_history":{"s":"Writes the history","p":[{"t":"filename","d":"Path to the saved file."}]},"readlink":{"s":"Returns the target of a symbolic link","p":[{"t":"path","d":"The symbolic link path."}]},"read_exif_data":{"s":"Alias of exif_read_data()","p":null},"realpath":{"s":"Returns canonicalized absolute pathname","p":[{"t":"path","d":"The path being checked.\n       Note: \n        \n         Whilst a path must be supplied, the value can be blank or NULL\n         In these cases, the value is interpreted as the current directory."}]},"realpath_cache_get":{"s":"Get realpath cache entries","p":null},"realpath_cache_size":{"s":"Get realpath cache size","p":null},"recode":{"s":"Alias of recode_string()","p":null},"recode_file":{"s":"Recode from file to file according to recode request","p":[{"t":"request","d":"The desired recode request type"},{"t":"input","d":"A local file handle resource for \n       the input"},{"t":"output","d":"A local file handle resource for \n       the output"}]},"recode_string":{"s":"Recode a string according to a recode request","p":[{"t":"request","d":"The desired recode request type"},{"t":"string","d":"The string to be recoded"}]},"rename":{"s":"Renames a file or directory","p":[{"t":"oldname","d":""},{"t":"newname","d":"The new name."},{"t":"context","d":""}]},"rename_function":{"s":"Renames orig_name to new_name in the global function table","p":[{"t":"original_name","d":"The original function name."},{"t":"new_name","d":"The new name for the original_name function."}]},"reset":{"s":"Set the internal pointer of an array to its first element","p":[{"t":"array","d":"The input array."}]},"restore_error_handler":{"s":"Restores the previous error handler function","p":null},"restore_include_path":{"s":"Restores the value of the include_path configuration option","p":null},"rewind":{"s":"Rewind the position of a file pointer","p":[{"t":"handle","d":"The file pointer must be valid, and must point to a file\n       successfully opened by fopen()."}]},"rewinddir":{"s":"Rewind directory handle","p":[{"t":"dir_handle","d":"The directory handle resource previously opened\n       with opendir(). If the directory handle is \n       not specified, the last link opened by opendir() \n       is assumed."}]},"rmdir":{"s":"Removes directory","p":[{"t":"dirname","d":"Path to the directory."},{"t":"context","d":""}]},"round":{"s":"Rounds a float","p":[{"t":"val","d":"The value to round"},{"t":"precision","d":"The optional number of decimal digits to round to."},{"t":"mode","d":"Use one of the following constants to specify the mode in which rounding occurs.\n       \n        \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           PHP_ROUND_HALF_UP\n           \n            Round val up to precision decimal places\n            away from zero, when it is half way there. Making 1.5 into 2 and -1.5 into -2.\n           \n          \n\n          \n           PHP_ROUND_HALF_DOWN\n           \n            Round val down to precision decimal places\n            towards zero, when it is half way there. Making 1.5 into 1 and -1.5 into -1.\n           \n          \n\n          \n           PHP_ROUND_HALF_EVEN\n           \n            Round val to precision decimal places\n            towards the next even value.\n           \n          \n\n          \n           PHP_ROUND_HALF_ODD\n           \n            Round val to precision decimal places\n            towards the next odd value."}]},"rpm_close":{"s":"Closes an RPM file","p":[{"t":"rpmr","d":"A file pointer resource successfully opened by\n        rpm_open()."}]},"rpm_get_tag":{"s":"Retrieves a header tag from an RPM file","p":[{"t":"rpmr","d":"A file pointer resource successfully opened by\n        rpm_open()."},{"t":"tagnum","d":"The tag number to retrieve from the RPM header.  This value\n        can be specified using the list of constants defined by this\n        module."}]},"rpm_is_valid":{"s":"Tests a filename for validity as an RPM file","p":[{"t":"filename","d":"The filename of the RPM file you wish to check for validity."}]},"rpm_open":{"s":"Opens an RPM file","p":[{"t":"filename","d":"The filename of the RPM file you wish to open."}]},"rrdc_disconnect":{"s":"Close any outstanding connection to rrd caching daemon","p":null},"rrd_create":{"s":"Creates rrd database file","p":[{"t":"filename","d":"Filename for newly created rrd file."},{"t":"options","d":"Options for rrd create - list of strings. See man page of rrd create\n      for whole list of options."}]},"rrd_error":{"s":"Gets latest error message.","p":null},"rrd_fetch":{"s":"Fetch the data for graph as array.","p":[{"t":"filename","d":"RRD database file name."},{"t":"options","d":"Array of options for resolution specification."}]},"rrd_first":{"s":"Gets the timestamp of the first sample from rrd file.","p":[{"t":"file","d":"RRD database file name."},{"t":"raaindex","d":"The index number of the RRA that is to be examined. Default value is 0."}]},"rrd_graph":{"s":"Creates image from a data.","p":[{"t":"filename","d":"The filename to output the graph to. This will generally end in either\n      .png, .svg or\n      .eps, depending on the format you want to output."},{"t":"options","d":"Options for generating image. See man page of rrd graph for all\n      possible options. All options (data definitions, variable defintions, etc.)\n      are allowed."}]},"rrd_info":{"s":"Gets information about rrd file","p":[{"t":"file","d":"RRD database file name."}]},"rrd_last":{"s":"Gets unix timestamp of the last sample.","p":[{"t":"filename","d":"RRD database file name."}]},"rrd_lastupdate":{"s":"Gets information about last updated data.","p":[{"t":"file","d":"RRD database file name."}]},"rrd_restore":{"s":"Restores the RRD file from XML dump.","p":[{"t":"xml_file","d":"XML filename with the dump of the original RRD database file."},{"t":"rrd_file","d":"Restored RRD database file name."},{"t":"options","d":"Array of options for restoring. See man page for rrd restore."}]},"rrd_tune":{"s":"Tunes some RRD database file header options.","p":[{"t":"filename","d":"RRD database file name."},{"t":"options","d":"Options with RRD database file properties which will be changed. See\n      rrd tune man page for details."}]},"rrd_update":{"s":"Updates the RRD database.","p":[{"t":"filename","d":"RRD database file name. This database will be updated."},{"t":"options","d":"Options for updating the RRD database. This is list of strings. See man page of rrd update\n      for whole list of options."}]},"rrd_version":{"s":"Gets information about underlying rrdtool library","p":null},"rrd_xport":{"s":"Exports the information about RRD database.","p":[{"t":"options","d":"Array of options for the export, see rrd xport man page."}]},"rsort":{"s":"Sort an array in reverse order","p":[{"t":"array","d":"The input array."},{"t":"sort_flags","d":"You may modify the behavior of the sort using the optional\n       parameter sort_flags, for details see\n       sort()."}]},"rtrim":{"s":"Strip whitespace (or other characters) from the end of a string","p":[{"t":"str","d":"The input string."},{"t":"character_mask","d":"You can also specify the characters you want to strip, by means\n       of the character_mask parameter.\n       Simply list all characters that you want to be stripped. With\n       .. you can specify a range of characters."}]},"runkit_class_adopt":{"s":"","p":[{"t":"classname","d":"Name of class to be adopted"},{"t":"parentname","d":"Parent class which child class is extending"}]},"runkit_class_emancipate":{"s":"","p":[{"t":"classname","d":"Name of class to emancipate"}]},"runkit_constant_add":{"s":"","p":[{"t":"constname","d":"Name of constant to declare.  Either a string to indicate a global constant,\n       or classname::constname to indicate a class constant."},{"t":"value","d":"NULL, Bool, Long, Double, String, or Resource value to store in the new constant."}]},"runkit_constant_redefine":{"s":"","p":[{"t":"constname","d":"Constant to redefine.  Either string indicating global constant,\n       or classname::constname indicating class constant."},{"t":"newvalue","d":"New value to assign to constant."}]},"runkit_constant_remove":{"s":"","p":[{"t":"constname","d":"Name of constant to remove.  Either a string indicating a global constant,\n       or classname::constname indicating a class constant."}]},"runkit_function_add":{"s":"","p":[{"t":"funcname","d":"Name of function to be created"},{"t":"arglist","d":"Comma separated argument list"},{"t":"code","d":"Code making up the function"}]},"runkit_function_copy":{"s":"","p":[{"t":"funcname","d":"Name of existing function"},{"t":"targetname","d":"Name of new function to copy definition to"}]},"runkit_function_redefine":{"s":"","p":[{"t":"funcname","d":"Name of function to redefine"},{"t":"arglist","d":"New list of arguments to be accepted by function"},{"t":"code","d":"New code implementation"}]},"runkit_function_remove":{"s":"","p":[{"t":"funcname","d":"Name of function to be deleted"}]},"runkit_function_rename":{"s":"","p":[{"t":"funcname","d":"Current function name"},{"t":"newname","d":"New function name"}]},"runkit_import":{"s":"","p":[{"t":"filename","d":"Filename to import function and class definitions from"},{"t":"flags","d":"Bitwise OR of the RUNKIT_IMPORT_* family of constants."}]},"runkit_lint":{"s":"","p":[{"t":"code","d":"PHP Code to be lint checked"}]},"runkit_lint_file":{"s":"","p":[{"t":"filename","d":"File containing PHP Code to be lint checked"}]},"runkit_method_add":{"s":"Dynamically adds a new method to a given class","p":[{"t":"classname","d":"The class to which this method will be added"},{"t":"methodname","d":"The name of the method to add"},{"t":"args","d":"Comma-delimited list of arguments for the newly-created method"},{"t":"code","d":"The code to be evaluated when methodname\n       is called"},{"t":"flags","d":"The type of method to create, can be\n       RUNKIT_ACC_PUBLIC,\n       RUNKIT_ACC_PROTECTED or\n       RUNKIT_ACC_PRIVATE"}]},"runkit_method_copy":{"s":"Copies a method from class to another","p":[{"t":"dClass","d":"Destination class for copied method"},{"t":"dMethod","d":"Destination method name"},{"t":"sClass","d":"Source class of the method to copy"},{"t":"sMethod","d":"Name of the method to copy from the source class. If this parameter is\n       omitted, the value of dMethod is assumed."}]},"runkit_method_redefine":{"s":"Dynamically changes the code of the given method","p":[{"t":"classname","d":"The class in which to redefine the method"},{"t":"methodname","d":"The name of the method to redefine"},{"t":"args","d":"Comma-delimited list of arguments for the redefined method"},{"t":"code","d":"The new code to be evaluated when methodname\n       is called"},{"t":"flags","d":"The redefined method can be\n       RUNKIT_ACC_PUBLIC,\n       RUNKIT_ACC_PROTECTED or\n       RUNKIT_ACC_PRIVATE"}]},"runkit_method_remove":{"s":"Dynamically removes the given method","p":[{"t":"classname","d":"The class in which to remove the method"},{"t":"methodname","d":"The name of the method to remove"}]},"runkit_method_rename":{"s":"Dynamically changes the name of the given method","p":[{"t":"classname","d":"The class in which to rename the method"},{"t":"methodname","d":"The name of the method to rename"},{"t":"newname","d":"The new name to give to the renamed method"}]},"runkit_return_value_used":{"s":"Determines if the current functions return value will be used","p":null},"runkit_sandbox_output_handler":{"s":"","p":[{"t":"sandbox","d":"Object instance of Runkit_Sandbox class on which to set output handling."},{"t":"callback","d":"Name of a function which expects one parameter.\n       Output generated by sandbox will be passed\n       to this callback.  Anything returned by the callback will be displayed\n       normally.  If this parameter is not passed then output handling will not be changed.\n       If a non-truth value is passed, output handling will be disabled and will revert to\n       direct display."}]},"scandir":{"s":"List files and directories inside the specified path","p":[{"t":"directory","d":"The directory that will be scanned."},{"t":"sorting_order","d":"By default, the sorted order is alphabetical in ascending order.  If\n       the optional sorting_order is set to\n       SCANDIR_SORT_DESCENDING, then the sort order is\n       alphabetical in descending order. If it is set to\n       SCANDIR_SORT_NONE then the result is unsorted."},{"t":"context","d":"For a description of the context parameter, \n       refer to the streams section of\n       the manual."}]},"sem_acquire":{"s":"Acquire a semaphore","p":[{"t":"sem_identifier","d":"sem_identifier is a semaphore resource,\n       obtained from sem_get()."}]},"sem_get":{"s":"Get a semaphore id","p":[{"t":"key","d":""},{"t":"max_acquire","d":"The number of processes that can acquire the semaphore simultaneously\n       is set to max_acquire."},{"t":"perm","d":"The semaphore permissions. Actually this value is\n       set only if the process finds it is the only process currently\n       attached to the semaphore."},{"t":"auto_release","d":"Specifies if the semaphore should be automatically released on request\n       shutdown."}]},"sem_release":{"s":"Release a semaphore","p":[{"t":"sem_identifier","d":"A Semaphore resource handle as returned by\n       sem_get()."}]},"sem_remove":{"s":"Remove a semaphore","p":[{"t":"sem_identifier","d":"A semaphore resource identifier as returned\n       by sem_get()."}]},"session_cache_expire":{"s":"Return current cache expire","p":[{"t":"new_cache_expire","d":"If new_cache_expire is given, the current cache\n       expire is replaced with new_cache_expire."}]},"session_cache_limiter":{"s":"Get and\/or set the current cache limiter","p":[{"t":"cache_limiter","d":"If cache_limiter is specified, the name of the\n       current cache limiter is changed to the new value."}]},"session_commit":{"s":"Alias of session_write_close()","p":null},"session_decode":{"s":"Decodes session data from a session encoded string","p":[{"t":"data","d":"The encoded data to be stored."}]},"session_destroy":{"s":"Destroys all data registered to a session","p":null},"session_encode":{"s":"Encodes the current session data as a session encoded string","p":null},"session_get_cookie_params":{"s":"Get the session cookie parameters","p":null},"session_id":{"s":"Get and\/or set the current session id","p":[{"t":"id","d":"If id is specified, it will replace the current\n        session id. session_id() needs to be called before\n        session_start() for that purpose. Depending on the\n        session handler, not all characters are allowed within the session id.\n        For example, the file session handler only allows characters in the\n        range a-z A-Z 0-9 , (comma) and - (minus)!"}]},"session_is_registered":{"s":"Find out whether a global variable is registered in a session","p":[{"t":"name","d":"The variable name."}]},"session_module_name":{"s":"Get and\/or set the current session module","p":[{"t":"module","d":"If module is specified, that module will be\n       used instead."}]},"session_name":{"s":"Get and\/or set the current session name","p":[{"t":"name","d":"The session name references the name of the session, which is \n       used in cookies and URLs (e.g. PHPSESSID). It\n       should contain only alphanumeric characters; it should be short and\n       descriptive (i.e. for users with enabled cookie warnings).\n       If name is specified, the name of the current\n       session is changed to its value."}]},"session_pgsql_add_error":{"s":"Increments error counts and sets last error message","p":[{"t":"error_level","d":""},{"t":"error_message","d":""}]},"session_pgsql_get_error":{"s":"Returns number of errors and last error message","p":[{"t":"with_error_message","d":"Set to TRUE the literal error message for each error is also returned."}]},"session_pgsql_get_field":{"s":"Get custom field value","p":null},"session_pgsql_reset":{"s":"Reset connection to session database servers","p":null},"session_pgsql_set_field":{"s":"Set custom field value","p":[{"t":"value","d":""}]},"session_pgsql_status":{"s":"Get current save handler status","p":null},"session_regenerate_id":{"s":"","p":[{"t":"delete_old_session","d":"Whether to delete the old associated session file or not."}]},"session_register":{"s":"Register one or more global variables with the current session","p":[{"t":"name","d":"A string holding the name of a variable or an array consisting of\n       variable names or other arrays."},{"t":"...","d":""}]},"session_register_shutdown":{"s":"Session shutdown function","p":null},"session_save_path":{"s":"Get and\/or set the current session save path","p":[{"t":"path","d":"Session data path. If specified, the path to which data is saved will\n       be changed. session_save_path() needs to be called\n       before session_start() for that purpose."}]},"session_set_cookie_params":{"s":"Set the session cookie parameters","p":[{"t":"lifetime","d":"Lifetime of the\n       session cookie, defined in seconds."},{"t":"path","d":"Path on the domain where\n       the cookie will work. Use a single slash (&#039;\/&#039;) for all paths on the\n       domain."},{"t":"domain","d":"Cookie domain, for\n       example &#039;www.php.net&#039;. To make cookies visible on all subdomains then\n       the domain must be prefixed with a dot like &#039;.php.net&#039;."},{"t":"secure","d":"If TRUE cookie will only be sent over\n       secure connections."},{"t":"httponly","d":"If set to TRUE then PHP will attempt to send the\n       httponly\n       flag when setting the session cookie."}]},"session_set_save_handler":{"s":"Sets user-level session storage functions","p":[{"t":"sessionhandler","d":"An instance of a class implementing\n       SessionHandlerInterface, such as\n       SessionHandler, to register as the session\n       handler. Since PHP 5.4 only."},{"t":"register_shutdown","d":"Register session_write_close() as a\n       register_shutdown_function() function."},{"t":"open(string $savePath, string $sessionName)","d":"The open callback works like a constructor in classes and is\n       executed when the session is being opened.  It is the first callback\n       function executed when the session is started automatically or\n       manually with session_start().\n       Return value is TRUE for success, FALSE for failure."},{"t":"close()","d":"The close callback works like a destructor in classes and is\n       executed after the session write callback has been called. It is also invoked when\n       session_write_close() is called.\n       Return value should be TRUE for success, FALSE for failure."},{"t":"read(string $sessionId)","d":"The read callback must always return a session encoded (serialized)\n       string, or an empty string if there is no data to read."},{"t":"write(string $sessionId, string $data)","d":"The write callback is called when the session needs to be saved and closed. This\n       callback receives the current session ID a serialized version the $_SESSION superglobal.  The serialization\n       method used internally by PHP is specified in the session.serialize_handler ini setting."},{"t":"destroy($sessionId)","d":"This callback is executed when a session is destroyed with session_destroy() or with\n       session_regenerate_id() with the destroy parameter set to TRUE.\n       Return value should be TRUE for success, FALSE for failure."},{"t":"gc($lifetime)","d":"The garbage collector callback is invoked internally by PHP periodically in order to\n       purge old session data.  The frequency is controlled by\n       session.gc_probability and session.gc_divisor.\n       The value of lifetime which is passed to this callback can be set in session.gc_maxlifetime.\n       Return value should be TRUE for success, FALSE for failure."}]},"session_start":{"s":"Start new or resume existing session","p":null},"session_status":{"s":"Returns the current session status","p":null},"session_unregister":{"s":"Unregister a global variable from the current session","p":[{"t":"name","d":"The variable name."}]},"session_unset":{"s":"Free all session variables","p":null},"session_write_close":{"s":"Write session data and end session","p":null},"setcookie":{"s":"Send a cookie","p":[{"t":"name","d":"The name of the cookie."},{"t":"value","d":"The value of the cookie.  This value is stored on the clients computer;\n       do not store sensitive information.  Assuming the\n       name is &#039;cookiename&#039;, this\n       value is retrieved through $_COOKIE['cookiename']"},{"t":"expire","d":"The time the cookie expires.  This is a Unix timestamp so is\n       in number of seconds since the epoch.  In other words, you&#039;ll\n       most likely set this with the time() function\n       plus the number of seconds before you want it to expire.  Or\n       you might use mktime().\n       time()+60*60*24*30 will set the cookie to\n       expire in 30 days. If set to 0, or omitted, the cookie will expire at\n       the end of the session (when the browser closes)."},{"t":"path","d":"The path on the server in which the cookie will be available on.\n       If set to &#039;\/&#039;, the cookie will be available\n       within the entire domain.  If set to\n       &#039;\/foo\/&#039;, the cookie will only be available\n       within the \/foo\/ directory and all\n       sub-directories such as \/foo\/bar\/ of\n       domain.  The default value is the\n       current directory that the cookie is being set in."},{"t":"domain","d":"The domain that the cookie is available to. Setting the domain to\n       &#039;www.example.com&#039; will make the cookie\n       available in the www subdomain and higher subdomains.\n       Cookies available to a lower domain, such as\n       &#039;example.com&#039; will be available to higher subdomains,\n       such as &#039;www.example.com&#039;.\n       \n       Older browsers still implementing the deprecated\n       &raquo;&nbsp;RFC 2109 may require a leading\n       . to match all subdomains."},{"t":"secure","d":"Indicates that the cookie should only be transmitted over a\n       secure HTTPS connection from the client. When set to TRUE, the\n       cookie will only be set if a secure connection exists.\n       On the server-side, it&#039;s on the programmer to send this\n       kind of cookie only on secure connection (e.g. with respect to\n       $_SERVER[\"HTTPS\"])."},{"t":"httponly","d":"When TRUE the cookie will be made accessible only through the HTTP\n       protocol. This means that the cookie won&#039;t be accessible by\n       scripting languages, such as JavaScript. It has been suggested that\n       this setting can effectively help to reduce identity theft through\n       XSS attacks (although it is not supported by all browsers), but that\n       claim is often disputed. Added in PHP 5.2.0.\n       TRUE or FALSE"}]},"setlocale":{"s":"Set locale information","p":[{"t":"category","d":"category is a named constant specifying the\n       category of the functions affected by the locale setting:\n       \n        \n         \n          LC_ALL for all of the below\n         \n        \n        \n         \n          LC_COLLATE for string comparison, see\n          strcoll()\n         \n        \n        \n         \n          LC_CTYPE for character classification and conversion, for\n          example strtoupper()\n         \n        \n        \n         \n          LC_MONETARY for localeconv()\n         \n        \n        \n         \n          LC_NUMERIC for decimal separator (See also\n          localeconv())\n         \n        \n        \n         \n          LC_TIME for date and time formatting with\n          strftime()\n         \n        \n        \n         \n          LC_MESSAGES for system responses (available if PHP was compiled with\n          libintl)"},{"t":"locale","d":"If locale is NULL or the empty string\n       &quot;&quot;, the locale names will be set from the\n       values of environment variables with the same names as the above\n       categories, or from &quot;LANG&quot;."},{"t":"...","d":"(Optional string or array parameters to try as locale settings until\n       success.)"}]},"setproctitle":{"s":"Set the process title","p":[{"t":"title","d":"The title to use as the process title."}]},"setrawcookie":{"s":"Send a cookie without urlencoding the cookie value","p":null},"setthreadtitle":{"s":"Set the thread title","p":[{"t":"title","d":"The title to use as the thread title."}]},"set_error_handler":{"s":"Sets a user-defined error handler function","p":[{"t":"error_handler","d":"A callback with the following signature.\n       NULL may be passed instead, to reset this handler to its default state."}]},"set_exception_handler":{"s":"","p":[{"t":"exception_handler","d":"Name of the function to be called when an uncaught exception occurs.\n       This function must be defined before calling\n       set_exception_handler(). This handler function\n       needs to accept one parameter, which will be the exception object that\n       was thrown. This is the handler signature:"}]},"set_file_buffer":{"s":"Alias of stream_set_write_buffer()","p":null},"set_include_path":{"s":"Sets the include_path configuration option","p":[{"t":"new_include_path","d":"The new value for the include_path"}]},"set_magic_quotes_runtime":{"s":"Sets the current active configuration setting of magic_quotes_runtime","p":[{"t":"new_setting","d":"FALSE for off, TRUE for on."}]},"set_socket_blocking":{"s":"Alias of stream_set_blocking()","p":null},"set_time_limit":{"s":"Limits the maximum execution time","p":[{"t":"seconds","d":"The maximum execution time, in seconds. If set to zero, no time limit\n       is imposed."}]},"sha1":{"s":"Calculate the sha1 hash of a string","p":[{"t":"str","d":"The input string."},{"t":"raw_output","d":"If the optional raw_output is set to TRUE,\n       then the sha1 digest is instead returned in raw binary format with a\n       length of 20, otherwise the returned value is a 40-character\n       hexadecimal number."}]},"sha1_file":{"s":"Calculate the sha1 hash of a file","p":[{"t":"filename","d":"The filename of the file to hash."},{"t":"raw_output","d":"When TRUE, returns the digest in raw binary format with a length of\n       20."}]},"shell_exec":{"s":"Execute command via shell and return the complete output as a string","p":[{"t":"cmd","d":"The command that will be executed."}]},"shmop_close":{"s":"Close shared memory block","p":[{"t":"shmid","d":"The shared memory block identifier created by \n       shmop_open()"}]},"shmop_delete":{"s":"Delete shared memory block","p":[{"t":"shmid","d":"The shared memory block identifier created by \n       shmop_open()"}]},"shmop_open":{"s":"Create or open shared memory block","p":[{"t":"key","d":"System&#039;s id for the shared memory block.\n       Can be passed as a decimal or hex."},{"t":"flags","d":"The flags that you can use:\n       \n        \n         \n          &quot;a&quot; for access (sets SHM_RDONLY for shmat)\n          use this flag when you need to open an existing shared memory\n          segment for read only\n         \n        \n        \n         \n          &quot;c&quot; for create (sets IPC_CREATE)\n          use this flag when you need to create a new shared memory segment\n          or if a segment with the same key exists, try to open it for read\n          and write\n         \n        \n        \n         \n          &quot;w&quot; for read &amp; write access\n          use this flag when you need to read and write to a shared memory\n          segment, use this flag in most cases.\n         \n        \n        \n         \n          &quot;n&quot; create a new memory segment (sets IPC_CREATE|IPC_EXCL)\n          use this flag when you want to create a new shared memory segment\n          but if one already exists with the same flag, fail. This is useful\n          for security purposes, using this you can prevent race condition\n          exploits."},{"t":"mode","d":"The permissions that you wish to assign to your memory segment, those\n       are the same as permission for a file. Permissions need to be passed\n       in octal form, like for example 0644"},{"t":"size","d":"The size of the shared memory block you wish to create in bytes"}]},"shmop_read":{"s":"Read data from shared memory block","p":[{"t":"shmid","d":"The shared memory block identifier created by \n       shmop_open()"},{"t":"start","d":"Offset from which to start reading"},{"t":"count","d":"The number of bytes to read"}]},"shmop_size":{"s":"Get size of shared memory block","p":[{"t":"shmid","d":"The shared memory block identifier created by \n       shmop_open()"}]},"shmop_write":{"s":"Write data into shared memory block","p":[{"t":"shmid","d":"The shared memory block identifier created by \n       shmop_open()"},{"t":"data","d":"A string to write into shared memory block"},{"t":"offset","d":"Specifies where to start writing data inside the shared memory\n       segment."}]},"shm_attach":{"s":"Creates or open a shared memory segment","p":[{"t":"key","d":"A numeric shared memory segment ID"},{"t":"memsize","d":"The memory size. If not provided, default to the\n       sysvshm.init_mem in the php.ini, otherwise 10000\n       bytes."},{"t":"perm","d":"The optional permission bits. Default to 0666."}]},"shm_detach":{"s":"Disconnects from shared memory segment","p":[{"t":"shm_identifier","d":"A shared memory resource handle as returned by\n       shm_attach()"}]},"shm_get_var":{"s":"Returns a variable from shared memory","p":[{"t":"shm_identifier","d":"Shared memory segment, obtained from shm_attach()."},{"t":"variable_key","d":"The variable key."}]},"shm_has_var":{"s":"Check whether a specific entry exists","p":[{"t":"shm_identifier","d":"Shared memory segment, obtained from shm_attach()."},{"t":"variable_key","d":"The variable key."}]},"shm_put_var":{"s":"Inserts or updates a variable in shared memory","p":[{"t":"shm_identifier","d":"A shared memory resource handle as returned by\n       shm_attach()"},{"t":"variable_key","d":"The variable key."},{"t":"variable","d":"The variable. All variable types\n       that serialize() supports may be used: generally\n       this means all types except for resources and some internal objects\n       that cannot be serialized."}]},"shm_remove":{"s":"Removes shared memory from Unix systems","p":[{"t":"shm_identifier","d":"The shared memory identifier as returned by\n       shm_attach()"}]},"shm_remove_var":{"s":"","p":[{"t":"shm_identifier","d":"The shared memory identifier as returned by\n       shm_attach()"},{"t":"variable_key","d":"The variable key."}]},"show_source":{"s":"Alias of highlight_file()","p":null},"shuffle":{"s":"Shuffle an array","p":[{"t":"array","d":"The array."}]},"signeurlpaiement":{"s":"Obtain the payment url (needs 2 arguments)","p":null},"similar_text":{"s":"Calculate the similarity between two strings","p":[{"t":"first","d":"The first string."},{"t":"second","d":"The second string."},{"t":"percent","d":"By passing a reference as third argument,\n       similar_text() will calculate the similarity in\n       percent for you."}]},"sin":{"s":"Sine","p":[{"t":"arg","d":"A value in radians"}]},"sinh":{"s":"Hyperbolic sine","p":[{"t":"arg","d":"The argument to process"}]},"sizeof":{"s":"Alias of count()","p":null},"sleep":{"s":"Delay execution","p":[{"t":"seconds","d":"Halt time in seconds."}]},"snmp2_get":{"s":"Fetch an SNMP object","p":[{"t":"host","d":"The SNMP agent."},{"t":"community","d":"The read community."},{"t":"object_id","d":"The SNMP object."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp2_getnext":{"s":"Fetch the SNMP object which follows the given object id","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"community","d":"The read community."},{"t":"object_id","d":"The SNMP object id which precedes the wanted one."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp2_real_walk":{"s":"Return all objects including their respective object ID within the specified one","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"community","d":"The read community."},{"t":"object_id","d":"The SNMP object id which precedes the wanted one."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp2_set":{"s":"Set the value of an SNMP object","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"community","d":"The write community."},{"t":"object_id","d":"The SNMP object id."},{"t":"type","d":"The MIB defines the type of each object id. It has to be specified as a single character from the below list."},{"t":"value","d":"The new value."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp2_walk":{"s":"Fetch all the SNMP objects from an agent","p":[{"t":"host","d":"The SNMP agent (server)."},{"t":"community","d":"The read community."},{"t":"object_id","d":"If NULL, object_id is taken as the root of\n      the SNMP objects tree and all objects under that tree are returned as\n      an array."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp3_get":{"s":"Fetch an SNMP object","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"sec_name","d":"the security name, usually some kind of username"},{"t":"sec_level","d":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"t":"auth_protocol","d":"the authentication protocol (MD5 or SHA)"},{"t":"auth_passphrase","d":"the authentication pass phrase"},{"t":"priv_protocol","d":"the privacy protocol (DES or AES)"},{"t":"priv_passphrase","d":"the privacy pass phrase"},{"t":"object_id","d":"The SNMP object id."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp3_getnext":{"s":"Fetch the SNMP object which follows the given object id","p":[{"t":"host","d":"The hostname of the\n      SNMP agent (server)."},{"t":"sec_name","d":"the security name, usually some kind of username"},{"t":"sec_level","d":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"t":"auth_protocol","d":"the authentication protocol (MD5 or SHA)"},{"t":"auth_passphrase","d":"the authentication pass phrase"},{"t":"priv_protocol","d":"the privacy protocol (DES or AES)"},{"t":"priv_passphrase","d":"the privacy pass phrase"},{"t":"object_id","d":"The SNMP object id."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp3_real_walk":{"s":"Return all objects including their respective object ID within the specified one","p":[{"t":"host","d":"The hostname of the\n      SNMP agent (server)."},{"t":"sec_name","d":"the security name, usually some kind of username"},{"t":"sec_level","d":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"t":"auth_protocol","d":"the authentication protocol (MD5 or SHA)"},{"t":"auth_passphrase","d":"the authentication pass phrase"},{"t":"priv_protocol","d":"the privacy protocol (DES or AES)"},{"t":"priv_passphrase","d":"the privacy pass phrase"},{"t":"object_id","d":"The SNMP object id."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp3_set":{"s":"Set the value of an SNMP object","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"sec_name","d":"the security name, usually some kind of username"},{"t":"sec_level","d":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"t":"auth_protocol","d":"the authentication protocol (MD5 or SHA)"},{"t":"auth_passphrase","d":"the authentication pass phrase"},{"t":"priv_protocol","d":"the privacy protocol (DES or AES)"},{"t":"priv_passphrase","d":"the privacy pass phrase"},{"t":"object_id","d":"The SNMP object id."},{"t":"type","d":"The MIB defines the type of each object id. It has to be specified as a single character from the below list."},{"t":"value","d":"The new value"},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp3_walk":{"s":"Fetch all the SNMP objects from an agent","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"sec_name","d":"the security name, usually some kind of username"},{"t":"sec_level","d":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"t":"auth_protocol","d":"the authentication protocol (MD5 or SHA)"},{"t":"auth_passphrase","d":"the authentication pass phrase"},{"t":"priv_protocol","d":"the privacy protocol (DES or AES)"},{"t":"priv_passphrase","d":"the privacy pass phrase"},{"t":"object_id","d":"If NULL, object_id is taken as the root of\n      the SNMP objects tree and all objects under that tree are returned as\n      an array."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmpget":{"s":"Fetch an SNMP object","p":[{"t":"hostname","d":"The SNMP agent."},{"t":"community","d":"The read community."},{"t":"object_id","d":"The SNMP object."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmpgetnext":{"s":"","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"community","d":"The read community."},{"t":"object_id","d":"The SNMP object id which precedes the wanted one."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmprealwalk":{"s":"","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"community","d":"The read community."},{"t":"object_id","d":"The SNMP object id which precedes the wanted one."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmpset":{"s":"Set the value of an SNMP object","p":[{"t":"host","d":"The hostname of the SNMP agent (server)."},{"t":"community","d":"The write community."},{"t":"object_id","d":"The SNMP object id."},{"t":"type","d":"The MIB defines the type of each object id. It has to be specified as a single character from the below list."},{"t":"value","d":"The new value."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmpwalk":{"s":"Fetch all the SNMP objects from an agent","p":[{"t":"hostname","d":"The SNMP agent (server)."},{"t":"community","d":"The read community."},{"t":"object_id","d":"If NULL, object_id is taken as the root of\n       the SNMP objects tree and all objects under that tree are returned as\n       an array."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmpwalkoid":{"s":"","p":[{"t":"hostname","d":"The SNMP agent."},{"t":"community","d":"The read community."},{"t":"object_id","d":"If NULL, object_id is taken as the root of\n       the SNMP objects tree and all objects under that tree are returned as\n       an array."},{"t":"timeout","d":"The number of microseconds until the first timeout."},{"t":"retries","d":"The number of times to retry if timeouts occur."}]},"snmp_read_mib":{"s":"","p":[{"t":"filename","d":"The filename of the MIB."}]},"snmp_set_enum_print":{"s":"","p":[{"t":"enum_print","d":"As the value is interpreted as boolean by the Net-SNMP library, it can only be &quot;0&quot; or &quot;1&quot;."}]},"snmp_set_oid_output_format":{"s":"","p":[{"t":"oid_format","d":""}]},"snmp_set_quick_print":{"s":"","p":[{"t":"quick_print","d":""}]},"snmp_set_valueretrieval":{"s":"","p":[{"t":"method","d":""}]},"socket_accept":{"s":"Accepts a connection on a socket","p":[{"t":"socket","d":"A valid socket resource created with socket_create()."}]},"socket_bind":{"s":"Binds a name to a socket","p":[{"t":"socket","d":"A valid socket resource created with socket_create()."},{"t":"address","d":"If the socket is of the AF_INET family, the\n       address is an IP in dotted-quad notation\n       (e.g. 127.0.0.1)."},{"t":"port","d":"The port parameter is only used when\n       binding an AF_INET socket, and designates\n       the port on which to listen for connections."}]},"socket_clear_error":{"s":"Clears the error on the socket or the last error code","p":[{"t":"socket","d":"A valid socket resource created with socket_create()."}]},"socket_close":{"s":"Closes a socket resource","p":[{"t":"socket","d":"A valid socket resource created with socket_create()\n        or socket_accept()."}]},"socket_cmsg_space":{"s":"Calculate message buffer size","p":[{"t":"level","d":""},{"t":"type","d":""}]},"socket_connect":{"s":"Initiates a connection on a socket","p":[{"t":"socket","d":""},{"t":"address","d":"The address parameter is either an IPv4 address\n       in dotted-quad notation (e.g. 127.0.0.1) if \n       socket is AF_INET, a valid \n       IPv6 address (e.g. ::1) if IPv6 support is enabled and \n       socket is AF_INET6\n       or the pathname of a Unix domain socket, if the socket family is\n       AF_UNIX."},{"t":"port","d":"The port parameter is only used and is mandatory\n       when connecting to an AF_INET or an \n       AF_INET6 socket, and designates\n       the port on the remote host to which a connection should be made."}]},"socket_create":{"s":"Create a socket (endpoint for communication)","p":[{"t":"domain","d":"The domain parameter specifies the protocol\n       family to be used by the socket."},{"t":"type","d":"The type parameter selects the type of communication\n       to be used by the socket."},{"t":"protocol","d":"The protocol parameter sets the specific\n       protocol within the specified domain to be used\n       when communicating on the returned socket. The proper value can be\n       retrieved by name by using getprotobyname(). If\n       the desired protocol is TCP, or UDP the corresponding constants\n       SOL_TCP, and SOL_UDP\n       can also be used."}]},"socket_create_listen":{"s":"Opens a socket on port to accept connections ","p":[{"t":"port","d":"The port on which to listen on all interfaces."},{"t":"backlog","d":"The backlog parameter defines the maximum length\n       the queue of pending connections may grow to.\n       SOMAXCONN may be passed as\n       backlog parameter, see\n       socket_listen() for more information."}]},"socket_create_pair":{"s":"Creates a pair of indistinguishable sockets and stores them in an array","p":[{"t":"domain","d":"The domain parameter specifies the protocol\n       family to be used by the socket. See socket_create()\n       for the full list."},{"t":"type","d":"The type parameter selects the type of communication\n       to be used by the socket. See socket_create() for the \n       full list."},{"t":"protocol","d":"The protocol parameter sets the specific\n       protocol within the specified domain to be used\n       when communicating on the returned socket. The proper value can be retrieved by\n       name by using getprotobyname(). If\n       the desired protocol is TCP, or UDP the corresponding constants\n       SOL_TCP, and SOL_UDP\n       can also be used."},{"t":"fd","d":"Reference to an array in which the two socket resources will be inserted."}]},"socket_getpeername":{"s":"Queries the remote side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type","p":[{"t":"socket","d":"A valid socket resource created with socket_create()\n       or socket_accept()."},{"t":"address","d":"If the given socket is of type AF_INET or\n       AF_INET6, socket_getpeername()\n       will return the peers (remote) IP address in\n       appropriate notation (e.g. 127.0.0.1 or\n       fe80::1) in the address\n       parameter and, if the optional port parameter is\n       present, also the associated port."},{"t":"port","d":"If given, this will hold the port associated to\n       address."}]},"socket_getsockname":{"s":"Queries the local side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type","p":[{"t":"socket","d":"A valid socket resource created with socket_create() \n       or socket_accept()."},{"t":"addr","d":"If the given socket is of type AF_INET\n       or AF_INET6, socket_getsockname()\n       will return the local IP address in appropriate notation (e.g.\n       127.0.0.1 or fe80::1) in the\n       address parameter and, if the optional\n       port parameter is present, also the associated port."},{"t":"port","d":"If provided, this will hold the associated port."}]},"socket_get_option":{"s":"Gets socket options for the socket ","p":[{"t":"socket","d":"A valid socket resource created with socket_create()\n       or socket_accept()."},{"t":"level","d":"The level parameter specifies the protocol\n       level at which the option resides. For example, to retrieve options at\n       the socket level, a level parameter of\n       SOL_SOCKET would be used. Other levels, such as\n       TCP, can be used by\n       specifying the protocol number of that level. Protocol numbers can be\n       found by using the getprotobyname() function."},{"t":"optname","d":""}]},"socket_get_status":{"s":"Alias of stream_get_meta_data()","p":null},"socket_import_stream":{"s":"Import a stream","p":[{"t":"stream","d":"The stream resource to import."}]},"socket_last_error":{"s":"Returns the last error on the socket ","p":[{"t":"socket","d":"A valid socket resource created with socket_create()."}]},"socket_listen":{"s":"Listens for a connection on a socket","p":[{"t":"socket","d":"A valid socket resource created with socket_create()."},{"t":"backlog","d":"A maximum of backlog incoming connections will be\n       queued for processing. If a connection request arrives with the queue\n       full the client may receive an error with an indication of\n       ECONNREFUSED, or, if the underlying protocol supports\n       retransmission, the request may be ignored so that retries may succeed."}]},"socket_read":{"s":"Reads a maximum of length bytes from a socket","p":[{"t":"socket","d":"A valid socket resource created with socket_create()\n       or socket_accept()."},{"t":"length","d":"The maximum number of bytes read is specified by the\n       length parameter. Otherwise you can use\n       \\r, \\n,\n       or \\0 to end reading (depending on the type\n       parameter, see below)."},{"t":"type","d":"Optional type parameter is a named constant:\n       \n        \n         \n          PHP_BINARY_READ (Default) - use the system\n          recv() function. Safe for reading binary data.\n         \n        \n        \n         \n          PHP_NORMAL_READ - reading stops at\n          \\n or \\r."}]},"socket_recv":{"s":"Receives data from a connected socket ","p":[{"t":"socket","d":"The socket must be a socket resource previously\n       created by socket_create()."},{"t":"buf","d":"The data received will be fetched to the variable specified with\n       buf. If an error occurs, if the\n       connection is reset, or if no data is\n       available, buf will be set to NULL."},{"t":"len","d":"Up to len bytes will be fetched from remote host."},{"t":"flags","d":"The value of flags can be any combination of \n       the following flags, joined with the binary OR (|)\n       operator."}]},"socket_recvfrom":{"s":"Receives data from a socket whether or not it is connection-oriented","p":[{"t":"socket","d":"The socket must be a socket resource previously\n       created by socket_create()."},{"t":"buf","d":"The data received will be fetched to the variable specified with\n       buf."},{"t":"len","d":"Up to len bytes will be fetched from remote host."},{"t":"flags","d":"The value of flags can be any combination of \n       the following flags, joined with the binary OR (|)\n       operator."},{"t":"name","d":"If the socket is of the type AF_UNIX type,\n       name is the path to the file. Else, for\n       unconnected sockets, name is the IP address of,\n       the remote host, or NULL if the socket is connection-oriented."},{"t":"port","d":"This argument only applies to AF_INET and\n       AF_INET6 sockets, and specifies the remote port\n       from which the data is received. If the socket is connection-oriented,\n       port will be NULL."}]},"socket_recvmsg":{"s":"Read a message","p":[{"t":"socket","d":""},{"t":"message","d":""},{"t":"flags","d":""}]},"socket_select":{"s":"Runs the select() system call on the given arrays of sockets with a specified timeout","p":[{"t":"read","d":"The sockets listed in the read array will be\n       watched to see if characters become available for reading (more\n       precisely, to see if a read will not block - in particular, a socket\n       resource is also ready on end-of-file, in which case a\n       socket_read() will return a zero length string)."},{"t":"write","d":"The sockets listed in the write array will be\n       watched to see if a write will not block."},{"t":"except","d":"The sockets listed in the except array will be\n       watched for exceptions."},{"t":"tv_sec","d":"The tv_sec and tv_usec\n       together form the timeout parameter. The\n       timeout is an upper bound on the amount of time\n       elapsed before socket_select() return.\n       tv_sec may be zero , causing\n       socket_select() to return immediately. This is useful\n       for polling. If tv_sec is NULL (no timeout),\n       socket_select() can block indefinitely."},{"t":"tv_usec","d":""}]},"socket_send":{"s":"Sends data to a connected socket","p":[{"t":"socket","d":"A valid socket resource created with socket_create()\n       or socket_accept()."},{"t":"buf","d":"A buffer containing the data that will be sent to the remote host."},{"t":"len","d":"The number of bytes that will be sent to the remote host from \n       buf."},{"t":"flags","d":"The value of flags can be any combination of \n       the following flags, joined with the binary OR (|)\n       operator.\n       \n        Possible values for flags\n        \n         \n          \n           MSG_OOB\n           \n            Send OOB (out-of-band) data.\n           \n          \n\n          \n           MSG_EOR\n           \n            Indicate a record mark. The sent data completes the record.\n           \n          \n\n          \n           MSG_EOF\n           \n            Close the sender side of the socket and include an appropriate\n            notification of this at the end of the sent data. The sent data\n            completes the transaction.\n           \n          \n\n          \n           MSG_DONTROUTE\n           \n            Bypass routing, use direct interface."}]},"socket_sendmsg":{"s":"Send a message","p":[{"t":"socket","d":""},{"t":"message","d":""},{"t":"flags","d":""}]},"socket_sendto":{"s":"Sends a message to a socket, whether it is connected or not ","p":[{"t":"socket","d":"A valid socket resource created using socket_create()."},{"t":"buf","d":"The sent data will be taken from buffer buf."},{"t":"len","d":"len bytes from buf will be\n       sent."},{"t":"flags","d":"The value of flags can be any combination of \n       the following flags, joined with the binary OR (|)\n       operator.\n       \n        Possible values for flags\n        \n         \n          \n           MSG_OOB\n           \n            Send OOB (out-of-band) data.\n           \n          \n\n          \n           MSG_EOR\n           \n            Indicate a record mark. The sent data completes the record.\n           \n          \n\n          \n           MSG_EOF\n           \n            Close the sender side of the socket and include an appropriate\n            notification of this at the end of the sent data. The sent data\n            completes the transaction.\n           \n          \n\n          \n           MSG_DONTROUTE\n           \n            Bypass routing, use direct interface."},{"t":"addr","d":"IP address of the remote host."},{"t":"port","d":"port is the remote port number at which the data\n       will be sent."}]},"socket_set_block":{"s":"Sets blocking mode on a socket resource","p":[{"t":"socket","d":"A valid socket resource created with socket_create()\n       or socket_accept()."}]},"socket_set_blocking":{"s":"Alias of stream_set_blocking()","p":null},"socket_set_nonblock":{"s":"Sets nonblocking mode for file descriptor fd ","p":[{"t":"socket","d":"A valid socket resource created with socket_create()\n       or socket_accept()."}]},"socket_set_option":{"s":"Sets socket options for the socket","p":[{"t":"socket","d":"A valid socket resource created with socket_create()\n       or socket_accept()."},{"t":"level","d":"The level parameter specifies the protocol\n       level at which the option resides. For example, to retrieve options at\n       the socket level, a level parameter of\n       SOL_SOCKET would be used. Other levels, such as\n       TCP, can be used by specifying the protocol number of that level. \n       Protocol numbers can be found by using the \n       getprotobyname() function."},{"t":"optname","d":"The available socket options are the same as those for the\n       socket_get_option() function."},{"t":"optval","d":"The option value."}]},"socket_set_timeout":{"s":"Alias of stream_set_timeout()","p":null},"socket_shutdown":{"s":"Shuts down a socket for receiving, sending, or both","p":[{"t":"socket","d":"A valid socket resource created with socket_create()."},{"t":"how","d":"The value of how can be one of the following:\n       \n        possible values for how\n        \n         \n          \n           0\n           \n            Shutdown socket reading\n           \n          \n\n          \n           1\n           \n            Shutdown socket writing\n           \n          \n\n          \n           2\n           \n            Shutdown socket reading and writing"}]},"socket_strerror":{"s":"Return a string describing a socket error","p":[{"t":"errno","d":"A valid socket error number, likely produced by \n       socket_last_error()."}]},"socket_write":{"s":"Write to a socket","p":[{"t":"socket","d":""},{"t":"buffer","d":"The buffer to be written."},{"t":"length","d":"The optional parameter length can specify an\n       alternate length of bytes written to the socket. If this length is\n       greater than the buffer length, it is silently truncated to the length\n       of the buffer."}]},"solr_get_version":{"s":"Returns the current version of the Apache Solr extension","p":null},"sort":{"s":"Sort an array","p":[{"t":"array","d":"The input array."},{"t":"sort_flags","d":"The optional second parameter sort_flags\n       may be used to modify the sorting behavior using these values:"}]},"soundex":{"s":"Calculate the soundex key of a string","p":[{"t":"str","d":"The input string."}]},"split":{"s":"Split string into array by regular expression","p":[{"t":"pattern","d":"Case sensitive regular expression."},{"t":"string","d":"The input string."},{"t":"limit","d":"If limit is set, the returned array will\n       contain a maximum of limit elements with the\n       last element containing the whole rest of\n       string."}]},"spliti":{"s":"Split string into array by regular expression case insensitive","p":[{"t":"pattern","d":"Case insensitive regular expression."},{"t":"string","d":"The input string."},{"t":"limit","d":"If limit is set, the returned array will\n       contain a maximum of limit elements with the\n       last element containing the whole rest of\n       string."}]},"spl_autoload":{"s":"Default implementation for __autoload()","p":[{"t":"class_name","d":"The lowercased name of the class (and namespace) being instantiated."},{"t":"file_extensions","d":"By default it checks all include paths to\n       contain filenames built up by the lowercase class name appended by the\n       filename extensions .inc and .php."}]},"spl_autoload_call":{"s":"Try all registered __autoload() function to load the requested class","p":[{"t":"class_name","d":"The class name being searched."}]},"spl_autoload_extensions":{"s":"Register and return default file extensions for spl_autoload","p":[{"t":"file_extensions","d":"When calling without an argument, it simply returns the current list\n       of extensions each separated by comma. To modify the list of file\n       extensions, simply invoke the functions with the new list of file\n       extensions to use in a single string with each extensions separated\n       by comma."}]},"spl_autoload_functions":{"s":"Return all registered __autoload() functions","p":null},"spl_autoload_register":{"s":"Register given function as __autoload() implementation","p":[{"t":"autoload_function","d":"The autoload function being registered.\n       If no parameter is provided, then the default implementation of\n       spl_autoload() will be registered."},{"t":"throw","d":"This parameter specifies whether\n       spl_autoload_register() should throw \n       exceptions when the autoload_function\n       cannot be registered."},{"t":"prepend","d":"If true, spl_autoload_register() will prepend\n       the autoloader on the autoload stack instead of appending it."}]},"spl_autoload_unregister":{"s":"Unregister given function as __autoload() implementation","p":[{"t":"autoload_function","d":"The autoload function being unregistered."}]},"spl_classes":{"s":"Return available SPL classes","p":null},"spl_object_hash":{"s":"","p":[{"t":"object","d":"Any object."}]},"sprintf":{"s":"Return a formatted string","p":[{"t":"format","d":"The format string is composed of zero or more directives:\n       ordinary characters (excluding %) that are\n       copied directly to the result, and conversion\n       specifications, each of which results in fetching its\n       own parameter.  This applies to both sprintf()\n       and printf()."}]},"sqlite_array_query":{"s":"Execute a query against a given database and returns an array","p":[{"t":"query","d":"The query to be executed."},{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally.  This parameter is not required\n       when using the object-oriented method."},{"t":"result_type","d":"The optional result_type\nparameter accepts a constant and determines how the returned array will be\nindexed. Using SQLITE_ASSOC will return only associative\nindices (named fields) while SQLITE_NUM will return\nonly numerical indices (ordinal field numbers). SQLITE_BOTH\nwill return both associative and numerical indices.\nSQLITE_BOTH is the default for this function."},{"t":"decode_binary","d":"When the decode_binary\nparameter is set to TRUE (the default), PHP will decode the binary encoding\nit applied to the data if it was encoded using the\nsqlite_escape_string().  You should normally leave this\nvalue at its default, unless you are interoperating with databases created by\nother sqlite capable applications."}]},"sqlite_busy_timeout":{"s":"Set busy timeout duration, or disable busy handlers","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally.  This parameter is not required\n       when using the object-oriented method."},{"t":"milliseconds","d":"The number of milliseconds.  When set to\n       0, busy handlers will be disabled and SQLite will\n       return immediately with a SQLITE_BUSY status code\n       if another process\/thread has the database locked for an update."}]},"sqlite_changes":{"s":"","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally.  This parameter is not required\n       when using the object-oriented method."}]},"sqlite_close":{"s":"Closes an open SQLite database","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally."}]},"sqlite_column":{"s":"Fetches a column from the current row of a result set","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."},{"t":"index_or_name","d":"The column index or name to fetch."},{"t":"decode_binary","d":"When the decode_binary\nparameter is set to TRUE (the default), PHP will decode the binary encoding\nit applied to the data if it was encoded using the\nsqlite_escape_string().  You should normally leave this\nvalue at its default, unless you are interoperating with databases created by\nother sqlite capable applications."}]},"sqlite_create_aggregate":{"s":"Register an aggregating UDF for use in SQL statements","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally.  This parameter is not required\n       when using the object-oriented method."},{"t":"function_name","d":"The name of the function used in SQL statements."},{"t":"step_func","d":"Callback function called for each row of the result set.\n       Function parameters are &amp;$context, $value, ...."},{"t":"finalize_func","d":"Callback function to aggregate the &quot;stepped&quot; data from each row.\n       Function parameter is &amp;$context and the function\n       should return the final result of aggregation."},{"t":"num_args","d":"Hint to the SQLite parser if the callback function accepts a\n       predetermined number of arguments."}]},"sqlite_create_function":{"s":"","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally.  This parameter is not required\n       when using the object-oriented method."},{"t":"function_name","d":"The name of the function used in SQL statements."},{"t":"callback","d":"Callback function to handle the defined SQL function."},{"t":"num_args","d":"Hint to the SQLite parser if the callback function accepts a\n       predetermined number of arguments."}]},"sqlite_current":{"s":"Fetches the current row from a result set as an array","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."},{"t":"result_type","d":"The optional result_type\nparameter accepts a constant and determines how the returned array will be\nindexed. Using SQLITE_ASSOC will return only associative\nindices (named fields) while SQLITE_NUM will return\nonly numerical indices (ordinal field numbers). SQLITE_BOTH\nwill return both associative and numerical indices.\nSQLITE_BOTH is the default for this function."},{"t":"decode_binary","d":"When the decode_binary\nparameter is set to TRUE (the default), PHP will decode the binary encoding\nit applied to the data if it was encoded using the\nsqlite_escape_string().  You should normally leave this\nvalue at its default, unless you are interoperating with databases created by\nother sqlite capable applications."}]},"sqlite_error_string":{"s":"Returns the textual description of an error code","p":[{"t":"error_code","d":"The error code being used, which might be passed in from\n       sqlite_last_error()."}]},"sqlite_escape_string":{"s":"Escapes a string for use as a query parameter","p":[{"t":"item","d":"The string being quoted."}]},"sqlite_exec":{"s":"Executes a result-less query against a given database","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from\n       sqlite_open() when used procedurally. This parameter\n       is not required when using the object-oriented method."},{"t":"query","d":"The query to be executed."},{"t":"error_msg","d":"The specified variable will be filled if an error occurs. This is\n       specially important because SQL syntax errors can&#039;t be fetched using\n       the sqlite_last_error() function."}]},"sqlite_factory":{"s":"Opens an SQLite database and returns an SQLiteDatabase object","p":[{"t":"filename","d":"The filename of the SQLite database."},{"t":"mode","d":"The mode of the file. Intended to be used to open the database in\n       read-only mode.  Presently, this parameter is ignored by the sqlite\n       library.  The default value for mode is the octal value\n       0666 and this is the recommended value."},{"t":"error_message","d":"Passed by reference and is set to hold a descriptive error message\n       explaining why the database could not be opened if there was an error."}]},"sqlite_fetch_all":{"s":"Fetches all rows from a result set as an array of arrays","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."},{"t":"result_type","d":"The optional result_type\nparameter accepts a constant and determines how the returned array will be\nindexed. Using SQLITE_ASSOC will return only associative\nindices (named fields) while SQLITE_NUM will return\nonly numerical indices (ordinal field numbers). SQLITE_BOTH\nwill return both associative and numerical indices.\nSQLITE_BOTH is the default for this function."},{"t":"decode_binary","d":"When the decode_binary\nparameter is set to TRUE (the default), PHP will decode the binary encoding\nit applied to the data if it was encoded using the\nsqlite_escape_string().  You should normally leave this\nvalue at its default, unless you are interoperating with databases created by\nother sqlite capable applications."}]},"sqlite_fetch_array":{"s":"Fetches the next row from a result set as an array","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."},{"t":"result_type","d":"The optional result_type\nparameter accepts a constant and determines how the returned array will be\nindexed. Using SQLITE_ASSOC will return only associative\nindices (named fields) while SQLITE_NUM will return\nonly numerical indices (ordinal field numbers). SQLITE_BOTH\nwill return both associative and numerical indices.\nSQLITE_BOTH is the default for this function."},{"t":"decode_binary","d":"When the decode_binary\nparameter is set to TRUE (the default), PHP will decode the binary encoding\nit applied to the data if it was encoded using the\nsqlite_escape_string().  You should normally leave this\nvalue at its default, unless you are interoperating with databases created by\nother sqlite capable applications."}]},"sqlite_fetch_column_types":{"s":"","p":[{"t":"table_name","d":"The table name to query."},{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally.  This parameter is not required\n       when using the object-oriented method."},{"t":"result_type","d":"The optional result_type parameter accepts a\n       constant and determines how the returned array will be indexed. Using\n       SQLITE_ASSOC will return only associative indices\n       (named fields) while SQLITE_NUM will return only\n       numerical indices (ordinal field numbers).\n       SQLITE_ASSOC is the default for\n       this function."}]},"sqlite_fetch_object":{"s":"Fetches the next row from a result set as an object","p":null},"sqlite_fetch_single":{"s":"Fetches the first column of a result set as a string","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."},{"t":"decode_binary","d":"When the decode_binary\nparameter is set to TRUE (the default), PHP will decode the binary encoding\nit applied to the data if it was encoded using the\nsqlite_escape_string().  You should normally leave this\nvalue at its default, unless you are interoperating with databases created by\nother sqlite capable applications."}]},"sqlite_fetch_string":{"s":"Alias of sqlite_fetch_single()","p":null},"sqlite_field_name":{"s":"Returns the name of a particular field","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."},{"t":"field_index","d":"The ordinal column number in the result set."}]},"sqlite_has_more":{"s":"Finds whether or not more rows are available","p":[{"t":"result","d":"The SQLite result resource."}]},"sqlite_has_prev":{"s":"Returns whether or not a previous row is available","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."}]},"sqlite_key":{"s":"Returns the current row index","p":null},"sqlite_last_error":{"s":"Returns the error code of the last error for a database","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally.  This parameter is not required\n       when using the object-oriented method."}]},"sqlite_last_insert_rowid":{"s":"Returns the rowid of the most recently inserted row","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from sqlite_open()\n       when used procedurally.  This parameter is not required\n       when using the object-oriented method."}]},"sqlite_libencoding":{"s":"Returns the encoding of the linked SQLite library","p":null},"sqlite_libversion":{"s":"Returns the version of the linked SQLite library","p":null},"sqlite_next":{"s":"Seek to the next row number","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."}]},"sqlite_num_fields":{"s":"Returns the number of fields in a result set","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."}]},"sqlite_num_rows":{"s":"Returns the number of rows in a buffered result set","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."}]},"sqlite_open":{"s":"Opens an SQLite database and create the database if it does not exist","p":[{"t":"filename","d":"The filename of the SQLite database.  If the file does not exist, SQLite\n       will attempt to create it.  PHP must have write permissions to the file\n       if data is inserted, the database schema is modified or to create the\n       database if it does not exist."},{"t":"mode","d":"The mode of the file. Intended to be used to open the database in\n       read-only mode.  Presently, this parameter is ignored by the sqlite\n       library.  The default value for mode is the octal value\n       0666 and this is the recommended value."},{"t":"error_message","d":"Passed by reference and is set to hold a descriptive error message\n       explaining why the database could not be opened if there was an error."}]},"sqlite_popen":{"s":"","p":[{"t":"filename","d":"The filename of the SQLite database.  If the file does not exist, SQLite\n       will attempt to create it.  PHP must have write permissions to the file\n       if data is inserted, the database schema is modified or to create the\n       database if it does not exist."},{"t":"mode","d":"The mode of the file. Intended to be used to open the database in\n       read-only mode.  Presently, this parameter is ignored by the sqlite\n       library.  The default value for mode is the octal value\n       0666 and this is the recommended value."},{"t":"error_message","d":"Passed by reference and is set to hold a descriptive error message\n       explaining why the database could not be opened if there was an error."}]},"sqlite_prev":{"s":"Seek to the previous row number of a result set","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."}]},"sqlite_query":{"s":"Executes a query against a given database and returns a result handle","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from\n       sqlite_open() when used procedurally. This parameter\n       is not required when using the object-oriented method."},{"t":"query","d":"The query to be executed."},{"t":"result_type","d":"The optional result_type\nparameter accepts a constant and determines how the returned array will be\nindexed. Using SQLITE_ASSOC will return only associative\nindices (named fields) while SQLITE_NUM will return\nonly numerical indices (ordinal field numbers). SQLITE_BOTH\nwill return both associative and numerical indices.\nSQLITE_BOTH is the default for this function."},{"t":"error_msg","d":"The specified variable will be filled if an error occurs. This is\n       specially important because SQL syntax errors can&#039;t be fetched using\n       the sqlite_last_error() function."}]},"sqlite_rewind":{"s":"Seek to the first row number","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."}]},"sqlite_seek":{"s":"Seek to a particular row number of a buffered result set","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."},{"t":"rownum","d":"The ordinal row number to seek to.  The row number is zero-based (0 is\n       the first row)."}]},"sqlite_udf_decode_binary":{"s":"Decode binary data passed as parameters to an UDF","p":[{"t":"data","d":"The encoded data that will be decoded, data that was applied by either\n       sqlite_udf_encode_binary() or\n       sqlite_escape_string()."}]},"sqlite_udf_encode_binary":{"s":"Encode binary data before returning it from an UDF","p":[{"t":"data","d":"The string being encoded."}]},"sqlite_unbuffered_query":{"s":"Execute a query that does not prefetch and buffer all data","p":[{"t":"dbhandle","d":"The SQLite Database resource; returned from\n       sqlite_open() when used procedurally. This parameter\n       is not required when using the object-oriented method."},{"t":"query","d":"The query to be executed."},{"t":"result_type","d":"The optional result_type\nparameter accepts a constant and determines how the returned array will be\nindexed. Using SQLITE_ASSOC will return only associative\nindices (named fields) while SQLITE_NUM will return\nonly numerical indices (ordinal field numbers). SQLITE_BOTH\nwill return both associative and numerical indices.\nSQLITE_BOTH is the default for this function."},{"t":"error_msg","d":"The specified variable will be filled if an error occurs. This is\n       specially important because SQL syntax errors can&#039;t be fetched using\n       the sqlite_last_error() function."}]},"sqlite_valid":{"s":"Returns whether more rows are available","p":[{"t":"result","d":"The SQLite result resource.  This parameter is not required when using\n       the object-oriented method."}]},"sqlsrv_begin_transaction":{"s":"Begins a database transaction","p":[{"t":"conn","d":"The connection resource returned by a call to sqlsrv_connect()."}]},"sqlsrv_cancel":{"s":"Cancels a statement","p":[{"t":"stmt","d":"The statement resource to be cancelled."}]},"sqlsrv_client_info":{"s":"Returns information about the client and specified connection","p":[{"t":"conn","d":"The connection about which information is returned."}]},"sqlsrv_close":{"s":"Closes an open connection and releases resourses associated with the connection","p":[{"t":"conn","d":"The connection to be closed."}]},"sqlsrv_commit":{"s":"Commits a transaction that was begun with sqlsrv_begin_transaction()","p":[{"t":"conn","d":"The connection on which the transaction is to be committed."}]},"sqlsrv_configure":{"s":"Changes the driver error handling and logging configurations","p":[{"t":"setting","d":"The name of the setting to set. The possible values are \n       &quot;WarningsReturnAsErrors&quot;, &quot;LogSubsystems&quot;, and &quot;LogSeverity&quot;."},{"t":"value","d":"The value of the specified setting. The following table shows possible values:\n          \n   Error and Logging Setting Options\n   \n    \n     \n      Setting\n      Options\n     \n\n    \n\n    \n     \n      WarningsReturnAsErrors\n      1 (TRUE) or 0 (FALSE)\n     \n\n     \n      LogSubsystems\n      SQLSRV_LOG_SYSTEM_ALL (-1) \n      SQLSRV_LOG_SYSTEM_CONN (2) \n      SQLSRV_LOG_SYSTEM_INIT (1) \n      SQLSRV_LOG_SYSTEM_OFF (0) \n      SQLSRV_LOG_SYSTEM_STMT (4) \n      SQLSRV_LOG_SYSTEM_UTIL (8)\n     \n\n     \n      LogSeverity\n      SQLSRV_LOG_SEVERITY_ALL (-1) \n      SQLSRV_LOG_SEVERITY_ERROR (1) \n      SQLSRV_LOG_SEVERITY_NOTICE (4) \n      SQLSRV_LOG_SEVERITY_WARNING (2)"}]},"sqlsrv_connect":{"s":"Opens a connection to a Microsoft SQL Server database","p":[{"t":"serverName","d":"The name of the server to which a connection is established. To connect \n       to a specific instance, follow the server name with a forward slash \n       and the instance name (e.g. serverName\\sqlexpress)."},{"t":"connectionInfo","d":"An associative array that specifies options for connecting to the server. \n       If values for the UID and PWD keys are not specified, the connection \n       will be attempted using Windows Authentication. For a complete list of supported \n       keys, see &raquo;&nbsp;SQLSRV Connection Options."}]},"sqlsrv_errors":{"s":"Returns error and warning information about the last SQLSRV operation performed","p":[{"t":"errorsOrWarnings","d":"Determines whether error information, warning information, or both are \n       returned. If this parameter is not supplied, both error information and \n       warning information are returned. The following are the supported values \n       for this parameter: SQLSRV_ERR_ALL, SQLSRV_ERR_ERRORS, SQLSRV_ERR_WARNINGS."}]},"sqlsrv_execute":{"s":"Executes a statement prepared with sqlsrv_prepare()","p":[{"t":"stmt","d":"A statement resource returned by sqlsrv_prepare()."}]},"sqlsrv_fetch":{"s":"Makes the next row in a result set available for reading","p":[{"t":"stmt","d":"A statement resource created by executing sqlsrv_query() \n       or sqlsrv_execute()."},{"t":"row","d":"The row to be accessed. This parameter can only be used if the specified \n       statement was prepared with a scrollable cursor. In that case, this parameter \n       can take on one of the following values:\n       \n        SQLSRV_SCROLL_NEXT\n        SQLSRV_SCROLL_PRIOR\n        SQLSRV_SCROLL_FIRST\n        SQLSRV_SCROLL_LAST\n        SQLSRV_SCROLL_ABSOLUTE\n        SQLSRV_SCROLL_RELATIVE"},{"t":"offset","d":"Specifies the row to be accessed if the row parameter is set to\n       SQLSRV_SCROLL_ABSOLUTE or\n       SQLSRV_SCROLL_RELATIVE. Note that the first row in\n       a result set has index 0."}]},"sqlsrv_fetch_array":{"s":"Returns a row as an array","p":[{"t":"stmt","d":"A statement resource returned by sqlsrv_query or sqlsrv_prepare."},{"t":"fetchType","d":"A predefined constant specifying the type of array to return. Possible \n       values are SQLSRV_FETCH_ASSOC, \n       SQLSRV_FETCH_NUMERIC, and \n       SQLSRV_FETCH_BOTH (the default)."},{"t":"row","d":"Specifies the row to access in a result set that uses a scrollable cursor. \n       Possible values are SQLSRV_SCROLL_NEXT, \n       SQLSRV_SCROLL_PRIOR, SQLSRV_SCROLL_FIRST, \n       SQLSRV_SCROLL_LAST, SQLSRV_SCROLL_ABSOLUTE and, \n       SQLSRV_SCROLL_RELATIVE (the default). When this parameter \n       is specified, the fetchType must be explicitly defined."},{"t":"offset","d":"Specifies the row to be accessed if the row parameter is set to\n       SQLSRV_SCROLL_ABSOLUTE or\n       SQLSRV_SCROLL_RELATIVE. Note that the first row in\n       a result set has index 0."}]},"sqlsrv_fetch_object":{"s":"Retrieves the next row of data in a result set as an object","p":[{"t":"stmt","d":"A statement resource created by sqlsrv_query() or \n       sqlsrv_execute()."},{"t":"className","d":"The name of the class to instantiate. If no class name is specified, \n       stdClass is instantiated."},{"t":"ctorParams","d":"Values passed to the constructor of the specified class. If the constructor \n       of the specified class takes parameters, the ctorParams array must be \n       supplied."},{"t":"row","d":"The row to be accessed. This parameter can only be used if the specified \n       statement was prepared with a scrollable cursor. In that case, this parameter \n       can take on one of the following values:\n       \n        SQLSRV_SCROLL_NEXT\n        SQLSRV_SCROLL_PRIOR\n        SQLSRV_SCROLL_FIRST\n        SQLSRV_SCROLL_LAST\n        SQLSRV_SCROLL_ABSOLUTE\n        SQLSRV_SCROLL_RELATIVE"},{"t":"offset","d":"Specifies the row to be accessed if the row parameter is set to\n       SQLSRV_SCROLL_ABSOLUTE or\n       SQLSRV_SCROLL_RELATIVE. Note that the first row in\n       a result set has index 0."}]},"sqlsrv_field_metadata":{"s":"","p":[{"t":"stmt","d":"The statment resource for which metadata is returned."}]},"sqlsrv_free_stmt":{"s":"Frees all resources for the specified statement","p":[{"t":"stmt","d":"The statment for which resources are freed. \n       Note that NULL is a valid parameter value. This allows the function to be \n       called multiple times in a script."}]},"sqlsrv_get_config":{"s":"Returns the value of the specified configuration setting","p":[{"t":"setting","d":"The name of the setting for which the value is returned. For a list of \n       configurable settings, see sqlsrv_configure()."}]},"sqlsrv_get_field":{"s":"Gets field data from the currently selected row","p":[{"t":"stmt","d":"A statement resource returned by sqlsrv_query() or \n       sqlsrv_execute()."},{"t":"fieldIndex","d":"The index of the field to be retrieved. Field indices start at 0. Fields \n       must be accessed in order. i.e. If you access field index 1, then field \n       index 0 will not be available."},{"t":"getAsType","d":"The PHP data type for the returned field data. If this parameter is not \n       set, the field data will be returned as its default PHP data type.\n       For information about default PHP data types, see \n       &raquo;&nbsp;Default PHP Data Types \n       in the Microsoft SQLSRV documentation."}]},"sqlsrv_has_rows":{"s":"Indicates whether the specified statement has rows","p":[{"t":"stmt","d":"A statement resource returned by sqlsrv_query() or \n       sqlsrv_execute()."}]},"sqlsrv_next_result":{"s":"Makes the next result of the specified statement active","p":[{"t":"stmt","d":"The statment on which the next result is being called."}]},"sqlsrv_num_fields":{"s":"Retrieves the number of fields (columns) on a statement","p":[{"t":"stmt","d":"The statment for which the number of fields is returned. \n       sqlsrv_num_fields() can be called on a statement before \n       or after statement execution."}]},"sqlsrv_num_rows":{"s":"Retrieves the number of rows in a result set","p":[{"t":"stmt","d":"The statement for which the row count is returned. The statment resource \n       must be created with a static or keyset cursor. For more information, see \n       sqlsrv_query(), sqlsrv_prepare(), or \n       &raquo;&nbsp;Specifying a Cursor Type and Selecting Rows \n       in the Microsoft SQLSRV documentation."}]},"sqlsrv_prepare":{"s":"Prepares a query for execution","p":[{"t":"conn","d":"A connection resource returned by sqlsrv_connect()."},{"t":"sql","d":"The string that defines the query to be prepared and executed."},{"t":"params","d":"An array specifying parameter information when executing a parameterized \n       query. Array elements can be any of the following:\n       \n        A literal value\n        A PHP variable\n        An array with this structure: \n        array($value [, $direction [, $phpType [, $sqlType]]])\n       \n       The following table describes the elements in the array structure above:"},{"t":"options","d":"An array specifing query property options. The supported keys are described \n       in the following table:"}]},"sqlsrv_query":{"s":"Prepares and executes a query.","p":[{"t":"conn","d":"A connection resource returned by sqlsrv_connect()."},{"t":"sql","d":"The string that defines the query to be prepared and executed."},{"t":"params","d":"An array specifying parameter information when executing a parameterized query. \n       Array elements can be any of the following:\n       \n        A literal value\n        A PHP variable\n        An array with this structure: \n        array($value [, $direction [, $phpType [, $sqlType]]])\n       \n       The following table describes the elements in the array structure above:"},{"t":"options","d":"An array specifing query property options. The supported keys are described \n       in the following table:"}]},"sqlsrv_rollback":{"s":"","p":[{"t":"conn","d":"The connection resource returned by a call to sqlsrv_connect()."}]},"sqlsrv_rows_affected":{"s":"","p":[{"t":"stmt","d":"The executed statement resource for which the number of affected rows is returned."}]},"sqlsrv_send_stream_data":{"s":"Sends data from parameter streams to the server","p":[{"t":"stmt","d":"A statement resource returned by sqlsrv_query() or \n       sqlsrv_execute()."}]},"sqlsrv_server_info":{"s":"Returns information about the server","p":[{"t":"conn","d":"The connection resource that connects the client and the server."}]},"sql_regcase":{"s":"Make regular expression for case insensitive match","p":[{"t":"string","d":"The input string."}]},"sqrt":{"s":"Square root","p":[{"t":"arg","d":"The argument to process"}]},"srand":{"s":"Seed the random number generator","p":[{"t":"seed","d":"Optional seed value"}]},"sscanf":{"s":"Parses input from a string according to a format","p":[{"t":"str","d":"The input string being parsed."},{"t":"format","d":"The interpreted format for str, which is\n       described in the documentation for sprintf() with\n       following differences:\n       \n        \n         Function is not locale-aware.\n        \n        \n         F, g, G and\n         b are not supported.\n        \n        \n         D stands for decimal number.\n        \n        \n         i stands for integer with base detection.\n        \n        \n         n stands for number of characters processed so far."},{"t":"...","d":"Optionally pass in variables by reference that will contain the parsed values."}]},"ssdeep_fuzzy_compare":{"s":"Calculates the match score between two fuzzy hash signatures","p":[{"t":"signature1","d":"The first fuzzy hash signature string."},{"t":"signature2","d":"The second fuzzy hash signature string."}]},"ssdeep_fuzzy_hash":{"s":"Create a fuzzy hash from a string","p":[{"t":"to_hash","d":"The input string."}]},"ssdeep_fuzzy_hash_filename":{"s":"Create a fuzzy hash from a file","p":[{"t":"file_name","d":"The filename of the file to hash."}]},"ssh2_auth_agent":{"s":"Authenticate over SSH using the ssh agent","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"username","d":"Remote user name."}]},"ssh2_auth_hostbased_file":{"s":"Authenticate using a public hostkey","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"username","d":""},{"t":"hostname","d":""},{"t":"pubkeyfile","d":""},{"t":"privkeyfile","d":""},{"t":"passphrase","d":"If privkeyfile is encrypted (which it should\n       be), the passphrase must be provided."},{"t":"local_username","d":"If local_username is omitted, then the value\n       for username will be used for it."}]},"ssh2_auth_none":{"s":"Authenticate as &quot;none&quot;","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"username","d":"Remote user name."}]},"ssh2_auth_password":{"s":"Authenticate over SSH using a plain password","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"username","d":"Remote user name."},{"t":"password","d":"Password for username"}]},"ssh2_auth_pubkey_file":{"s":"Authenticate using a public key","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"username","d":""},{"t":"pubkeyfile","d":"The public key file needs to be in OpenSSH&#039;s format. It should look something like:"},{"t":"privkeyfile","d":""},{"t":"passphrase","d":"If privkeyfile is encrypted (which it should\n       be), the passphrase must be provided."}]},"ssh2_connect":{"s":"Connect to an SSH server","p":[{"t":"host","d":""},{"t":"port","d":""},{"t":"methods","d":"methods may be an associative array with up to four parameters\n       as described below."},{"t":"callbacks","d":"callbacks may be an associative array with any\n       or all of the following parameters.\n       \n        \n         Callbacks parameters\n        \n        \n         \n          \n           Index\n           Meaning\n           Prototype\n          \n\n         \n\n         \n          \n           ignore\n           \n            Name of function to call when an\n            SSH2_MSG_IGNORE packet is received\n           \n           void ignore_cb($message)\n          \n\n          \n           debug\n           \n            Name of function to call when an\n            SSH2_MSG_DEBUG packet is received\n           \n           void debug_cb($message, $language, $always_display)\n          \n\n          \n           macerror\n           \n            Name of function to call when a packet is received but the\n            message authentication code failed.  If the callback returns\n            TRUE, the mismatch will be ignored, otherwise the connection\n            will be terminated.\n           \n           bool macerror_cb($packet)\n          \n\n          \n           disconnect\n           \n            Name of function to call when an\n            SSH2_MSG_DISCONNECT packet is received\n           \n           void disconnect_cb($reason, $message, $language)"}]},"ssh2_exec":{"s":"Execute a command on a remote server","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"command","d":""},{"t":"pty","d":""},{"t":"env","d":"env may be passed as an associative array of\n       name\/value pairs to set in the target environment."},{"t":"width","d":"Width of the virtual terminal."},{"t":"height","d":"Height of the virtual terminal."},{"t":"width_height_type","d":"width_height_type should be one of\n       SSH2_TERM_UNIT_CHARS or\n       SSH2_TERM_UNIT_PIXELS."}]},"ssh2_fetch_stream":{"s":"Fetch an extended data stream","p":[{"t":"channel","d":""},{"t":"streamid","d":"An SSH2 channel stream."}]},"ssh2_fingerprint":{"s":"Retrieve fingerprint of remote server","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"flags","d":"flags may be either of\n       SSH2_FINGERPRINT_MD5 or\n       SSH2_FINGERPRINT_SHA1 logically ORed with\n       SSH2_FINGERPRINT_HEX or\n       SSH2_FINGERPRINT_RAW."}]},"ssh2_methods_negotiated":{"s":"Return list of negotiated methods","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."}]},"ssh2_publickey_add":{"s":"","p":[{"t":"pkey","d":"Publickey Subsystem resource created by ssh2_publickey_init()."},{"t":"algoname","d":"Publickey algorithm (e.g.): ssh-dss, ssh-rsa"},{"t":"blob","d":"Publickey blob as raw binary data"},{"t":"overwrite","d":"If the specified key already exists, should it be overwritten?"},{"t":"attributes","d":"Associative array of attributes to assign to this public key.\n       Refer to ietf-secsh-publickey-subsystem for a list of supported attributes.\n       To mark an attribute as mandatory, precede its name with an asterisk.\n       If the server is unable to support an attribute marked mandatory,\n       it will abort the add process."}]},"ssh2_publickey_init":{"s":"","p":[{"t":"session","d":""}]},"ssh2_publickey_list":{"s":"","p":[{"t":"pkey","d":"Publickey Subsystem resource"}]},"ssh2_publickey_remove":{"s":"","p":[{"t":"pkey","d":"Publickey Subsystem Resource"},{"t":"algoname","d":"Publickey algorithm (e.g.): ssh-dss, ssh-rsa"},{"t":"blob","d":"Publickey blob as raw binary data"}]},"ssh2_scp_recv":{"s":"Request a file via SCP","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"remote_file","d":"Path to the remote file."},{"t":"local_file","d":"Path to the local file."}]},"ssh2_scp_send":{"s":"Send a file via SCP","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"local_file","d":"Path to the local file."},{"t":"remote_file","d":"Path to the remote file."},{"t":"create_mode","d":"The file will be created with the mode specified by\n       create_mode."}]},"ssh2_sftp":{"s":"Initialize SFTP subsystem","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."}]},"ssh2_sftp_chmod":{"s":"Changes file mode","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"filename","d":"Path to the file."},{"t":"mode","d":"Permissions on the file. See the chmod() for more details on this parameter."}]},"ssh2_sftp_lstat":{"s":"Stat a symbolic link","p":[{"t":"sftp","d":""},{"t":"path","d":"Path to the remote symbolic link."}]},"ssh2_sftp_mkdir":{"s":"Create a directory","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"dirname","d":"Path of the new directory."},{"t":"mode","d":"Permissions on the new directory."},{"t":"recursive","d":"If recursive is TRUE any parent directories\n       required for dirname will be automatically created as well."}]},"ssh2_sftp_readlink":{"s":"Return the target of a symbolic link","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"link","d":"Path of the symbolic link."}]},"ssh2_sftp_realpath":{"s":"Resolve the realpath of a provided path string","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"filename","d":""}]},"ssh2_sftp_rename":{"s":"Rename a remote file","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"from","d":"The current file that is being renamed."},{"t":"to","d":"The new file name that replaces from."}]},"ssh2_sftp_rmdir":{"s":"Remove a directory","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"dirname","d":""}]},"ssh2_sftp_stat":{"s":"Stat a file on a remote filesystem","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"path","d":""}]},"ssh2_sftp_symlink":{"s":"Create a symlink","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"target","d":"Target of the symbolic link."},{"t":"link","d":""}]},"ssh2_sftp_unlink":{"s":"Delete a file","p":[{"t":"sftp","d":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"t":"filename","d":""}]},"ssh2_shell":{"s":"Request an interactive shell","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"term_type","d":"term_type should correspond to one of the\n       entries in the target system&#039;s \/etc\/termcap file."},{"t":"env","d":"env may be passed as an associative array of\n       name\/value pairs to set in the target environment."},{"t":"width","d":"Width of the virtual terminal."},{"t":"height","d":"Height of the virtual terminal."},{"t":"width_height_type","d":"width_height_type should be one of\n       SSH2_TERM_UNIT_CHARS or\n       SSH2_TERM_UNIT_PIXELS."}]},"ssh2_tunnel":{"s":"Open a tunnel through a remote server","p":[{"t":"session","d":"An SSH connection link identifier, obtained from a call to\n       ssh2_connect()."},{"t":"host","d":""},{"t":"port","d":""}]},"stat":{"s":"Gives information about a file","p":[{"t":"filename","d":"Path to the file."}]},"stats_absolute_deviation":{"s":"Returns the absolute deviation of an array of values","p":[{"t":"a","d":""}]},"stats_cdf_beta":{"s":"CDF function for BETA Distribution. Calculates any one parameter of the beta distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":"Integer indicating which of the next four argument\n               values is to be calculated from the others.\n               Legal range: 1..4\n               which = 1 : Calculate P and Q from X,Y,A and B\n               which = 2 : Calculate X and Y from P,Q,A and B\n               which = 3 : Calculate A from P,Q,X,Y and B\n               which = 4 : Calculate B from P,Q,X,Y and A"}]},"stats_cdf_binomial":{"s":"Calculates any one parameter of the binomial distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_cauchy":{"s":"Not documented","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_chisquare":{"s":"Calculates any one parameter of the chi-square distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"which","d":""}]},"stats_cdf_exponential":{"s":"Not documented","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"which","d":""}]},"stats_cdf_f":{"s":"Calculates any one parameter of the F distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_gamma":{"s":"Calculates any one parameter of the gamma distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_laplace":{"s":"Not documented","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_logistic":{"s":"Not documented","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_negative_binomial":{"s":"Calculates any one parameter of the negative binomial distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_noncentral_chisquare":{"s":"Calculates any one parameter of the non-central chi-square distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_noncentral_f":{"s":"Calculates any one parameter of the Non-central F distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"par4","d":""},{"t":"which","d":""}]},"stats_cdf_poisson":{"s":"Calculates any one parameter of the Poisson distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"which","d":""}]},"stats_cdf_t":{"s":"Calculates any one parameter of the T distribution given values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"which","d":""}]},"stats_cdf_uniform":{"s":"Not documented","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_cdf_weibull":{"s":"Not documented","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_covariance":{"s":"Computes the covariance of two data sets","p":[{"t":"a","d":""},{"t":"b","d":""}]},"stats_dens_beta":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"a","d":""},{"t":"b","d":""}]},"stats_dens_cauchy":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"ave","d":""},{"t":"stdev","d":""}]},"stats_dens_chisquare":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"dfr","d":""}]},"stats_dens_exponential":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"scale","d":""}]},"stats_dens_f":{"s":"","p":[{"t":"x","d":""},{"t":"dfr1","d":""},{"t":"dfr2","d":""}]},"stats_dens_gamma":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"shape","d":""},{"t":"scale","d":""}]},"stats_dens_laplace":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"ave","d":""},{"t":"stdev","d":""}]},"stats_dens_logistic":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"ave","d":""},{"t":"stdev","d":""}]},"stats_dens_negative_binomial":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"n","d":""},{"t":"pi","d":""}]},"stats_dens_normal":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"ave","d":""},{"t":"stdev","d":""}]},"stats_dens_pmf_binomial":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"n","d":""},{"t":"pi","d":""}]},"stats_dens_pmf_hypergeometric":{"s":"","p":[{"t":"n1","d":""},{"t":"n2","d":""},{"t":"N1","d":""},{"t":"N2","d":""}]},"stats_dens_pmf_poisson":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"lb","d":""}]},"stats_dens_t":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"dfr","d":""}]},"stats_dens_weibull":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"a","d":""},{"t":"b","d":""}]},"stats_den_uniform":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"a","d":""},{"t":"b","d":""}]},"stats_harmonic_mean":{"s":"Returns the harmonic mean of an array of values","p":[{"t":"a","d":""}]},"stats_kurtosis":{"s":"Computes the kurtosis of the data in the array","p":[{"t":"a","d":""}]},"stats_rand_gen_beta":{"s":"Generates beta random deviate","p":[{"t":"a","d":""},{"t":"b","d":""}]},"stats_rand_gen_chisquare":{"s":"Generates random deviate from the distribution of a chisquare with &quot;df&quot; degrees of freedom random variable.","p":[{"t":"df","d":""}]},"stats_rand_gen_exponential":{"s":"Generates a single random deviate from an exponential distribution with mean &quot;av&quot;","p":[{"t":"av","d":""}]},"stats_rand_gen_f":{"s":"Generates a random deviate","p":[{"t":"dfn","d":""},{"t":"dfd","d":""}]},"stats_rand_gen_funiform":{"s":"Generates uniform float between low (exclusive) and high (exclusive)","p":[{"t":"low","d":""},{"t":"high","d":""}]},"stats_rand_gen_gamma":{"s":"Generates random deviates from a gamma distribution","p":[{"t":"a","d":"location parameter of Gamma distribution (a\n       &gt; 0)."},{"t":"r","d":"shape parameter of Gamma distribution (r &gt;\n       0)."}]},"stats_rand_gen_ibinomial":{"s":"Generates a single random deviate from a binomial distribution whose number of trials is &quot;n&quot; (n &gt;= 0) and whose probability of an event in each trial is &quot;pp&quot; ([0;1]). Method : algorithm BTPE","p":[{"t":"n","d":""},{"t":"pp","d":""}]},"stats_rand_gen_ibinomial_negative":{"s":"Generates a single random deviate from a negative binomial distribution. Arguments : n - the number of trials in the negative binomial distribution from which a random deviate is to be generated (n &gt; 0), p - the probability of an event (0 &lt; p &lt; 1)).","p":[{"t":"n","d":""},{"t":"p","d":""}]},"stats_rand_gen_int":{"s":"Generates random integer between 1 and 2147483562","p":null},"stats_rand_gen_ipoisson":{"s":"Generates a single random deviate from a Poisson distribution with mean &quot;mu&quot; (mu &gt;= 0.0).","p":[{"t":"mu","d":""}]},"stats_rand_gen_iuniform":{"s":"Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)","p":[{"t":"low","d":""},{"t":"high","d":""}]},"stats_rand_gen_noncenral_chisquare":{"s":"Generates random deviate from the distribution of a noncentral chisquare with &quot;df&quot; degrees of freedom and noncentrality parameter &quot;xnonc&quot;. d must be &gt;= 1.0, xnonc must &gt;= 0.0","p":[{"t":"df","d":""},{"t":"xnonc","d":""}]},"stats_rand_gen_noncentral_f":{"s":"Generates a random deviate from the noncentral F (variance ratio) distribution with &quot;dfn&quot; degrees of freedom in the numerator, and &quot;dfd&quot; degrees of freedom in the denominator, and noncentrality parameter &quot;xnonc&quot;. Method : directly generates ratio of noncentral numerator chisquare variate to central denominator chisquare variate.","p":[{"t":"dfn","d":""},{"t":"dfd","d":""},{"t":"xnonc","d":""}]},"stats_rand_gen_noncentral_t":{"s":"Generates a single random deviate from a noncentral T distribution","p":[{"t":"df","d":""},{"t":"xnonc","d":""}]},"stats_rand_gen_normal":{"s":"Generates a single random deviate from a normal distribution with mean, av, and standard deviation, sd (sd &gt;= 0). Method : Renames SNORM from TOMS as slightly modified by BWB to use RANF instead of SUNIF.","p":[{"t":"av","d":""},{"t":"sd","d":""}]},"stats_rand_gen_t":{"s":"Generates a single random deviate from a T distribution","p":[{"t":"df","d":""}]},"stats_rand_get_seeds":{"s":"Not documented","p":null},"stats_rand_phrase_to_seeds":{"s":"generate two seeds for the RGN random number generator","p":[{"t":"phrase","d":""}]},"stats_rand_ranf":{"s":"Returns a random floating point number from a uniform distribution over 0 - 1 (endpoints of this interval are not returned) using the current generator","p":null},"stats_rand_setall":{"s":"Not documented","p":[{"t":"iseed1","d":""},{"t":"iseed2","d":""}]},"stats_skew":{"s":"Computes the skewness of the data in the array","p":[{"t":"a","d":""}]},"stats_standard_deviation":{"s":"Returns the standard deviation","p":[{"t":"a","d":"The array of data to find the standard deviation for. Note that all \n       values of the array will be cast to float."},{"t":"sample","d":"Indicates if a represents a sample of the \n       population; defaults to false."}]},"stats_stat_binomial_coef":{"s":"Not documented","p":[{"t":"x","d":""},{"t":"n","d":""}]},"stats_stat_correlation":{"s":"Not documented","p":[{"t":"arr1","d":""},{"t":"arr2","d":""}]},"stats_stat_gennch":{"s":"Not documented","p":[{"t":"n","d":""}]},"stats_stat_independent_t":{"s":"Not documented","p":[{"t":"arr1","d":""},{"t":"arr2","d":""}]},"stats_stat_innerproduct":{"s":"","p":[{"t":"arr1","d":""},{"t":"arr2","d":""}]},"stats_stat_noncentral_t":{"s":"Calculates any one parameter of the noncentral t distribution give values for the others.","p":[{"t":"par1","d":""},{"t":"par2","d":""},{"t":"par3","d":""},{"t":"which","d":""}]},"stats_stat_paired_t":{"s":"Not documented","p":[{"t":"arr1","d":""},{"t":"arr2","d":""}]},"stats_stat_percentile":{"s":"Not documented","p":[{"t":"df","d":""},{"t":"xnonc","d":""}]},"stats_stat_powersum":{"s":"Not documented","p":[{"t":"arr","d":""},{"t":"power","d":""}]},"stats_variance":{"s":"Returns the population variance","p":[{"t":"a","d":""},{"t":"sample","d":""}]},"stomp_connect_error":{"s":"Returns a string description of the last connect error","p":null},"stomp_version":{"s":"Gets the current stomp extension version","p":null},"strcasecmp":{"s":"Binary safe case-insensitive string comparison","p":[{"t":"str1","d":"The first string"},{"t":"str2","d":"The second string"}]},"strchr":{"s":"Alias of strstr()","p":null},"strcmp":{"s":"Binary safe string comparison","p":[{"t":"str1","d":"The first string."},{"t":"str2","d":"The second string."}]},"strcoll":{"s":"Locale based string comparison","p":[{"t":"str1","d":"The first string."},{"t":"str2","d":"The second string."}]},"strcspn":{"s":"Find length of initial segment not matching mask","p":[{"t":"str1","d":"The first string."},{"t":"str2","d":"The second string."},{"t":"start","d":"The start position of the string to examine."},{"t":"length","d":"The length of the string to examine."}]},"stream_bucket_prepend":{"s":"","p":[{"t":"brigade","d":"brigade is a resource pointing to a bucket brigade\n      which contains one or more bucket objects."},{"t":"bucket","d":"A bucket object."}]},"stream_context_create":{"s":"Creates a stream context","p":[{"t":"options","d":"Must be an associative array of associative arrays in the format\n       $arr[&#039;wrapper&#039;][&#039;option&#039;] = $value."},{"t":"params","d":"Must be an associative array in the format\n       $arr[&#039;parameter&#039;] = $value.\n       Refer to context parameters for\n       a listing of standard stream parameters."}]},"stream_context_get_default":{"s":"Retrieve the default stream context","p":[{"t":"options","d":""}]},"stream_context_get_options":{"s":"Retrieve options for a stream\/wrapper\/context","p":[{"t":"stream_or_context","d":"The stream or context to get options from"}]},"stream_context_get_params":{"s":"Retrieves parameters from a context","p":[{"t":"stream_or_context","d":"A stream resource or a\n       context resource"}]},"stream_context_set_default":{"s":"Set the default stream context","p":[{"t":"options","d":"The options to set for the default context."}]},"stream_context_set_option":{"s":"Sets an option for a stream\/wrapper\/context","p":[{"t":"stream_or_context","d":"The stream or context resource to apply the options to."},{"t":"options","d":"The options to set for the default context."}]},"stream_context_set_params":{"s":"Set parameters for a stream\/wrapper\/context","p":[{"t":"stream_or_context","d":"The stream or context to apply the parameters too."},{"t":"params","d":"An array of parameters to set."}]},"stream_copy_to_stream":{"s":"Copies data from one stream to another","p":[{"t":"source","d":"The source stream"},{"t":"dest","d":"The destination stream"},{"t":"maxlength","d":"Maximum bytes to copy"},{"t":"offset","d":"The offset where to start to copy data"}]},"stream_encoding":{"s":"Set character set for stream encoding","p":null},"stream_filter_append":{"s":"Attach a filter to a stream","p":[{"t":"stream","d":"The target stream."},{"t":"filtername","d":"The filter name."},{"t":"read_write","d":"By default, stream_filter_append() will\n       attach the filter to the read filter chain\n       if the file was opened for reading (i.e. File Mode:\n       r, and\/or +).  The filter\n       will also be attached to the write filter chain\n       if the file was opened for writing (i.e. File Mode:\n       w, a, and\/or +).\n       STREAM_FILTER_READ,\n       STREAM_FILTER_WRITE, and\/or\n       STREAM_FILTER_ALL can also be passed to the\n       read_write parameter to override this behavior."},{"t":"params","d":"This filter will be added with the specified \n       params to the end of\n       the list and will therefore be called last during stream operations.\n       To add a filter to the beginning of the list, use\n       stream_filter_prepend()."}]},"stream_filter_prepend":{"s":"Attach a filter to a stream","p":[{"t":"stream","d":"The target stream."},{"t":"filtername","d":"The filter name."},{"t":"read_write","d":"By default, stream_filter_prepend() will\n       attach the filter to the read filter chain\n       if the file was opened for reading (i.e. File Mode:\n       r, and\/or +).  The filter\n       will also be attached to the write filter chain\n       if the file was opened for writing (i.e. File Mode:\n       w, a, and\/or +).\n       STREAM_FILTER_READ,\n       STREAM_FILTER_WRITE, and\/or\n       STREAM_FILTER_ALL can also be passed to the\n       read_write parameter to override this behavior.\n       See stream_filter_append() for an example of\n       using this parameter."},{"t":"params","d":"This filter will be added with the specified params\n       to the beginning of the list and will therefore be\n       called first during stream operations.  To add a filter to the end of the\n       list, use stream_filter_append()."}]},"stream_filter_register":{"s":"Register a user defined stream filter","p":[{"t":"filtername","d":"The filter name to be registered."},{"t":"classname","d":"To implement a filter, you need to define a class as an extension of\n       php_user_filter with a number of member\n       functions. When performing read\/write operations on the stream\n       to which your filter is attached, PHP will pass the data through your\n       filter (and any other filters attached to that stream) so that the\n       data may be modified as desired. You must implement the methods\n       exactly as described in php_user_filter - doing\n       otherwise will lead to undefined behaviour."}]},"stream_filter_remove":{"s":"Remove a filter from a stream","p":[{"t":"stream_filter","d":"The stream filter to be removed."}]},"stream_get_contents":{"s":"Reads remainder of a stream into a string","p":[{"t":"handle","d":"A stream resource (e.g. returned from fopen())"},{"t":"maxlength","d":"The maximum bytes to read. Defaults to -1 (read all the remaining\n       buffer)."},{"t":"offset","d":"Seek to the specified offset before reading. If this number is negative,\n       no seeking will occur and reading will start from the current position."}]},"stream_get_filters":{"s":"Retrieve list of registered filters","p":null},"stream_get_line":{"s":"Gets line from stream resource up to a given delimiter","p":[{"t":"handle","d":"A valid file handle."},{"t":"length","d":"The number of bytes to read from the handle."},{"t":"ending","d":"An optional string delimiter."}]},"stream_get_meta_data":{"s":"Retrieves header\/meta data from streams\/file pointers","p":[{"t":"stream","d":"The stream can be any stream created by fopen(),\n       fsockopen() and pfsockopen()."}]},"stream_get_transports":{"s":"Retrieve list of registered socket transports","p":null},"stream_get_wrappers":{"s":"Retrieve list of registered streams","p":null},"stream_is_local":{"s":"Checks if a stream is a local stream","p":[{"t":"stream_or_url","d":"The stream resource or URL to check."}]},"stream_notification_callback":{"s":"A callback function for the notification context paramater","p":[{"t":"notification_code","d":"One of the STREAM_NOTIFY_* notification constants."},{"t":"severity","d":"One of the STREAM_NOTIFY_SEVERITY_* notification constants."},{"t":"message","d":"Passed if a descriptive message is available for the event."},{"t":"message_code","d":"Passed if a descriptive message code is available for the event."},{"t":"bytes_transferred","d":"If applicable, the bytes_transferred will be\n       populated."},{"t":"bytes_max","d":"If applicable, the bytes_max will be\n       populated."}]},"stream_register_wrapper":{"s":"Alias of stream_wrapper_register()","p":null},"stream_resolve_include_path":{"s":"","p":[{"t":"filename","d":"The filename to resolve."}]},"stream_select":{"s":"","p":[{"t":"read","d":"The streams listed in the read array will be watched to\n       see if characters become available for reading (more precisely, to see if\n       a read will not block - in particular, a stream resource is also ready on\n       end-of-file, in which case an fread() will return\n       a zero length string)."},{"t":"write","d":"The streams listed in the write array will be\n       watched to see if a write will not block."},{"t":"except","d":"The streams listed in the except array will be\n       watched for high priority exceptional (&quot;out-of-band&quot;) data arriving."},{"t":"tv_sec","d":"The tv_sec and tv_usec\n       together form the timeout parameter,\n       tv_sec specifies the number of seconds while\n       tv_usec the number of microseconds.\n       The timeout is an upper bound on the amount of time\n       that stream_select() will wait before it returns.\n       If tv_sec and tv_usec are\n       both set to 0, stream_select() will\n       not wait for data - instead it will return immediately, indicating the\n       current status of the streams."}]},"stream_set_blocking":{"s":"Set blocking\/non-blocking mode on a stream","p":[{"t":"stream","d":"The stream."},{"t":"mode","d":"If mode is 0, the given stream\n       will be switched to non-blocking mode, and if 1, it\n       will be switched to blocking mode.  This affects calls like\n       fgets() and fread()\n       that read from the stream.  In non-blocking mode an\n       fgets() call will always return right away\n       while in blocking mode it will wait for data to become available\n       on the stream."}]},"stream_set_chunk_size":{"s":"Set the stream chunk size","p":[{"t":"fp","d":"The target stream."},{"t":"chunk_size","d":"The desired new chunk size."}]},"stream_set_read_buffer":{"s":"Set read file buffering on the given stream","p":[{"t":"stream","d":"The file pointer."},{"t":"buffer","d":"The number of bytes to buffer. If buffer\n      is 0 then read operations are unbuffered.  This ensures that all reads\n      with fread() are completed before other processes are\n      allowed to read from that input stream."}]},"stream_set_timeout":{"s":"Set timeout period on a stream","p":[{"t":"stream","d":"The target stream."},{"t":"seconds","d":"The seconds part of the timeout to be set."},{"t":"microseconds","d":"The microseconds part of the timeout to be set."}]},"stream_set_write_buffer":{"s":"Sets write file buffering on the given stream","p":[{"t":"stream","d":"The file pointer."},{"t":"buffer","d":"The number of bytes to buffer. If buffer\n       is 0 then write operations are unbuffered.  This ensures that all writes\n       with fwrite() are completed before other processes are\n       allowed to write to that output stream."}]},"stream_socket_accept":{"s":"Accept a connection on a socket created by stream_socket_server()","p":[{"t":"server_socket","d":"The server socket to accept a connection from."},{"t":"timeout","d":"Override the default socket accept timeout. Time should be given in\n       seconds."},{"t":"peername","d":"Will be set to the name (address) of the client which connected, if\n       included and available from the selected transport."}]},"stream_socket_client":{"s":"Open Internet or Unix domain socket connection","p":[{"t":"remote_socket","d":"Address to the socket to connect to."},{"t":"errno","d":"Will be set to the system level error number if connection fails."},{"t":"errstr","d":"Will be set to the system level error message if the connection fails."},{"t":"timeout","d":"Number of seconds until the connect() system call\n       should timeout.\n       Note: \n        \n         This parameter only applies when not making asynchronous\n         connection attempts."},{"t":"flags","d":"Bitmask field which may be set to any combination of connection flags.\n       Currently the select of connection flags is limited to\n       STREAM_CLIENT_CONNECT (default),\n       STREAM_CLIENT_ASYNC_CONNECT and\n       STREAM_CLIENT_PERSISTENT."},{"t":"context","d":"A valid context resource created with stream_context_create()."}]},"stream_socket_enable_crypto":{"s":"Turns encryption on\/off on an already connected socket","p":[{"t":"stream","d":"The stream resource."},{"t":"enable","d":"Enable\/disable cryptography on the stream."},{"t":"crypto_type","d":"Setup encryption on the stream.\n       Valid methods are\n       \n        STREAM_CRYPTO_METHOD_SSLv2_CLIENT\n        STREAM_CRYPTO_METHOD_SSLv3_CLIENT\n        STREAM_CRYPTO_METHOD_SSLv23_CLIENT\n        STREAM_CRYPTO_METHOD_TLS_CLIENT\n        STREAM_CRYPTO_METHOD_SSLv2_SERVER\n        STREAM_CRYPTO_METHOD_SSLv3_SERVER\n        STREAM_CRYPTO_METHOD_SSLv23_SERVER\n        STREAM_CRYPTO_METHOD_TLS_SERVER"},{"t":"session_stream","d":"Seed the stream with settings from session_stream."}]},"stream_socket_get_name":{"s":"Retrieve the name of the local or remote sockets","p":[{"t":"handle","d":"The socket to get the name of."},{"t":"want_peer","d":"If set to TRUE the remote socket name will be returned, if set\n       to FALSE the local socket name will be returned."}]},"stream_socket_pair":{"s":"","p":[{"t":"domain","d":"The protocol family to be used: STREAM_PF_INET,\n       STREAM_PF_INET6 or\n       STREAM_PF_UNIX"},{"t":"type","d":"The type of communication to be used:\n       STREAM_SOCK_DGRAM,\n       STREAM_SOCK_RAW,\n       STREAM_SOCK_RDM,\n       STREAM_SOCK_SEQPACKET or\n       STREAM_SOCK_STREAM"},{"t":"protocol","d":"The protocol to be used: STREAM_IPPROTO_ICMP,\n       STREAM_IPPROTO_IP,\n       STREAM_IPPROTO_RAW,\n       STREAM_IPPROTO_TCP or\n       STREAM_IPPROTO_UDP"}]},"stream_socket_recvfrom":{"s":"Receives data from a socket, connected or not ","p":[{"t":"socket","d":"The remote socket."},{"t":"length","d":"The number of bytes to receive from the socket."},{"t":"flags","d":"The value of flags can be any combination\n       of the following:\n       \n        Possible values for flags\n        \n         \n          \n           STREAM_OOB\n           \n            Process OOB (out-of-band) data.\n           \n          \n\n          \n           STREAM_PEEK\n           \n            Retrieve data from the socket, but do not consume the buffer.\n            Subsequent calls to fread() or\n            stream_socket_recvfrom() will see\n            the same data."},{"t":"address","d":"If address is provided it will be populated with\n       the address of the remote socket."}]},"stream_socket_sendto":{"s":"Sends a message to a socket, whether it is connected or not ","p":[{"t":"socket","d":"The socket to send data to."},{"t":"data","d":"The data to be sent."},{"t":"flags","d":"The value of flags can be any combination\n       of the following:\n       \n        possible values for flags\n        \n         \n          \n           STREAM_OOB\n           \n            Process OOB (out-of-band) data."},{"t":"address","d":"The address specified when the socket stream was created will be used\n       unless an alternate address is specified in address."}]},"stream_socket_server":{"s":"Create an Internet or Unix domain server socket","p":[{"t":"local_socket","d":"The type of socket created is determined by the transport specified\n       using standard URL formatting: transport:\/\/target."},{"t":"errno","d":"If the optional errno and errstr\n       arguments are present they will be set to indicate the actual system\n       level error that occurred in the system-level socket(),\n       bind(), and listen() calls. If\n       the value returned in errno is \n       0 and the function returned FALSE, it is an\n       indication that the error occurred before the bind()\n       call. This is most likely due to a problem initializing the socket. \n       Note that the errno and\n       errstr arguments will always be passed by reference."},{"t":"errstr","d":"See errno description."},{"t":"flags","d":"A bitmask field which may be set to any combination of socket creation\n       flags."},{"t":"context","d":""}]},"stream_socket_shutdown":{"s":"Shutdown a full-duplex connection","p":[{"t":"stream","d":"An open stream (opened with stream_socket_client(),\n       for example)"},{"t":"how","d":"One of the following constants: STREAM_SHUT_RD\n       (disable further receptions), STREAM_SHUT_WR\n       (disable further transmissions) or\n       STREAM_SHUT_RDWR (disable further receptions and\n       transmissions)."}]},"stream_supports_lock":{"s":"Tells whether the stream supports locking.","p":[{"t":"stream","d":"The stream to check."}]},"stream_wrapper_register":{"s":"Register a URL wrapper implemented as a PHP class","p":[{"t":"protocol","d":"The wrapper name to be registered."},{"t":"classname","d":"The classname which implements the protocol."},{"t":"flags","d":"Should be set to STREAM_IS_URL if\n       protocol is a URL protocol. Default is 0, local\n       stream."}]},"stream_wrapper_restore":{"s":"Restores a previously unregistered built-in wrapper","p":[{"t":"protocol","d":""}]},"stream_wrapper_unregister":{"s":"Unregister a URL wrapper","p":[{"t":"protocol","d":""}]},"strftime":{"s":"Format a local time\/date according to locale settings","p":[{"t":"format","d":"The following characters are recognized in the\n        format parameter string\n        \n         \n          \n           format\n           Description\n           Example returned values\n          \n\n         \n\n         \n          \n           Day\n           ---\n           ---\n          \n\n          \n           %a\n           An abbreviated textual representation of the day\n           Sun through Sat\n          \n\n          \n           %A\n           A full textual representation of the day\n           Sunday through Saturday\n          \n\n          \n           %d\n           Two-digit day of the month (with leading zeros)\n           01 to 31\n          \n\n          \n           %e\n           \n            Day of the month, with a space preceding single digits. Not \n            implemented as described on Windows. See below for more information.\n           \n            1 to 31\n          \n\n          \n           %j\n           Day of the year, 3 digits with leading zeros\n           001 to 366\n          \n\n          \n           %u\n           ISO-8601 numeric representation of the day of the week\n           1 (for Monday) though 7 (for Sunday)\n          \n\n          \n           %w\n           Numeric representation of the day of the week\n           0 (for Sunday) through 6 (for Saturday)\n          \n\n          \n           Week\n           ---\n           ---\n          \n\n          \n           %U\n           Week number of the given year, starting with the first\n           Sunday as the first week\n           13 (for the 13th full week of the year)\n          \n\n          \n           %V\n           ISO-8601:1988 week number of the given year, starting with\n           the first week of the year with at least 4 weekdays, with Monday\n           being the start of the week\n           01 through 53 (where 53\n           accounts for an overlapping week)\n          \n\n          \n           %W\n           A numeric representation of the week of the year, starting\n           with the first Monday as the first week\n           46 (for the 46th week of the year beginning\n           with a Monday)\n          \n\n          \n           Month\n           ---\n           ---\n          \n\n          \n           %b\n           Abbreviated month name, based on the locale\n           Jan through Dec\n          \n\n          \n           %B\n           Full month name, based on the locale\n           January through December\n          \n\n          \n           %h\n           Abbreviated month name, based on the locale (an alias of %b)\n           Jan through Dec\n          \n\n          \n           %m\n           Two digit representation of the month\n           01 (for January) through 12 (for December)\n          \n\n          \n           Year\n           ---\n           ---\n          \n\n          \n           %C\n           Two digit representation of the century (year divided by 100, truncated to an integer)\n           19 for the 20th Century\n          \n\n          \n           %g\n           Two digit representation of the year going by ISO-8601:1988 standards (see %V)\n           Example: 09 for the week of January 6, 2009\n          \n\n          \n           %G\n           The full four-digit version of %g\n           Example: 2008 for the week of January 3, 2009\n          \n\n          \n           %y\n           Two digit representation of the year\n           Example: 09 for 2009, 79 for 1979\n          \n\n          \n           %Y\n           Four digit representation for the year\n           Example: 2038\n          \n\n          \n           Time\n           ---\n           ---\n          \n\n          \n           %H\n           Two digit representation of the hour in 24-hour format\n           00 through 23\n          \n\n          \n           %k\n           Two digit representation of the hour in 24-hour format, with\n           a space preceding single digits\n            0 through 23\n          \n\n          \n           %I\n           Two digit representation of the hour in 12-hour format\n           01 through 12\n          \n\n          \n           %l (lower-case &#039;L&#039;)\n           Hour in 12-hour format, with a space preceding single digits\n            1 through 12\n          \n\n          \n           %M\n           Two digit representation of the minute\n           00 through 59\n          \n\n          \n           %p\n           UPPER-CASE &#039;AM&#039; or &#039;PM&#039; based on the given time\n           Example: AM for 00:31, PM for 22:23\n          \n\n          \n           %P\n           lower-case &#039;am&#039; or &#039;pm&#039; based on the given time\n           Example: am for 00:31, pm for 22:23\n          \n\n          \n           %r\n           Same as &quot;%I:%M:%S %p&quot;\n           Example: 09:34:17 PM for 21:34:17\n          \n\n          \n           %R\n           Same as &quot;%H:%M&quot;\n           Example: 00:35 for 12:35 AM, 16:44 for 4:44 PM\n          \n\n          \n           %S\n           Two digit representation of the second\n           00 through 59\n          \n\n          \n           %T\n           Same as &quot;%H:%M:%S&quot;\n           Example: 21:34:17 for 09:34:17 PM\n          \n\n          \n           %X\n           Preferred time representation based on locale, without the date\n           Example: 03:59:16 or 15:59:16\n          \n\n          \n           %z\n           The time zone offset. Not implemented as described on\n           Windows. See below for more information.\n           Example: -0500 for US Eastern Time\n          \n\n          \n           %Z\n           The time zone abbreviation. Not implemented as described on\n           Windows. See below for more information.\n           Example: EST for Eastern Time\n          \n\n          \n           Time and Date Stamps\n           ---\n           ---\n          \n\n          \n           %c\n           Preferred date and time stamp based on locale\n           Example: Tue Feb  5 00:45:10 2009 for\n           February 5, 2009 at 12:45:10 AM\n          \n\n          \n           %D\n           Same as &quot;%m\/%d\/%y&quot;\n           Example: 02\/05\/09 for February 5, 2009\n          \n\n          \n           %F\n           Same as &quot;%Y-%m-%d&quot; (commonly used in database datestamps)\n           Example: 2009-02-05 for February 5, 2009\n          \n\n          \n           %s\n           Unix Epoch Time timestamp (same as the time()\n           function)\n           Example: 305815200 for September 10, 1979 08:40:00 AM\n          \n\n          \n           %x\n           Preferred date representation based on locale, without the time\n           Example: 02\/05\/09 for February 5, 2009\n          \n\n          \n           Miscellaneous\n           ---\n           ---\n          \n\n          \n           %n\n           A newline character (&quot;\\n&quot;)\n           ---\n          \n\n          \n           %t\n           A Tab character (&quot;\\t&quot;)\n           ---\n          \n\n          \n           %%\n           A literal percentage character (&quot;%&quot;)\n           ---"}]},"stripcslashes":{"s":"Un-quote string quoted with addcslashes()","p":[{"t":"str","d":"The string to be unescaped."}]},"stripos":{"s":"Find the position of the first occurrence of a case-insensitive substring in a string","p":[{"t":"haystack","d":"The string to search in."},{"t":"needle","d":"Note that the needle may be a string of one or\n       more characters."},{"t":"offset","d":"If specified, search will start this number of characters counted from\n       the beginning of the string. Unlike strrpos() and\n       strripos(), the offset cannot be negative."}]},"stripslashes":{"s":"Un-quotes a quoted string","p":[{"t":"str","d":"The input string."}]},"strip_tags":{"s":"Strip HTML and PHP tags from a string","p":[{"t":"str","d":"The input string."},{"t":"allowable_tags","d":"You can use the optional second parameter to specify tags which should\n       not be stripped."}]},"stristr":{"s":"Case-insensitive strstr()","p":[{"t":"haystack","d":"The string to search in"},{"t":"needle","d":"If needle is not a string, it is converted to\n       an integer and applied as the ordinal value of a character."},{"t":"before_needle","d":"If TRUE, stristr()\n       returns the part of the haystack before the\n       first occurrence of the needle (excluding needle)."}]},"strlen":{"s":"Get string length","p":[{"t":"string","d":"The string being measured for length."}]},"strnatcasecmp":{"s":"Case insensitive string comparisons using a &quot;natural order&quot; algorithm","p":[{"t":"str1","d":"The first string."},{"t":"str2","d":"The second string."}]},"strnatcmp":{"s":"String comparisons using a &quot;natural order&quot; algorithm","p":[{"t":"str1","d":"The first string."},{"t":"str2","d":"The second string."}]},"strncasecmp":{"s":"Binary safe case-insensitive string comparison of the first n characters","p":[{"t":"str1","d":"The first string."},{"t":"str2","d":"The second string."},{"t":"len","d":"The length of strings to be used in the comparison."}]},"strncmp":{"s":"Binary safe string comparison of the first n characters","p":[{"t":"str1","d":"The first string."},{"t":"str2","d":"The second string."},{"t":"len","d":"Number of characters to use in the comparison."}]},"strpbrk":{"s":"Search a string for any of a set of characters","p":[{"t":"haystack","d":"The string where char_list is looked for."},{"t":"char_list","d":"This parameter is case sensitive."}]},"strpos":{"s":"Find the position of the first occurrence of a substring in a string","p":[{"t":"haystack","d":"The string to search in."},{"t":"needle","d":"If needle is not a string, it is converted\n       to an integer and applied as the ordinal value of a character."},{"t":"offset","d":"If specified, search will start this number of characters counted from\n       the beginning of the string. Unlike  strrpos() and\n        strripos(), the offset cannot be negative."}]},"strptime":{"s":"","p":[{"t":"date","d":"The string to parse (e.g. returned from strftime())."},{"t":"format","d":"The format used in date (e.g. the same as\n        used in strftime()). Note that some of the format\n        options available to strftime() may not have any\n        effect within strptime(); the exact subset that are\n        supported will vary based on the operating system and C library in\n        use."}]},"strrchr":{"s":"Find the last occurrence of a character in a string","p":[{"t":"haystack","d":"The string to search in"},{"t":"needle","d":"If needle contains more than one character,\n       only the first is used. This behavior is different from that of\n       strstr()."}]},"strrev":{"s":"Reverse a string","p":[{"t":"string","d":"The string to be reversed."}]},"strripos":{"s":"Find the position of the last occurrence of a case-insensitive substring in a string","p":[{"t":"haystack","d":"The string to search in."},{"t":"needle","d":"If needle is not a string, it is converted\n       to an integer and applied as the ordinal value of a character."},{"t":"offset","d":"If specified, search will start this number of characters counted from the\n       beginning of the string. If the value is negative, search will instead start\n       from that many characters from the end of the string, searching backwards."}]},"strrpos":{"s":"Find the position of the last occurrence of a substring in a string","p":[{"t":"haystack","d":"The string to search in."},{"t":"needle","d":"If needle is not a string, it is converted\n       to an integer and applied as the ordinal value of a character."},{"t":"offset","d":"If specified, search will start this number of characters counted from the\n       beginning of the string. If the value is negative, search will instead start\n       from that many characters from the end of the string, searching backwards."}]},"strspn":{"s":"","p":[{"t":"subject","d":"The string to examine."},{"t":"mask","d":"The list of allowable characters."},{"t":"start","d":"The position in subject to\n       start searching."},{"t":"length","d":"The length of the segment from subject\n       to examine."}]},"strstr":{"s":"Find the first occurrence of a string","p":[{"t":"haystack","d":"The input string."},{"t":"needle","d":"If needle is not a string, it is converted to\n       an integer and applied as the ordinal value of a character."},{"t":"before_needle","d":"If TRUE, strstr() returns\n       the part of the haystack before the first\n       occurrence of the needle (excluding the needle)."}]},"strtok":{"s":"Tokenize string","p":[{"t":"str","d":"The string being split up into smaller strings (tokens)."},{"t":"token","d":"The delimiter used when splitting up str."}]},"strtolower":{"s":"Make a string lowercase","p":[{"t":"str","d":"The input string."}]},"strtotime":{"s":"Parse about any English textual datetime description into a Unix timestamp","p":[{"t":"time","d":"A date\/time string. Valid formats are explained in Date and Time Formats."},{"t":"now","d":"The timestamp which is used as a base for the calculation of relative\n       dates."}]},"strtoupper":{"s":"Make a string uppercase","p":[{"t":"string","d":"The input string."}]},"strtr":{"s":"Translate characters or replace substrings","p":[{"t":"str","d":"The string being translated."},{"t":"from","d":"The string being translated to to."},{"t":"to","d":"The string replacing from."},{"t":"replace_pairs","d":"The replace_pairs parameter may be used instead of \n       to and from, in which case it&#039;s an\n       array in the form array(&#039;from&#039; =&gt; &#039;to&#039;, ...)."}]},"str_getcsv":{"s":"","p":[{"t":"input","d":"The string to parse."},{"t":"delimiter","d":"Set the field delimiter (one character only)."},{"t":"enclosure","d":"Set the field enclosure character (one character only)."},{"t":"escape","d":"Set the escape character (one character only). Defaults as a backslash\n       (\\)"}]},"str_ireplace":{"s":"Case-insensitive version of str_replace()","p":[{"t":"search","d":"The value being searched for, otherwise known as the\n       needle.  An array may be used to designate\n       multiple needles."},{"t":"replace","d":"The replacement value that replaces found search\n       values. An array may be used to designate multiple replacements."},{"t":"subject","d":"The string or array being searched and replaced on,\n       otherwise known as the haystack."},{"t":"count","d":"If passed, this will be set to the number of replacements performed."}]},"str_pad":{"s":"Pad a string to a certain length with another string","p":[{"t":"input","d":"The input string."},{"t":"pad_length","d":"If the value of pad_length is negative,\n       less than, or equal to the length of the input string, no padding\n       takes place."},{"t":"pad_string","d":""},{"t":"pad_type","d":"Optional argument pad_type can be\n       STR_PAD_RIGHT, STR_PAD_LEFT,\n       or STR_PAD_BOTH. If\n       pad_type is not specified it is assumed to be\n       STR_PAD_RIGHT."}]},"str_repeat":{"s":"Repeat a string","p":[{"t":"input","d":"The string to be repeated."},{"t":"multiplier","d":"Number of time the input string should be\n       repeated."}]},"str_replace":{"s":"Replace all occurrences of the search string with the replacement string","p":[{"t":"search","d":"The value being searched for, otherwise known as the needle.\n       An array may be used to designate multiple needles."},{"t":"replace","d":"The replacement value that replaces found search\n       values. An array may be used to designate multiple replacements."},{"t":"subject","d":"The string or array being searched and replaced on,\n       otherwise known as the haystack."},{"t":"count","d":"If passed, this will be set to the number of replacements performed."}]},"str_rot13":{"s":"Perform the rot13 transform on a string","p":[{"t":"str","d":"The input string."}]},"str_shuffle":{"s":"Randomly shuffles a string","p":[{"t":"str","d":"The input string."}]},"str_split":{"s":"Convert a string to an array","p":[{"t":"string","d":"The input string."},{"t":"split_length","d":"Maximum length of the chunk."}]},"str_word_count":{"s":"","p":[{"t":"string","d":"The string"},{"t":"format","d":"Specify the return value of this function. The current supported values\n       are:\n       \n        \n         \n          0 - returns the number of words found\n         \n        \n        \n         \n          1 - returns an array containing all the words found inside the\n          string\n         \n        \n        \n         \n          2 - returns an associative array, where the key is the numeric\n          position of the word inside the string and\n          the value is the actual word itself"},{"t":"charlist","d":"A list of additional characters which will be considered as &#039;word&#039;"}]},"substr":{"s":"Return part of a string","p":[{"t":"string","d":"The input string. Must be one character or longer."},{"t":"start","d":"If start is non-negative, the returned string\n       will start at the start&#039;th position in\n       string, counting from zero. For instance,\n       in the string &#039;abcdef&#039;, the character at\n       position 0 is &#039;a&#039;, the\n       character at position 2 is\n       &#039;c&#039;, and so forth."}]},"substr_compare":{"s":"Binary safe comparison of two strings from an offset, up to length characters","p":[{"t":"main_str","d":"The main string being compared."},{"t":"str","d":"The secondary string being compared."},{"t":"offset","d":"The start position for the comparison. If negative, it starts counting\n       from the end of the string."},{"t":"length","d":"The length of the comparison. The default value is the largest of the\n       length of the str compared to the length of\n       main_str less the\n       offset."},{"t":"case_insensitivity","d":"If case_insensitivity is TRUE, comparison is\n       case insensitive."}]},"substr_count":{"s":"Count the number of substring occurrences","p":[{"t":"haystack","d":"The string to search in"},{"t":"needle","d":"The substring to search for"},{"t":"offset","d":"The offset where to start counting"},{"t":"length","d":"The maximum length after the specified offset to search for the\n       substring. It outputs a warning if the offset plus the length is\n       greater than the haystack length."}]},"substr_replace":{"s":"Replace text within a portion of a string","p":[{"t":"string","d":"The input string."},{"t":"replacement","d":"The replacement string."},{"t":"start","d":"If start is positive, the replacing will\n       begin at the start&#039;th offset into\n       string."},{"t":"length","d":"If given and is positive, it represents the length of the portion of\n       string which is to be replaced. If it is\n       negative, it represents the number of characters from the end of\n       string at which to stop replacing. If it\n       is not given, then it will default to strlen(\n       string ); i.e. end the replacing at the\n       end of string. Of course, if\n       length is zero then this function will have the\n       effect of inserting replacement into\n       string at the given\n       start offset."}]},"svn_add":{"s":"Schedules the addition of an item in a working directory","p":[{"t":"path","d":"Path of item to add."},{"t":"recursive","d":"If item is directory, whether or not to recursively add\n       all of its contents. Default is TRUE"},{"t":"force","d":"If true, Subversion will recurse into already versioned directories\n       in order to add unversioned files that may be hiding in those\n       directories. Default is FALSE"}]},"svn_auth_get_parameter":{"s":"Retrieves authentication parameter","p":[{"t":"key","d":"String key name. Use the authentication constants\n       defined by this extension to specify a key."}]},"svn_auth_set_parameter":{"s":"Sets an authentication parameter","p":[{"t":"key","d":"String key name. Use the authentication constants\n       defined by this extension to specify a key."},{"t":"value","d":"String value to set to parameter at key. Format of value varies\n       with the parameter."}]},"svn_blame":{"s":"Get the SVN blame for a file","p":[{"t":"repository_url","d":"The repository URL."},{"t":"revision_no","d":"The revision number."}]},"svn_cat":{"s":"Returns the contents of a file in a repository","p":[{"t":"repos_url","d":"String URL path to item in a repository."},{"t":"revision_no","d":"Integer revision number of item to retrieve, default is the HEAD\n       revision."}]},"svn_checkout":{"s":"Checks out a working copy from the repository","p":[{"t":"repos","d":"String URL path to directory in repository to check out."},{"t":"targetpath","d":"String local path to directory to check out in to"},{"t":"revision","d":"Integer revision number of repository to check out. Default is\n       HEAD, the most recent revision."},{"t":"flags","d":"Any combination of SVN_NON_RECURSIVE and\n       SVN_IGNORE_EXTERNALS."}]},"svn_cleanup":{"s":"Recursively cleanup a working copy directory, finishing incomplete operations and removing locks","p":[{"t":"workingdir","d":"String path to local working directory to cleanup"}]},"svn_client_version":{"s":"Returns the version of the SVN client libraries","p":null},"svn_commit":{"s":"Sends changes from the local working copy to the repository","p":[{"t":"log","d":"String log text to commit"},{"t":"targets","d":"Array of local paths of files to be committed"}]},"svn_delete":{"s":"Delete items from a working copy or repository.","p":[{"t":"path","d":"Path of item to delete."},{"t":"force","d":"If TRUE, the file will be deleted even if it has local modifications.\n       Otherwise, local modifications will result in a failure. Default is\n       FALSE"}]},"svn_diff":{"s":"Recursively diffs two paths","p":[{"t":"path1","d":"First path to diff. This can be a URL to a file\/directory in an SVN\n       repository or a local file\/directory path."}]},"svn_export":{"s":"Export the contents of a SVN directory","p":[{"t":"frompath","d":"The path to the current repository."},{"t":"topath","d":"The path to the new repository."},{"t":"working_copy","d":"If TRUE, it will export uncommitted files from the working copy."}]},"svn_fs_abort_txn":{"s":"Abort a transaction, returns true if everything is okay, false otherwise","p":null},"svn_fs_apply_text":{"s":"Creates and returns a stream that will be used to replace","p":null},"svn_fs_begin_txn2":{"s":"Create a new transaction","p":null},"svn_fs_change_node_prop":{"s":"Return true if everything is ok, false otherwise","p":null},"svn_fs_check_path":{"s":"Determines what kind of item lives at path in a given repository fsroot","p":null},"svn_fs_contents_changed":{"s":"Return true if content is different, false otherwise","p":null},"svn_fs_copy":{"s":"Copies a file or a directory, returns true if all is ok, false otherwise","p":null},"svn_fs_delete":{"s":"Deletes a file or a directory, return true if all is ok, false otherwise","p":null},"svn_fs_dir_entries":{"s":"Enumerates the directory entries under path; returns a hash of dir names to file type","p":null},"svn_fs_file_contents":{"s":"Returns a stream to access the contents of a file from a given version of the fs","p":null},"svn_fs_file_length":{"s":"Returns the length of a file from a given version of the fs","p":null},"svn_fs_is_dir":{"s":"Return true if the path points to a directory, false otherwise","p":null},"svn_fs_is_file":{"s":"Return true if the path points to a file, false otherwise","p":null},"svn_fs_make_dir":{"s":"Creates a new empty directory, returns true if all is ok, false otherwise","p":null},"svn_fs_make_file":{"s":"Creates a new empty file, returns true if all is ok, false otherwise","p":null},"svn_fs_node_created_rev":{"s":"Returns the revision in which path under fsroot was created","p":null},"svn_fs_node_prop":{"s":"Returns the value of a property for a node","p":null},"svn_fs_props_changed":{"s":"Return true if props are different, false otherwise","p":null},"svn_fs_revision_prop":{"s":"Fetches the value of a named property","p":null},"svn_fs_revision_root":{"s":"Get a handle on a specific version of the repository root","p":null},"svn_fs_txn_root":{"s":"Creates and returns a transaction root","p":null},"svn_fs_youngest_rev":{"s":"Returns the number of the youngest revision in the filesystem","p":null},"svn_import":{"s":"Imports an unversioned path into a repository","p":[{"t":"path","d":"Path of file or directory to import."},{"t":"url","d":"Repository URL to import into."},{"t":"nonrecursive","d":"Whether or not to refrain from recursively processing directories."}]},"svn_log":{"s":"Returns the commit log messages of a repository URL","p":[{"t":"repos_url","d":"Repository URL of the item to retrieve log history from."},{"t":"start_revision","d":"Revision number of the first log to retrieve. Use\n       SVN_REVISION_HEAD to retrieve the log from\n       the most recent revision."},{"t":"end_revision","d":"Revision number of the last log to retrieve. Defaults to\n       start_revision if specified or to\n       SVN_REVISION_INITIAL otherwise."},{"t":"limit","d":"Number of logs to retrieve."},{"t":"flags","d":"Any combination of SVN_OMIT_MESSAGES,\n       SVN_DISCOVER_CHANGED_PATHS and\n       SVN_STOP_ON_COPY."}]},"svn_ls":{"s":"Returns list of directory contents in repository URL, optionally at revision number","p":[{"t":"url","d":"URL of the repository, eg. http:\/\/www.example.com\/svnroot.\n       To access a local Subversion repository via filesystem, use the\n       file URI scheme, eg. file:\/\/\/home\/user\/svn-repos"},{"t":"revision","d":"Integer revision number to retrieve listing of. When omitted,\n       the HEAD revision is used."},{"t":"recurse","d":"Enables recursion."}]},"svn_mkdir":{"s":"Creates a directory in a working copy or repository","p":[{"t":"path","d":"The path to the working copy or repository."}]},"svn_repos_create":{"s":"Create a new subversion repository at path","p":null},"svn_repos_fs":{"s":"Gets a handle on the filesystem for a repository","p":null},"svn_repos_fs_begin_txn_for_commit":{"s":"Create a new transaction","p":null},"svn_repos_fs_commit_txn":{"s":"Commits a transaction and returns the new revision","p":null},"svn_repos_hotcopy":{"s":"Make a hot-copy of the repos at repospath; copy it to destpath","p":null},"svn_repos_open":{"s":"Open a shared lock on a repository.","p":null},"svn_repos_recover":{"s":"Run recovery procedures on the repository located at path.","p":null},"svn_revert":{"s":"Revert changes to the working copy","p":[{"t":"path","d":"The path to the working repository."},{"t":"recursive","d":"Optionally make recursive changes."}]},"svn_status":{"s":"Returns the status of working copy files and directories","p":[{"t":"path","d":"Local path to file or directory to retrieve status of."},{"t":"flags","d":"Any combination of SVN_NON_RECURSIVE,\n       SVN_ALL (regardless of modification status),\n       SVN_SHOW_UPDATES (entries will be added for items\n       that are out-of-date), SVN_NO_IGNORE (disregard\n       svn:ignore properties when scanning for new files)\n       and SVN_IGNORE_EXTERNALS."}]},"svn_update":{"s":"Update working copy","p":[{"t":"path","d":"Path to local working copy."},{"t":"revno","d":"Revision number to update to, default is SVN_REVISION_HEAD."},{"t":"recurse","d":"Whether or not to recursively update directories."}]},"swf_actiongeturl":{"s":"Get a URL from a Shockwave Flash movie","p":[{"t":"url","d":"The URL, as a string."},{"t":"target","d":"The target, as a string."}]},"swf_actiongotoframe":{"s":"Play a frame and then stop","p":[{"t":"framenumber","d":"The frame number."}]},"swf_actiongotolabel":{"s":"Display a frame with the specified label","p":[{"t":"label","d":"The frame label."}]},"swf_actionnextframe":{"s":"Go forward one frame","p":null},"swf_actionplay":{"s":"Start playing the flash movie from the current frame","p":null},"swf_actionprevframe":{"s":"Go backwards one frame","p":null},"swf_actionsettarget":{"s":"Set the context for actions","p":[{"t":"target","d":"The target, as a string."}]},"swf_actionstop":{"s":"Stop playing the flash movie at the current frame","p":null},"swf_actiontogglequality":{"s":"Toggle between low and high quality","p":null},"swf_actionwaitforframe":{"s":"Skip actions if a frame has not been loaded","p":[{"t":"framenumber","d":"The frame number."},{"t":"skipcount","d":"The number of actions to skip."}]},"swf_addbuttonrecord":{"s":"Controls location, appearance and active area of the current button","p":[{"t":"states","d":"Defines what states the button can have, these can be any or all of\n       the following constants: BSHitTest, \n       BSDown, BSOver or\n       BSUp."},{"t":"shapeid","d":"The second parameter, the shapeid is the look\n       of the button, this is usually the object id of the shape of the\n       button."},{"t":"depth","d":"This parameter is the placement of the button in the current frame."}]},"swf_addcolor":{"s":"Set the global add color to the rgba value specified","p":[{"t":"r","d":"Red value"},{"t":"g","d":"Green value"},{"t":"b","d":"Blue value"},{"t":"a","d":"Alpha value"}]},"swf_closefile":{"s":"Close the current Shockwave Flash file","p":[{"t":"return_file","d":"If set then the contents of the SWF file are returned from the\n       function."}]},"swf_definebitmap":{"s":"Define a bitmap","p":[{"t":"objid","d":"An SWF object id."},{"t":"image_name","d":"A GIF, JPEG, RGB or FI image. The image will be converted into a Flash\n       JPEG or Flash color map format."}]},"swf_definefont":{"s":"Defines a font","p":[{"t":"fontid","d":"The id to be given to the font."},{"t":"fontname","d":"The font so be set as current font."}]},"swf_defineline":{"s":"Define a line","p":[{"t":"objid","d":"The object id."},{"t":"x1","d":"x-coordinate of start point."},{"t":"y1","d":"y-coordinate of start point."},{"t":"x2","d":"x-coordinate of end point."},{"t":"y2","d":"y-coordinate of end point."},{"t":"width","d":"The line width."}]},"swf_definepoly":{"s":"Define a polygon","p":[{"t":"objid","d":"The object id."},{"t":"coords","d":"An array of x, y coordinates."},{"t":"npoints","d":"The number of overall points that are contained in the array given by\n       coords"},{"t":"width","d":"The width of the polygon&#039;s border, if set to 0.0 the polygon is\n       filled."}]},"swf_definerect":{"s":"Define a rectangle","p":[{"t":"objid","d":"The object id."},{"t":"x1","d":"x-coordinate of upper left point."},{"t":"y1","d":"y-coordinate of upper left point."},{"t":"x2","d":"x-coordinate of lower right point."},{"t":"y2","d":"y-coordinate of lower right point."},{"t":"width","d":"Width of the rectangles border, if the width is 0.0 then the rectangle\n       is filled."}]},"swf_definetext":{"s":"Define a text string","p":[{"t":"objid","d":"The object id."},{"t":"str","d":"The text, as a string."},{"t":"docenter","d":"The docenter is where the word is centered, if\n       docenter is 1, then the word is centered in x."}]},"swf_endbutton":{"s":"End the definition of the current button","p":null},"swf_endshape":{"s":"Completes the definition of the current shape","p":null},"swf_fontsize":{"s":"Change the font size","p":[{"t":"size","d":"The font size, as an integer."}]},"swf_fontslant":{"s":"Set the font slant","p":[{"t":"slant","d":"Positive values create a forward slant, negative values create a\n       negative slant."}]},"swf_fonttracking":{"s":"Set the current font tracking","p":[{"t":"tracking","d":"The font tracking."}]},"swf_getbitmapinfo":{"s":"Get information about a bitmap","p":[{"t":"bitmapid","d":"The bitmap id."}]},"swf_getfontinfo":{"s":"Gets font information","p":null},"swf_getframe":{"s":"Get the frame number of the current frame","p":null},"swf_labelframe":{"s":"Label the current frame","p":[{"t":"name","d":"The frame label."}]},"swf_lookat":{"s":"Define a viewing transformation","p":[{"t":"view_x","d":"x-coordinate for the viewing position"},{"t":"view_y","d":"y-coordinate for the viewing position"},{"t":"view_z","d":"z-coordinate for the viewing position"},{"t":"reference_x","d":"x-coordinate for the reference point"},{"t":"reference_y","d":"y-coordinate for the reference point"},{"t":"reference_z","d":"z-coordinate for the reference point"},{"t":"twist","d":"Controls the rotation along with viewer&#039;s z axis."}]},"swf_modifyobject":{"s":"Modify an object","p":[{"t":"depth","d":"The depth, as an integer."},{"t":"how","d":"Determines what is updated. how can either be\n       the constant MOD_MATRIX or \n       MOD_COLOR or it can be a combination of both."}]},"swf_mulcolor":{"s":"Sets the global multiply color to the rgba value specified","p":[{"t":"r","d":"Red value"},{"t":"g","d":"Green value"},{"t":"b","d":"Blue value"},{"t":"a","d":"Alpha value"}]},"swf_nextid":{"s":"Returns the next free object id","p":null},"swf_oncondition":{"s":"Describe a transition used to trigger an action list","p":[{"t":"transition","d":"There are several types of possible transitions, the following are for\n       buttons defined as TYPE_MENUBUTTON:\n       \n        \n         \n          IdletoOverUp\n         \n        \n        \n         \n          OverUptoIdle\n         \n        \n        \n         \n          OverUptoOverDown\n         \n        \n        \n         \n          OverDowntoOverUp\n         \n        \n        \n         \n          IdletoOverDown\n         \n        \n        \n         \n          OutDowntoIdle\n         \n        \n        \n         \n          MenuEnter (IdletoOverUp|IdletoOverDown)\n         \n        \n        \n         \n          MenuExit (OverUptoIdle|OverDowntoIdle)\n         \n        \n       \n       For TYPE_PUSHBUTTON there are the following options:\n       \n        \n         \n          IdletoOverUp\n         \n        \n        \n         \n          OverUptoIdle\n         \n        \n        \n         \n          OverUptoOverDown\n         \n        \n        \n         \n          OverDowntoOverUp\n         \n        \n        \n         \n          OverDowntoOutDown\n         \n        \n        \n         \n          OutDowntoOverDown\n         \n        \n        \n         \n          OutDowntoIdle\n         \n        \n        \n         \n          ButtonEnter (IdletoOverUp|OutDowntoOverDown)\n         \n        \n        \n         \n          ButtonExit  (OverUptoIdle|OverDowntoOutDown)"}]},"swf_openfile":{"s":"Open a new Shockwave Flash file","p":[{"t":"filename","d":"The path to the SWF file. If you want to send your output to the\n       screen, set this to php:\/\/stdout."},{"t":"width","d":"The movie width"},{"t":"height","d":"The movie height"},{"t":"framerate","d":"The frame rate."},{"t":"r","d":"Red value for the background."},{"t":"g","d":"Green value for the background."},{"t":"b","d":"Blue value for the background."}]},"swf_ortho":{"s":"Defines an orthographic mapping of user coordinates onto the current viewport","p":[{"t":"xmin","d":""},{"t":"xmax","d":""},{"t":"ymin","d":""},{"t":"ymax","d":""},{"t":"zmin","d":""},{"t":"zmax","d":""}]},"swf_ortho2":{"s":"Defines 2D orthographic mapping of user coordinates onto the current viewport","p":[{"t":"xmin","d":""},{"t":"xmax","d":""},{"t":"ymin","d":""},{"t":"ymax","d":""}]},"swf_perspective":{"s":"Define a perspective projection transformation","p":[{"t":"fovy","d":"A field-of-view angle in the y direction."},{"t":"aspect","d":"The aspect ratio of the viewport that is being drawn onto."},{"t":"near","d":"The near clipping plane."},{"t":"far","d":"The far clipping plane."}]},"swf_placeobject":{"s":"Place an object onto the screen","p":[{"t":"objid","d":"The object id."},{"t":"depth","d":"Must be between 1 and 65535."}]},"swf_polarview":{"s":"Define the viewer&#039;s position with polar coordinates","p":[{"t":"dist","d":"The distance between the viewpoint to the world space origin."},{"t":"azimuth","d":"Defines the azimuthal angle in the x,y coordinate plane, measured in\n       distance from the y axis."},{"t":"incidence","d":"Defines the angle of incidence in the y,z plane, measured in distance\n       from the z axis.  The incidence angle is defined as the angle of the\n       viewport relative to the z axis."},{"t":"twist","d":"Specifies the amount that the viewpoint is to be rotated about the\n       line of sight using the right hand rule."}]},"swf_popmatrix":{"s":"Restore a previous transformation matrix","p":null},"swf_posround":{"s":"Enables or Disables the rounding of the translation when objects are placed or moved","p":[{"t":"round","d":"Whether to enable rounding or not, if set to the value of 1, then\n       rounding is enabled, if set to 0 then rounding is disabled."}]},"swf_pushmatrix":{"s":"Push the current transformation matrix back onto the stack","p":null},"swf_removeobject":{"s":"Remove an object","p":[{"t":"depth","d":"The depth, as an integer."}]},"swf_rotate":{"s":"Rotate the current transformation","p":[{"t":"angle","d":"The rotation angle."},{"t":"axis","d":"The axis. Valid values axis are x (the x axis), \n       y (the y axis) or z (the z\n       axis)."}]},"swf_scale":{"s":"Scale the current transformation","p":[{"t":"x","d":"x scale factor."},{"t":"y","d":"y scale factor."},{"t":"z","d":"z scale factor."}]},"swf_setfont":{"s":"Change the current font","p":[{"t":"fontid","d":"The font identifier."}]},"swf_setframe":{"s":"Switch to a specified frame","p":[{"t":"framenumber","d":"The frame number to be set."}]},"swf_shapearc":{"s":"Draw a circular arc","p":[{"t":"x","d":"x-coordinate of the center."},{"t":"y","d":"y-coordinate of the center."},{"t":"r","d":"The arc radius."},{"t":"ang1","d":"The start angle."},{"t":"ang2","d":"The end angle."}]},"swf_shapecurveto":{"s":"Draw a quadratic bezier curve between two points","p":[{"t":"x1","d":"x-coordinate of the first point."},{"t":"y1","d":"y-coordinate of the first point."},{"t":"x2","d":"x-coordinate of the second point."},{"t":"y2","d":"y-coordinate of the second point."}]},"swf_shapecurveto3":{"s":"Draw a cubic bezier curve","p":[{"t":"x1","d":"x-coordinate of the first off curve control point."},{"t":"y1","d":"y-coordinate of the first off curve control point."},{"t":"x2","d":"x-coordinate of the second off curve control point."},{"t":"y2","d":"y-coordinate of the second off curve control point."},{"t":"x3","d":"x-coordinate of the endpoint."},{"t":"y3","d":"y-coordinate of the endpoint."}]},"swf_shapefillbitmapclip":{"s":"Set current fill mode to clipped bitmap","p":[{"t":"bitmapid","d":"The bitmap id."}]},"swf_shapefillbitmaptile":{"s":"Set current fill mode to tiled bitmap","p":[{"t":"bitmapid","d":"The bitmap id."}]},"swf_shapefilloff":{"s":"Turns off filling","p":null},"swf_shapefillsolid":{"s":"Set the current fill style to the specified color","p":[{"t":"r","d":"Red value"},{"t":"g","d":"Green value"},{"t":"b","d":"Blue value"},{"t":"a","d":"Alpha value"}]},"swf_shapelinesolid":{"s":"Set the current line style","p":[{"t":"r","d":"Red value"},{"t":"g","d":"Green value"},{"t":"b","d":"Blue value"},{"t":"a","d":"Alpha value"},{"t":"width","d":"The line width. If 0.0 is given then no lines are drawn."}]},"swf_shapelineto":{"s":"Draw a line","p":[{"t":"x","d":"x-coordinate of the target."},{"t":"y","d":"y-coordinate of the target."}]},"swf_shapemoveto":{"s":"Move the current position","p":[{"t":"x","d":"x-coordinate of the target."},{"t":"y","d":"y-coordinate of the target."}]},"swf_showframe":{"s":"Display the current frame","p":null},"swf_startbutton":{"s":"Start the definition of a button","p":[{"t":"objid","d":"The object id."},{"t":"type","d":"Can either be TYPE_MENUBUTTON or\n       TYPE_PUSHBUTTON.  The\n       TYPE_MENUBUTTON constant allows the focus to\n       travel from the button when the mouse is down,\n       TYPE_PUSHBUTTON does not allow the focus to\n       travel when the mouse is down."}]},"swf_startdoaction":{"s":"Start a description of an action list for the current frame","p":null},"swf_startshape":{"s":"Start a complex shape","p":[{"t":"objid","d":"The object id."}]},"swf_startsymbol":{"s":"Define a symbol","p":[{"t":"objid","d":"The object id you want to define as a symbol."}]},"swf_textwidth":{"s":"Get the width of a string","p":[{"t":"str","d":"The string."}]},"swf_translate":{"s":"Translate the current transformations","p":[{"t":"x","d":"x value."},{"t":"y","d":"y value."},{"t":"z","d":"z value."}]},"swf_viewport":{"s":"Select an area for future drawing","p":[{"t":"xmin","d":""},{"t":"xmax","d":""},{"t":"ymin","d":""},{"t":"ymax","d":""}]},"sybase_affected_rows":{"s":"Gets number of affected rows in last query","p":[{"t":"link_identifier","d":"If the link identifier isn&#039;t specified, the last opened link is assumed."}]},"sybase_close":{"s":"Closes a Sybase connection","p":[{"t":"link_identifier","d":"If the link identifier isn&#039;t specified, the last opened link is\n       assumed."}]},"sybase_connect":{"s":"Opens a Sybase server connection","p":[{"t":"servername","d":"The servername argument has to be a valid servername that is defined\n       in the &#039;interfaces&#039; file."},{"t":"username","d":"Sybase user name"},{"t":"password","d":"Password associated with username."},{"t":"charset","d":"Specifies the charset for the connection"},{"t":"appname","d":"Specifies an appname for the Sybase connection.\n       This allow you to make separate connections in the same script to the\n       same database. This may come handy when you have started a transaction\n       in your current connection, and you need to be able to do a separate\n       query which cannot be performed inside this transaction."},{"t":"new","d":"Whether to open a new connection or use the existing one."}]},"sybase_data_seek":{"s":"Moves internal row pointer","p":[{"t":"result_identifier","d":""},{"t":"row_number","d":""}]},"sybase_deadlock_retry_count":{"s":"Sets the deadlock retry count","p":[{"t":"retry_count","d":"Values for retry_count\n        \n         \n          \n           -1\n           Retry forever (default)\n          \n\n          \n           0\n           Do not retry\n          \n\n          \n           n\n           Retry n times"}]},"sybase_fetch_array":{"s":"Fetch row as array","p":[{"t":"result","d":""}]},"sybase_fetch_assoc":{"s":"Fetch a result row as an associative array","p":[{"t":"result","d":""}]},"sybase_fetch_field":{"s":"Get field information from a result","p":[{"t":"result","d":""},{"t":"field_offset","d":"If the field offset isn&#039;t specified, the next field that wasn&#039;t yet\n       retrieved by sybase_fetch_field() is retrieved."}]},"sybase_fetch_object":{"s":"Fetch a row as an object","p":[{"t":"result","d":""},{"t":"object","d":"Use the second object to specify the type of object\n       you want to return. If this parameter is omitted, the object will be of\n       type stdClass."}]},"sybase_fetch_row":{"s":"Get a result row as an enumerated array","p":[{"t":"result","d":""}]},"sybase_field_seek":{"s":"Sets field offset","p":[{"t":"result","d":""},{"t":"field_offset","d":""}]},"sybase_free_result":{"s":"Frees result memory","p":[{"t":"result","d":""}]},"sybase_get_last_message":{"s":"Returns the last message from the server","p":null},"sybase_min_client_severity":{"s":"Sets minimum client severity","p":[{"t":"severity","d":""}]},"sybase_min_error_severity":{"s":"Sets minimum error severity","p":[{"t":"severity","d":""}]},"sybase_min_message_severity":{"s":"Sets minimum message severity","p":[{"t":"severity","d":""}]},"sybase_min_server_severity":{"s":"Sets minimum server severity","p":[{"t":"severity","d":""}]},"sybase_num_fields":{"s":"Gets the number of fields in a result set","p":[{"t":"result","d":""}]},"sybase_num_rows":{"s":"Get number of rows in a result set","p":[{"t":"result","d":""}]},"sybase_pconnect":{"s":"Open persistent Sybase connection","p":[{"t":"servername","d":"The servername argument has to be a valid servername that is defined\n       in the &#039;interfaces&#039; file."},{"t":"username","d":"Sybase user name"},{"t":"password","d":"Password associated with username."},{"t":"charset","d":"Specifies the charset for the connection"},{"t":"appname","d":"Specifies an appname for the Sybase connection.\n       This allow you to make separate connections in the same script to the\n       same database. This may come handy when you have started a transaction\n       in your current connection, and you need to be able to do a separate\n       query which cannot be performed inside this transaction."}]},"sybase_query":{"s":"Sends a Sybase query","p":[{"t":"query","d":""},{"t":"link_identifier","d":"If the link identifier isn&#039;t specified, the last opened link is\n       assumed. If no link is open, the function tries to establish a link as\n       if sybase_connect() was called, and use it."}]},"sybase_result":{"s":"Get result data","p":[{"t":"result","d":""},{"t":"row","d":""},{"t":"field","d":"The field argument can be the field&#039;s offset, or the field&#039;s name, or\n       the field&#039;s table dot field&#039;s name (tablename.fieldname).  If the\n       column name has been aliased (&#039;select foo as bar from...&#039;), use the\n       alias instead of the column name."}]},"sybase_select_db":{"s":"Selects a Sybase database","p":[{"t":"database_name","d":""},{"t":"link_identifier","d":"If no link identifier is specified, the last opened link is assumed.\n       If no link is open, the function will try to establish a link as if\n       sybase_connect() was called, and use it."}]},"sybase_set_message_handler":{"s":"Sets the handler called when a server message is raised","p":[{"t":"handler","d":"The handler expects five arguments in the following order: message\n       number, severity, state, line number and description.  The first four\n       are integers. The last is a string. If the function returns FALSE,\n       PHP generates an ordinary error message."},{"t":"link_identifier","d":"If the link identifier isn&#039;t specified, the last opened link is assumed."}]},"sybase_unbuffered_query":{"s":"Send a Sybase query and do not block","p":[{"t":"query","d":""},{"t":"link_identifier","d":""},{"t":"store_result","d":"The optional store_result can be FALSE to\n       indicate the resultsets shouldn&#039;t be fetched into memory, thus\n       minimizing memory usage which is particularly interesting with very\n       large resultsets."}]},"symlink":{"s":"Creates a symbolic link","p":[{"t":"target","d":"Target of the link."},{"t":"link","d":"The link name."}]},"syslog":{"s":"Generate a system log message","p":[{"t":"priority","d":"priority is a combination of the facility and\n       the level. Possible values are:\n       \n        syslog() Priorities (in descending order)\n        \n         \n          \n           Constant\n           Description\n          \n\n         \n\n         \n          \n           LOG_EMERG\n           system is unusable\n          \n\n          \n           LOG_ALERT\n           action must be taken immediately\n          \n\n          \n           LOG_CRIT\n           critical conditions\n          \n\n          \n           LOG_ERR\n           error conditions\n          \n\n          \n           LOG_WARNING\n           warning conditions\n          \n\n          \n           LOG_NOTICE\n           normal, but significant, condition\n          \n\n          \n           LOG_INFO\n           informational message\n          \n\n          \n           LOG_DEBUG\n           debug-level message"},{"t":"message","d":"The message to send, except that the two characters\n       %m will be replaced by the error message string\n       (strerror) corresponding to the present value of\n       errno."}]},"system":{"s":"Execute an external program and display the output","p":[{"t":"command","d":"The command that will be executed."},{"t":"return_var","d":"If the return_var argument is present, then the\n       return status of the executed command will be written to this\n       variable."}]},"sys_getloadavg":{"s":"Gets system load average","p":null},"sys_get_temp_dir":{"s":"Returns directory path used for temporary files","p":null},"taint":{"s":"Taint a string","p":[{"t":"string","d":""},{"t":"...","d":""}]},"tan":{"s":"Tangent","p":[{"t":"arg","d":"The argument to process in radians"}]},"tanh":{"s":"Hyperbolic tangent","p":[{"t":"arg","d":"The argument to process"}]},"tcpwrap_check":{"s":"Performs a tcpwrap check","p":[{"t":"daemon","d":"The service name."},{"t":"address","d":"The client remote address. Can be either an IP address or a domain name."},{"t":"user","d":"An optional user name."},{"t":"nodns","d":"If address looks like domain name then DNS is \n       used to resolve it to IP address; set nodns to \n       TRUE to avoid this."}]},"tempnam":{"s":"Create file with unique file name","p":[{"t":"dir","d":"The directory where the temporary filename will be created."},{"t":"prefix","d":"The prefix of the generated temporary filename."}]},"textdomain":{"s":"Sets the default domain","p":[{"t":"text_domain","d":"The new message domain, or NULL to get the current setting without\n       changing it"}]},"tidy_access_count":{"s":"Returns the Number of Tidy accessibility warnings encountered for specified document","p":[{"t":"object","d":"The Tidy object."}]},"tidy_config_count":{"s":"Returns the Number of Tidy configuration errors encountered for specified document","p":[{"t":"object","d":"The Tidy object."}]},"tidy_error_count":{"s":"Returns the Number of Tidy errors encountered for specified document","p":[{"t":"object","d":"The Tidy object."}]},"tidy_get_output":{"s":"Return a string representing the parsed tidy markup","p":[{"t":"object","d":"The Tidy object."}]},"tidy_load_config":{"s":"Load an ASCII Tidy configuration file with the specified encoding","p":[{"t":"filename","d":""},{"t":"encoding","d":""}]},"tidy_reset_config":{"s":"Restore Tidy configuration to default values","p":null},"tidy_save_config":{"s":"Save current settings to named file","p":[{"t":"filename","d":"Path to the config file."}]},"tidy_setopt":{"s":"Updates the configuration settings for the specified tidy document","p":[{"t":"option","d":"The tidy option name. A list of available configuration options may\n       be found at: &raquo;&nbsp;http:\/\/tidy.sourceforge.net\/docs\/quickref.html."},{"t":"value","d":"The tidy option name."}]},"tidy_set_encoding":{"s":"Set the input\/output character encoding for parsing markup","p":[{"t":"encoding","d":"The encoding parameter sets the encoding for\n       input\/output documents. The possible values for encoding  are: \n       ascii, latin0, latin1,\n       raw, utf8, iso2022,\n       mac, win1252, ibm858,\n       utf16, utf16le, utf16be,\n       big5, and shiftjis."}]},"tidy_warning_count":{"s":"Returns the Number of Tidy warnings encountered for specified document","p":[{"t":"object","d":"The Tidy object."}]},"time":{"s":"Return current Unix timestamp","p":null},"timezone_abbreviations_list":{"s":"Alias of DateTimeZone::listAbbreviations()","p":null},"timezone_identifiers_list":{"s":"Alias of DateTimeZone::listIdentifiers()","p":null},"timezone_location_get":{"s":"Alias of DateTimeZone::getLocation()","p":null},"timezone_name_from_abbr":{"s":"Returns the timezone name from abbreviation","p":[{"t":"abbr","d":"Time zone abbreviation."},{"t":"gmtOffset","d":"Offset from GMT in seconds. Defaults to -1 which means that first found\n       time zone corresponding to abbr is returned.\n       Otherwise exact offset is searched and only if not found then the first\n       time zone with any offset is returned."},{"t":"isdst","d":"Daylight saving time indicator. Defaults to -1, which means that\n       whether the time zone has daylight saving or not is not taken into\n       consideration when searching. If this is set to 1, then the\n       gmtOffset is assumed to be an offset with\n       daylight saving in effect; if 0, then gmtOffset\n       is assumed to be an offset without daylight saving in effect. If\n       abbr doesn&#039;t exist then the time zone is\n       searched solely by the gmtOffset and\n       isdst."}]},"timezone_name_get":{"s":"Alias of DateTimeZone::getName()","p":null},"timezone_offset_get":{"s":"Alias of DateTimeZone::getOffset()","p":null},"timezone_open":{"s":"Alias of DateTimeZone::__construct()","p":null},"timezone_transitions_get":{"s":"Alias of DateTimeZone::getTransitions()","p":null},"time_nanosleep":{"s":"Delay for a number of seconds and nanoseconds","p":[{"t":"seconds","d":"Must be a non-negative integer."},{"t":"nanoseconds","d":"Must be a non-negative integer less than 1 billion."}]},"time_sleep_until":{"s":"","p":[{"t":"timestamp","d":"The timestamp when the script should wake."}]},"tmpfile":{"s":"Creates a temporary file","p":null},"token_get_all":{"s":"Split given source into PHP tokens","p":[{"t":"source","d":"The PHP source to parse."}]},"token_name":{"s":"Get the symbolic name of a given PHP token","p":[{"t":"token","d":"The token value."}]},"touch":{"s":"Sets access and modification time of file","p":[{"t":"filename","d":"The name of the file being touched."},{"t":"time","d":"The touch time. If time is not supplied, \n       the current system time is used."},{"t":"atime","d":"If present, the access time of the given filename is set to \n       the value of atime. Otherwise, it is set to\n       the value passed to the time parameter.\n       If neither are present, the current system time is used."}]},"trader_acos":{"s":"Vector Trigonometric ACos","p":[{"t":"real","d":"Array of real values."}]},"trader_ad":{"s":"Chaikin A\/D Line","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"volume","d":"Volume traded, array of real values."}]},"trader_add":{"s":"Vector Arithmetic Add","p":[{"t":"real0","d":"Array of real values."},{"t":"real1","d":"Array of real values."}]},"trader_adosc":{"s":"Chaikin A\/D Oscillator","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"volume","d":"Volume traded, array of real values."},{"t":"fastPeriod","d":"Number of period for the fast MA. Valid range from 2 to 100000."},{"t":"slowPeriod","d":"Number of period for the slow MA. Valid range from 2 to 100000."}]},"trader_adx":{"s":"Average Directional Movement Index","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_adxr":{"s":"Average Directional Movement Index Rating","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_apo":{"s":"Absolute Price Oscillator","p":[{"t":"real","d":"Array of real values."},{"t":"fastPeriod","d":"Number of period for the fast MA. Valid range from 2 to 100000."},{"t":"slowPeriod","d":"Number of period for the slow MA. Valid range from 2 to 100000."},{"t":"mAType","d":"Type of Moving Average. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_aroon":{"s":"Aroon","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_aroonosc":{"s":"Aroon Oscillator","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_asin":{"s":"Vector Trigonometric ASin","p":[{"t":"real","d":"Array of real values."}]},"trader_atan":{"s":"Vector Trigonometric ATan","p":[{"t":"real","d":"Array of real values."}]},"trader_atr":{"s":"Average True Range","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_avgprice":{"s":"Average Price","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_bbands":{"s":"Bollinger Bands","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."},{"t":"nbDevUp","d":"Deviation multiplier for upper band. Valid range from TRADER_REAL_MIN to TRADER_REAL_MAX."},{"t":"nbDevDn","d":"Deviation multiplier for lower band. Valid range from TRADER_REAL_MIN to TRADER_REAL_MAX."},{"t":"mAType","d":"Type of Moving Average. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_beta":{"s":"Beta","p":[{"t":"real0","d":"Array of real values."},{"t":"real1","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_bop":{"s":"Balance Of Power","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cci":{"s":"Commodity Channel Index","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_cdl2crows":{"s":"Two Crows","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdl3blackcrows":{"s":"Three Black Crows","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdl3inside":{"s":"Three Inside Up\/Down","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdl3linestrike":{"s":"Three-Line Strike","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdl3outside":{"s":"Three Outside Up\/Down","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdl3starsinsouth":{"s":"Three Stars In The South","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdl3whitesoldiers":{"s":"Three Advancing White Soldiers","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlabandonedbaby":{"s":"Abandoned Baby","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"penetration","d":"Percentage of penetration of a candle within another candle."}]},"trader_cdladvanceblock":{"s":"Advance Block","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlbelthold":{"s":"Belt-hold","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlbreakaway":{"s":"Breakaway","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlclosingmarubozu":{"s":"Closing Marubozu","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlconcealbabyswall":{"s":"Concealing Baby Swallow","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlcounterattack":{"s":"Counterattack","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdldarkcloudcover":{"s":"Dark Cloud Cover","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"penetration","d":"Percentage of penetration of a candle within another candle."}]},"trader_cdldoji":{"s":"Doji","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdldojistar":{"s":"Doji Star","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdldragonflydoji":{"s":"Dragonfly Doji","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlengulfing":{"s":"Engulfing Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdleveningdojistar":{"s":"Evening Doji Star","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"penetration","d":"Percentage of penetration of a candle within another candle."}]},"trader_cdleveningstar":{"s":"Evening Star","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"penetration","d":"Percentage of penetration of a candle within another candle."}]},"trader_cdlgapsidesidewhite":{"s":"Up\/Down-gap side-by-side white lines","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlgravestonedoji":{"s":"Gravestone Doji","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlhammer":{"s":"Hammer","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlhangingman":{"s":"Hanging Man","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlharami":{"s":"Harami Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlharamicross":{"s":"Harami Cross Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlhighwave":{"s":"High-Wave Candle","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlhikkake":{"s":"Hikkake Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlhikkakemod":{"s":"Modified Hikkake Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlhomingpigeon":{"s":"Homing Pigeon","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlidentical3crows":{"s":"Identical Three Crows","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlinneck":{"s":"In-Neck Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlinvertedhammer":{"s":"Inverted Hammer","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlkicking":{"s":"Kicking","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlkickingbylength":{"s":"Kicking - bull\/bear determined by the longer marubozu","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlladderbottom":{"s":"Ladder Bottom","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdllongleggeddoji":{"s":"Long Legged Doji","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdllongline":{"s":"Long Line Candle","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlmarubozu":{"s":"Marubozu","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlmatchinglow":{"s":"Matching Low","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlmathold":{"s":"Mat Hold","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"penetration","d":"Percentage of penetration of a candle within another candle."}]},"trader_cdlmorningdojistar":{"s":"Morning Doji Star","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"penetration","d":"Percentage of penetration of a candle within another candle."}]},"trader_cdlmorningstar":{"s":"Morning Star","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"penetration","d":"Percentage of penetration of a candle within another candle."}]},"trader_cdlonneck":{"s":"On-Neck Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlpiercing":{"s":"Piercing Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlrickshawman":{"s":"Rickshaw Man","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlrisefall3methods":{"s":"Rising\/Falling Three Methods","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlseparatinglines":{"s":"Separating Lines","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlshootingstar":{"s":"Shooting Star","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlshortline":{"s":"Short Line Candle","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlspinningtop":{"s":"Spinning Top","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlstalledpattern":{"s":"Stalled Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlsticksandwich":{"s":"Stick Sandwich","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdltakuri":{"s":"Takuri (Dragonfly Doji with very long lower shadow)","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdltasukigap":{"s":"Tasuki Gap","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlthrusting":{"s":"Thrusting Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdltristar":{"s":"Tristar Pattern","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlunique3river":{"s":"Unique 3 River","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlupsidegap2crows":{"s":"Upside Gap Two Crows","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_cdlxsidegap3methods":{"s":"Upside\/Downside Gap Three Methods","p":[{"t":"open","d":"Opening price, array of real values."},{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_ceil":{"s":"Vector Ceil","p":[{"t":"real","d":"Array of real values."}]},"trader_cmo":{"s":"Chande Momentum Oscillator","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_correl":{"s":"Pearson&#039;s Correlation Coefficient (r)","p":[{"t":"real0","d":"Array of real values."},{"t":"real1","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_cos":{"s":"Vector Trigonometric Cos","p":[{"t":"real","d":"Array of real values."}]},"trader_cosh":{"s":"Vector Trigonometric Cosh","p":[{"t":"real","d":"Array of real values."}]},"trader_dema":{"s":"Double Exponential Moving Average","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_div":{"s":"Vector Arithmetic Div","p":[{"t":"real0","d":"Array of real values."},{"t":"real1","d":"Array of real values."}]},"trader_dx":{"s":"Directional Movement Index","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_ema":{"s":"Exponential Moving Average","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_errno":{"s":"Get error code","p":null},"trader_exp":{"s":"Vector Arithmetic Exp","p":[{"t":"real","d":"Array of real values."}]},"trader_floor":{"s":"Vector Floor","p":[{"t":"real","d":"Array of real values."}]},"trader_get_compat":{"s":"Get compatibility mode","p":null},"trader_get_unstable_period":{"s":"Get unstable period","p":[{"t":"functionId","d":"Function ID the factor to be read for. TRADER_FUNC_UNST_* series of constants should be used."}]},"trader_ht_dcperiod":{"s":"Hilbert Transform - Dominant Cycle Period","p":[{"t":"real","d":"Array of real values."}]},"trader_ht_dcphase":{"s":"Hilbert Transform - Dominant Cycle Phase","p":[{"t":"real","d":"Array of real values."}]},"trader_ht_phasor":{"s":"Hilbert Transform - Phasor Components","p":[{"t":"real","d":"Array of real values."}]},"trader_ht_sine":{"s":"Hilbert Transform - SineWave","p":[{"t":"real","d":"Array of real values."}]},"trader_ht_trendline":{"s":"Hilbert Transform - Instantaneous Trendline","p":[{"t":"real","d":"Array of real values."}]},"trader_ht_trendmode":{"s":"Hilbert Transform - Trend vs Cycle Mode","p":[{"t":"real","d":"Array of real values."}]},"trader_kama":{"s":"Kaufman Adaptive Moving Average","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_linearreg":{"s":"Linear Regression","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_linearreg_angle":{"s":"Linear Regression Angle","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_linearreg_intercept":{"s":"Linear Regression Intercept","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_linearreg_slope":{"s":"Linear Regression Slope","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_ln":{"s":"Vector Log Natural","p":[{"t":"real","d":"Array of real values."}]},"trader_log10":{"s":"Vector Log10","p":[{"t":"real","d":"Array of real values."}]},"trader_ma":{"s":"Moving average","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."},{"t":"mAType","d":"Type of Moving Average. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_macd":{"s":"Moving Average Convergence\/Divergence","p":[{"t":"real","d":"Array of real values."},{"t":"fastPeriod","d":"Number of period for the fast MA. Valid range from 2 to 100000."},{"t":"slowPeriod","d":"Number of period for the slow MA. Valid range from 2 to 100000."},{"t":"signalPeriod","d":"Smoothing for the signal line (nb of period). Valid range from 1 to 100000."}]},"trader_macdext":{"s":"MACD with controllable MA type","p":[{"t":"real","d":"Array of real values."},{"t":"fastPeriod","d":"Number of period for the fast MA. Valid range from 2 to 100000."},{"t":"fastMAType","d":"Type of Moving Average for fast MA. TRADER_MA_TYPE_* series of constants should be used."},{"t":"slowPeriod","d":"Number of period for the slow MA. Valid range from 2 to 100000."},{"t":"slowMAType","d":"Type of Moving Average for slow MA. TRADER_MA_TYPE_* series of constants should be used."},{"t":"signalPeriod","d":"Smoothing for the signal line (nb of period). Valid range from 1 to 100000."},{"t":"signalMAType","d":"Type of Moving Average for signal line. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_macdfix":{"s":"Moving Average Convergence\/Divergence Fix 12\/26","p":[{"t":"real","d":"Array of real values."},{"t":"signalPeriod","d":"Smoothing for the signal line (nb of period). Valid range from 1 to 100000."}]},"trader_mama":{"s":"MESA Adaptive Moving Average","p":[{"t":"real","d":"Array of real values."},{"t":"fastLimit","d":"Upper limit use in the adaptive algorithm. Valid range from 0.01 to 0.99."},{"t":"slowLimit","d":"Lower limit use in the adaptive algorithm. Valid range from 0.01 to 0.99."}]},"trader_mavp":{"s":"Moving average with variable period","p":[{"t":"real","d":"Array of real values."},{"t":"periods","d":"Array of real values."},{"t":"minPeriod","d":"Value less than minimum will be changed to Minimum period. Valid range from 2 to 100000"},{"t":"maxPeriod","d":"Value higher than minimum will be changed to Maximum period. Valid range from 2 to 100000"},{"t":"mAType","d":"Type of Moving Average. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_max":{"s":"Highest value over a specified period","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_maxindex":{"s":"Index of highest value over a specified period","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_medprice":{"s":"Median Price","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."}]},"trader_mfi":{"s":"Money Flow Index","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"volume","d":"Volume traded, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_midpoint":{"s":"MidPoint over period","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_midprice":{"s":"Midpoint Price over period","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_min":{"s":"Lowest value over a specified period","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_minindex":{"s":"Index of lowest value over a specified period","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_minmax":{"s":"Lowest and highest values over a specified period","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_minmaxindex":{"s":"Indexes of lowest and highest values over a specified period","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_minus_di":{"s":"Minus Directional Indicator","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_minus_dm":{"s":"Minus Directional Movement","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_mom":{"s":"Momentum","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_mult":{"s":"Vector Arithmetic Mult","p":[{"t":"real0","d":"Array of real values."},{"t":"real1","d":"Array of real values."}]},"trader_natr":{"s":"Normalized Average True Range","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_obv":{"s":"On Balance Volume","p":[{"t":"real","d":"Array of real values."},{"t":"volume","d":"Volume traded, array of real values."}]},"trader_plus_di":{"s":"Plus Directional Indicator","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_plus_dm":{"s":"Plus Directional Movement","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_ppo":{"s":"Percentage Price Oscillator","p":[{"t":"real","d":"Array of real values."},{"t":"fastPeriod","d":"Number of period for the fast MA. Valid range from 2 to 100000."},{"t":"slowPeriod","d":"Number of period for the slow MA. Valid range from 2 to 100000."},{"t":"mAType","d":"Type of Moving Average. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_roc":{"s":"Rate of change : ((price\/prevPrice)-1)*100","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_rocp":{"s":"Rate of change Percentage: (price-prevPrice)\/prevPrice","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_rocr":{"s":"Rate of change ratio: (price\/prevPrice)","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_rocr100":{"s":"Rate of change ratio 100 scale: (price\/prevPrice)*100","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_rsi":{"s":"Relative Strength Index","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_sar":{"s":"Parabolic SAR","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"acceleration","d":"Acceleration Factor used up to the Maximum value. Valid range from 0 to TRADER_REAL_MAX."},{"t":"maximum","d":"Acceleration Factor Maximum value. Valid range from 0 to TRADER_REAL_MAX."}]},"trader_sarext":{"s":"Parabolic SAR - Extended","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"startValue","d":"Start value and direction. 0 for Auto, &gt;0 for Long, &lt;0 for Short. Valid range from TRADER_REAL_MIN to TRADER_REAL_MAX."},{"t":"offsetOnReverse","d":"Percent offset added\/removed to initial stop on short\/long reversal. Valid range from 0 to TRADER_REAL_MAX."},{"t":"accelerationInitLong","d":"Acceleration Factor initial value for the Long direction. Valid range from 0 to TRADER_REAL_MAX."},{"t":"accelerationLong","d":"Acceleration Factor for the Long direction. Valid range from 0 to TRADER_REAL_MAX."},{"t":"accelerationMaxLong","d":"Acceleration Factor maximum value for the Long direction. Valid range from 0 to TRADER_REAL_MAX."},{"t":"accelerationInitShort","d":"Acceleration Factor initial value for the Short direction. Valid range from 0 to TRADER_REAL_MAX."},{"t":"accelerationShort","d":"Acceleration Factor for the Short direction. Valid range from 0 to TRADER_REAL_MAX."},{"t":"accelerationMaxShort","d":"Acceleration Factor maximum value for the Short direction. Valid range from 0 to TRADER_REAL_MAX."}]},"trader_set_compat":{"s":"Set compatibility mode","p":[{"t":"compatId","d":"Compatibility Id. TRADER_COMPATIBILITY_* series of constants should be used."}]},"trader_set_unstable_period":{"s":"Set unstable period","p":[{"t":"functionId","d":"Function ID the factor should be set for. TRADER_FUNC_UNST_* constant series can be used to affect the corresponding function."},{"t":"timePeriod","d":"Unstable period value."}]},"trader_sin":{"s":"Vector Trigonometric Sin","p":[{"t":"real","d":"Array of real values."}]},"trader_sinh":{"s":"Vector Trigonometric Sinh","p":[{"t":"real","d":"Array of real values."}]},"trader_sma":{"s":"Simple Moving Average","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_sqrt":{"s":"Vector Square Root","p":[{"t":"real","d":"Array of real values."}]},"trader_stddev":{"s":"Standard Deviation","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."},{"t":"nbDev","d":""}]},"trader_stoch":{"s":"Stochastic","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"fastK_Period","d":"Time period for building the Fast-K line. Valid range from 1 to 100000."},{"t":"slowK_Period","d":"Smoothing for making the Slow-K line. Valid range from 1 to 100000, usually set to 3."},{"t":"slowK_MAType","d":"Type of Moving Average for Slow-K. TRADER_MA_TYPE_* series of constants should be used."},{"t":"slowD_Period","d":"Smoothing for making the Slow-D line. Valid range from 1 to 100000."},{"t":"slowD_MAType","d":"Type of Moving Average for Slow-D. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_stochf":{"s":"Stochastic Fast","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"fastK_Period","d":"Time period for building the Fast-K line. Valid range from 1 to 100000."},{"t":"fastD_Period","d":"Smoothing for making the Fast-D line. Valid range from 1 to 100000, usually set to 3."},{"t":"fastD_MAType","d":"Type of Moving Average for Fast-D. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_stochrsi":{"s":"Stochastic Relative Strength Index","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."},{"t":"fastK_Period","d":"Time period for building the Fast-K line. Valid range from 1 to 100000."},{"t":"fastD_Period","d":"Smoothing for making the Fast-D line. Valid range from 1 to 100000, usually set to 3."},{"t":"fastD_MAType","d":"Type of Moving Average for Fast-D. TRADER_MA_TYPE_* series of constants should be used."}]},"trader_sub":{"s":"Vector Arithmetic Subtraction","p":[{"t":"real0","d":"Array of real values."},{"t":"real1","d":"Array of real values."}]},"trader_sum":{"s":"Summation","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_t3":{"s":"Triple Exponential Moving Average (T3)","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."},{"t":"vFactor","d":"Volume Factor. Valid range from 1 to 0."}]},"trader_tan":{"s":"Vector Trigonometric Tan","p":[{"t":"real","d":"Array of real values."}]},"trader_tanh":{"s":"Vector Trigonometric Tanh","p":[{"t":"real","d":"Array of real values."}]},"trader_tema":{"s":"Triple Exponential Moving Average","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_trange":{"s":"True Range","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_trima":{"s":"Triangular Moving Average","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_trix":{"s":"1-day Rate-Of-Change (ROC) of a Triple Smooth EMA","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_tsf":{"s":"Time Series Forecast","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_typprice":{"s":"Typical Price","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_ultosc":{"s":"Ultimate Oscillator","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod1","d":"Number of bars for 1st period. Valid range from 1 to 100000."},{"t":"timePeriod2","d":"Number of bars for 2nd period. Valid range from 1 to 100000."},{"t":"timePeriod3","d":"Number of bars for 3rd period. Valid range from 1 to 100000."}]},"trader_var":{"s":"Variance","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."},{"t":"nbDev","d":""}]},"trader_wclprice":{"s":"Weighted Close Price","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."}]},"trader_willr":{"s":"Williams&#039; %R","p":[{"t":"high","d":"High price, array of real values."},{"t":"low","d":"Low price, array of real values."},{"t":"close","d":"Closing price, array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trader_wma":{"s":"Weighted Moving Average","p":[{"t":"real","d":"Array of real values."},{"t":"timePeriod","d":"Number of period. Valid range from 2 to 100000."}]},"trait_exists":{"s":"Checks if the trait exists","p":[{"t":"traitname","d":"Name of the trait to check"},{"t":"autoload","d":"Whether to autoload if not already loaded."}]},"trigger_error":{"s":"Generates a user-level error\/warning\/notice message","p":[{"t":"error_msg","d":"The designated error message for this error. It&#039;s limited to 1024 \n       bytes in length. Any additional characters beyond 1024 bytes will be \n       truncated."},{"t":"error_type","d":"The designated error type for this error. It only works with the E_USER\n       family of constants, and will default to E_USER_NOTICE."}]},"trim":{"s":"Strip whitespace (or other characters) from the beginning and end of a string","p":[{"t":"str","d":"The string that will be trimmed."},{"t":"character_mask","d":"Optionally, the stripped characters can also be specified using\n       the character_mask parameter.\n       Simply list all characters that you want to be stripped. With\n       .. you can specify a range of characters."}]},"uasort":{"s":"Sort an array with a user-defined comparison function and maintain index association","p":[{"t":"array","d":"The input array."},{"t":"value_compare_func","d":"See usort() and uksort() for\n       examples of user-defined comparison functions."}]},"ucfirst":{"s":"Make a string&#039;s first character uppercase","p":[{"t":"str","d":"The input string."}]},"ucwords":{"s":"Uppercase the first character of each word in a string","p":[{"t":"str","d":"The input string."}]},"udm_add_search_limit":{"s":"Add various search limits","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."},{"t":"var","d":"Defines the parameter, indicating limits. \n       Possible var values:\n       \n        \n         \n          UDM_LIMIT_URL - defines document URL limitations to limit the search\n          through subsection of the database. It supports SQL % and _  LIKE wildcards,\n          where % matches any number of characters, even zero characters,\n          and _ matches exactly one character. E.g. http:\/\/www.example.___\/catalog\n          may stand for http:\/\/www.example.com\/catalog and http:\/\/www.example.net\/catalog.\n         \n        \n        \n         \n          UDM_LIMIT_TAG - defines site TAG limitations. In indexer-conf you can\n          assign specific TAGs to various sites and parts of a site. Tags in\n          mnoGoSearch 3.1.x are lines, that may contain metasymbols % and _.\n          Metasymbols allow searching among groups of tags.\n          E.g. there are links with tags ABCD and ABCE, and search restriction\n          is by ABC_ - the search will be made among both of the tags.\n         \n        \n        \n         \n          UDM_LIMIT_LANG - defines document language limitations.\n         \n        \n        \n         \n          UDM_LIMIT_CAT - defines document category limitations. Categories are\n          similar to tag feature, but nested. So you can have one category inside\n          another and so on. You have to use two characters for each level. Use a\n          hex number going from 0-F or a 36 base number going from 0-Z.\n          Therefore a top-level category like &#039;Auto&#039; would be 01. If it has a\n          subcategory like &#039;Ford&#039;, then it would be 01 (the parent category) and then\n          &#039;Ford&#039; which we will give 01. Put those together and you get 0101. If &#039;Auto&#039;\n          had another subcategory named &#039;VW&#039;, then it&#039;s id would be 01 because it\n          belongs to the &#039;Ford&#039; category and then 02 because it&#039;s the next category.\n          So it&#039;s id would be 0102. If VW had a sub category called &#039;Engine&#039; then it&#039;s\n          id would start at 01 again and it would get the &#039;VW&#039; id 02 and &#039;Auto&#039; id of\n          01, making it 010201. If you want to search for sites under that category\n          then you pass it cat=010201 in the URL.\n         \n        \n        \n         \n          UDM_LIMIT_DATE - defines limitation by date the document was modified."}]},"udm_alloc_agent":{"s":"Allocate mnoGoSearch session","p":[{"t":"dbaddr","d":"dbaddr - URL-style database description, with\n       options (type, host, database name, port, user and password) to connect\n       to SQL database. Do not matter for built-in text files support. Format for\n       dbaddr:\n       DBType:[\/\/[DBUser[:DBPass]@]DBHost[:DBPort]]\/DBName\/.\n       Currently supported DBType values are: mysql, pgsql, msql, solid, mssql, oracle,\n       and ibase. Actually, it does not matter for native libraries support, but\n       ODBC users should specify one of the supported values. If your database\n       type is not supported, you may use unknown instead."},{"t":"dbmode","d":"dbmode - You may select the SQL database mode of\n       words storage. Possible values of dbmode are:\n       single, multi, crc,\n       or crc-multi. When single is\n       specified, all words are stored in the same table. If multi\n        is selected, words will be located in different tables depending\n       of their lengths. &quot;multi&quot; mode is usually faster, but requires more tables\n       in the database. If &quot;crc&quot; mode is selected, mnoGoSearch will store 32 bit\n       integer word IDs calculated by CRC32 algorithm instead of words. This mode\n       requires less disk space and it is faster comparing with &quot;single&quot; and\n       &quot;multi&quot; modes. crc-multi uses the same storage structure\n       with the &quot;crc&quot; mode, but also stores words in different tables depending on\n       words lengths like in &quot;multi&quot; mode."}]},"udm_alloc_agent_array":{"s":"Allocate mnoGoSearch session","p":[{"t":"databases","d":"The array databases must contain one database\n       URL per element, analog to the first parameter of\n       udm_alloc_agent()."}]},"udm_api_version":{"s":"Get mnoGoSearch API version","p":null},"udm_cat_list":{"s":"Get all the categories on the same level with the current one","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."},{"t":"category","d":""}]},"udm_cat_path":{"s":"Get the path to the current category","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."},{"t":"category","d":""}]},"udm_check_charset":{"s":"Check if the given charset is known to mnogosearch","p":null},"udm_check_stored":{"s":"Check connection to stored","p":null},"udm_clear_search_limits":{"s":"Clear all mnoGoSearch search restrictions","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."}]},"udm_close_stored":{"s":"Close connection to stored","p":null},"udm_crc32":{"s":"Return CRC32 checksum of given string","p":null},"udm_errno":{"s":"Get mnoGoSearch error number","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."}]},"udm_error":{"s":"Get mnoGoSearch error message","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."}]},"udm_find":{"s":"Perform search","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."},{"t":"query","d":"mnoGoSearch understands the following boolean operators:"}]},"udm_free_agent":{"s":"Free mnoGoSearch session","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."}]},"udm_free_ispell_data":{"s":"Free memory allocated for ispell data","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."}]},"udm_free_res":{"s":"Free mnoGoSearch result","p":[{"t":"res","d":"A link to a result identifier, received after call to\n       udm_find()."}]},"udm_get_doc_count":{"s":"Get total number of documents in database","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."}]},"udm_get_res_field":{"s":"Fetch a result field","p":[{"t":"res","d":"res - a link to result identifier, received\n       after call to udm_find()."},{"t":"row","d":"row - the number of the link on the current page.\n       May have values from 0 to\n       UDM_PARAM_NUM_ROWS-1."},{"t":"field","d":"field - field identifier, may have the following values:\n      \n       \n        \n         UDM_FIELD_URL - document URL field\n        \n       \n       \n        \n         UDM_FIELD_CONTENT - document\n         Content-type field (for example, text\/html).\n        \n       \n       \n        \n         UDM_FIELD_CATEGORY - document category field. Use\n         udm_cat_path() to get full path to current category\n         from the categories tree root. (This parameter is available only in PHP\n         4.0.6 or later).\n        \n       \n       \n        \n         UDM_FIELD_TITLE - document title field.\n        \n       \n       \n        \n         UDM_FIELD_KEYWORDS - document keywords field (from META KEYWORDS tag).\n        \n       \n       \n        \n         UDM_FIELD_DESC - document description field (from META DESCRIPTION tag).\n        \n       \n       \n        \n         UDM_FIELD_TEXT - document body text (the first couple of lines to give an\n         idea of what the document is about).\n        \n       \n       \n        \n         UDM_FIELD_SIZE - document size.\n        \n       \n       \n        \n         UDM_FIELD_URLID - unique URL ID of the link.\n        \n       \n       \n        \n         UDM_FIELD_RATING  - page rating (as calculated by mnoGoSearch).\n        \n       \n       \n        \n         UDM_FIELD_MODIFIED - last-modified field in unixtime format.\n        \n       \n       \n        \n         UDM_FIELD_ORDER - the number of the current document in set of found documents.\n        \n       \n       \n        \n         UDM_FIELD_CRC - document CRC."}]},"udm_get_res_param":{"s":"Get mnoGoSearch result parameters","p":[{"t":"res","d":"res - a link to result identifier, received after\n       call to udm_find()."},{"t":"param","d":"param - parameter identifier, may have the following values:\n       \n        \n         \n          UDM_PARAM_NUM_ROWS - number of received found links on the current page.  It is equal to\n          UDM_PARAM_PAGE_SIZE for all search pages, on the last page - the rest of links.\n         \n        \n        \n         \n          UDM_PARAM_FOUND - total number of results matching the query.\n         \n        \n        \n         \n          UDM_PARAM_WORDINFO - information on the words found. E.g. search for\n          &quot;a good book&quot; will return &quot;a: stopword, good:5637, book: 120&quot;\n         \n        \n        \n         \n          UDM_PARAM_SEARCHTIME - search time in seconds.\n         \n        \n        \n         \n          UDM_PARAM_FIRST_DOC - the number of the first document displayed on current page.\n         \n        \n        \n         \n          UDM_PARAM_LAST_DOC - the number of the last document displayed on current page."}]},"udm_hash32":{"s":"Return Hash32 checksum of gived string","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."},{"t":"str","d":"The input string."}]},"udm_load_ispell_data":{"s":"Load ispell data","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."},{"t":"var","d":"Indicates the source for ispell data. May have the following values:\n       \n        \n         \n          UDM_ISPELL_TYPE_DB - indicates that ispell data should be loaded from SQL.\n          In this case, parameters val1 and val2\n          are ignored and should be left blank. flag\n          should be equal to 1.\n         \n         Note: \n          \n           flag indicates that after loading ispell data\n           from defined source it should be sorted (it is necessary for correct\n           functioning of ispell). In case of loading ispell data from files\n           there may be several calls to udm_load_ispell_data(),\n           and there is no sense to sort data after every call, but only after\n           the last one. Since in db mode all the data is loaded by one call,\n           this parameter should have the value 1. In this mode\n           in case of error, e.g. if ispell tables are absent, the function will\n           return FALSE and code and error message will be accessible through\n           udm_error() and udm_errno()."}]},"udm_open_stored":{"s":"Open connection to stored","p":null},"udm_set_agent_param":{"s":"Set mnoGoSearch agent session parameters","p":[{"t":"agent","d":"A link to Agent, received after call to\n       udm_alloc_agent()."},{"t":"var","d":"The following parameters and their values are available:\n       \n        \n         \n          UDM_PARAM_PAGE_NUM - used to choose search results page number (results\n          are returned by pages beginning from 0, with UDM_PARAM_PAGE_SIZE results per page).\n         \n        \n        \n         \n          UDM_PARAM_PAGE_SIZE - number of search results displayed on one page.\n         \n        \n        \n         \n          UDM_PARAM_SEARCH_MODE - search mode. The following values available: UDM_MODE_ALL -\n          search for all words; UDM_MODE_ANY - search for any word; UDM_MODE_PHRASE -\n          phrase search; UDM_MODE_BOOL - boolean search. See udm_find()\n          for details on boolean search.\n         \n        \n        \n         \n          UDM_PARAM_CACHE_MODE - turns on or off search result cache mode.\n          When enabled, the search engine will store\n          search results to disk. In case a similar search is performed later,\n          the engine will take results from the cache for faster performance.\n          Available values: UDM_CACHE_ENABLED,\n          UDM_CACHE_DISABLED.\n         \n        \n        \n         \n          UDM_PARAM_TRACK_MODE - turns on or off trackquery mode. Since\n          version 3.1.2 mnoGoSearch has a query tracking support.\n          Note that tracking is implemented in SQL version only and not available\n           in built-in database.\n          To use tracking, you have to create tables for tracking support.\n          For MySQL, use create\/mysql\/track.txt.\n          When doing a search, front-end uses those tables to store query words,\n          a number of found documents and current Unix timestamp in seconds.\n          Available values: UDM_TRACK_ENABLED,\n          UDM_TRACK_DISABLED.\n         \n        \n        \n         \n          UDM_PARAM_PHRASE_MODE - defines whether index database using phrases\n          (&quot;phrase&quot; parameter in indexer.conf).\n          Possible values: UDM_PHRASE_ENABLED and UDM_PHRASE_DISABLED.\n          Please note, that if phrase search is enabled (UDM_PHRASE_ENABLED),\n          it is still possible to do search in any mode (ANY, ALL,\n          BOOL or PHRASE).\n          In 3.1.10 version of mnoGoSearch phrase search is supported only in sql\n          and built-in database modes,\n          while beginning with 3.1.11 phrases are supported in cachemode as well.\n         \n         \n          Examples of phrase search:\n         \n         \n          &quot;Arizona desert&quot; - This query returns all indexed documents that contain\n          &quot;Arizona desert&quot; as a phrase. Notice that you need to put double quotes\n          around the phrase\n         \n        \n        \n         \n          UDM_PARAM_CHARSET - defines local charset. Available values: set of\n          charsets supported by mnoGoSearch, e.g. koi8-r, cp1251, ...\n         \n        \n        \n         \n          UDM_PARAM_STOPFILE - Defines name and path\n          to stopwords file.  (There is a small difference with mnoGoSearch\n          - while in mnoGoSearch if relative path or no path entered, it\n          looks for this file in relation to UDM_CONF_DIR, the module looks for\n          the file in relation to current path, i.e. to the path where the\n          PHP script is executed.)\n         \n        \n        \n         \n          UDM_PARAM_STOPTABLE - Load stop words from the given SQL table. You may use\n          several StopwordTable commands.\n          This command has no effect when compiled without SQL database support.\n         \n        \n        \n         \n          UDM_PARAM_WEIGHT_FACTOR - represents weight factors for specific document parts.\n          Currently body, title, keywords, description, url are supported.\n          To activate this feature please use degrees of 2 in *Weight commands of\n          the indexer.conf. Let&#039;s imagine that we have these weights:\n         \n         \n      URLWeight     1\n      BodyWeight    2\n      TitleWeight   4\n      KeywordWeight 8\n      DescWeight    16\n         \n     \n         \n          As far as indexer uses bit OR operation for word weights when some\n          word presents several time in the same document, it is possible at search\n          time to detect word appearance in different document parts. Word which\n          appears only in the body will have 00000010 aggregate weight (in binary notation).\n          Word used in all document parts will have 00011111 aggregate weight.\n         \n     \n         \n          This parameter&#039;s value is a string of hex digits ABCDE. Each digit is a\n          factor for corresponding bit in word weight. For the given above weights\n          configuration:\n         \n         \n       E is a factor for weight 1  (URL Weight bit)\n       D is a factor for weight 2  (BodyWeight bit)\n       C is a factor for weight 4  (TitleWeight bit)\n       B is a factor for weight 8  (KeywordWeight bit)\n       A is a factor for weight 16 (DescWeight bit)\n         \n         \n          Examples:\n         \n         \n          UDM_PARAM_WEIGHT_FACTOR=00001 will search through URLs only.\n         \n         \n          UDM_PARAM_WEIGHT_FACTOR=00100 will search through Titles only.\n         \n         \n          UDM_PARAM_WEIGHT_FACTOR=11100 will search through Title,Keywords,Description\n          but not through URL and Body.\n         \n         \n          UDM_PARAM_WEIGHT_FACTOR=F9421 will search through:\n         \n         \n        Description with factor 15  (F hex)\n        Keywords with factor 9\n        Title with factor  4\n        Body with factor 2\n        URL with factor 1\n         \n         \n          If UDM_PARAM_WEIGHT_FACTOR variable is omitted, original weight value is\n          taken to sort results. For a given above weight configuration it means\n          that document description has a most big weight 16.\n         \n        \n        \n         \n          UDM_PARAM_WORD_MATCH - word match. You may use this parameter to choose\n          word match type. This feature works only in &quot;single&quot; and &quot;multi&quot; modes\n          using SQL based and built-in database. It does not work in cachemode and other modes\n          since they use word CRC and do not support substring search. Available values:\n         \n         UDM_MATCH_BEGIN - word beginning match;\n         UDM_MATCH_END - word ending match;\n         UDM_MATCH_WORD - whole word match;\n         UDM_MATCH_SUBSTR - word substring match.\n        \n        \n         \n          UDM_PARAM_MIN_WORD_LEN - defines minimal word length.\n          Any word shorter this limit is considered to be a stopword. Please note\n          that this parameter value is inclusive, i.e. if UDM_PARAM_MIN_WORD_LEN=3,\n          a word 3 characters long will not be considered a stopword, while\n          a word 2 characters long will be. Default value is 1.\n         \n        \n        \n         \n          UDM_PARAM_ISPELL_PREFIXES - Possible values: UDM_PREFIXES_ENABLED and\n          UDM_PREFIXES_DISABLED, that respectively enable or disable using prefixes.\n          E.g. if a word &quot;tested&quot; is in search query, also words like &quot;test&quot;,\n          &quot;testing&quot;, etc. Only suffixes are supported by default. Prefixes usually\n          change word meanings, for example if somebody is searching for the word &quot;tested&quot;\n          one hardly wants &quot;untested&quot;  to be found. Prefixes support may also be\n          found useful for site&#039;s spelling checking purposes. In order to enable\n          ispell, you have to load ispell data with udm_load_ispell_data().\n         \n        \n        \n         \n          UDM_PARAM_CROSS_WORDS - enables or disables crosswords support.\n          Possible values: UDM_CROSS_WORDS_ENABLED and UDM_CROSS_WORDS_DISABLED.\n         \n         \n          The crosswords feature allows to assign words between &lt;a href=&quot;xxx&quot;&gt; and &lt;\/a&gt;\n          also to a document this link leads to. It works in SQL database mode and\n          is not supported in built-in database and Cachemode.\n         \n        \n        \n         \n          UDM_PARAM_VARDIR - specifies a custom path to directory where indexer\n          stores data when using built-in database and in cache mode.\n          By default \/var directory of\n          mnoGoSearch installation is used. Can have\n          only string values."},{"t":"val","d":""}]},"uksort":{"s":"Sort an array by keys using a user-defined comparison function","p":[{"t":"array","d":"The input array."},{"t":"key_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"umask":{"s":"Changes the current umask","p":[{"t":"mask","d":"The new umask."}]},"uniqid":{"s":"Generate a unique ID","p":[{"t":"prefix","d":"Can be useful, for instance, if you generate identifiers\n       simultaneously on several hosts that might happen to generate the\n       identifier at the same microsecond."},{"t":"more_entropy","d":"If set to TRUE, uniqid() will add additional\n       entropy (using the combined linear congruential generator) at the end\n       of the return value, which increases the likelihood that the result\n       will be unique."}]},"unixtojd":{"s":"Convert Unix timestamp to Julian Day","p":[{"t":"timestamp","d":"A unix timestamp to convert."}]},"unlink":{"s":"Deletes a file","p":[{"t":"filename","d":"Path to the file."},{"t":"context","d":""}]},"unpack":{"s":"Unpack data from binary string","p":[{"t":"format","d":"See pack() for an explanation of the format codes."},{"t":"data","d":"The packed data."}]},"untaint":{"s":"Untaint strings","p":[{"t":"string","d":""},{"t":"...","d":""}]},"urldecode":{"s":"Decodes URL-encoded string","p":[{"t":"str","d":"The string to be decoded."}]},"urlencode":{"s":"URL-encodes string","p":[{"t":"str","d":"The string to be encoded."}]},"user_error":{"s":"Alias of trigger_error()","p":null},"usleep":{"s":"Delay execution in microseconds","p":[{"t":"micro_seconds","d":"Halt time in micro seconds. A micro second is one millionth of a\n       second."}]},"usort":{"s":"Sort an array by values using a user-defined comparison function","p":[{"t":"array","d":"The input array."},{"t":"value_compare_func","d":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}]},"version_compare":{"s":"Compares two &quot;PHP-standardized&quot; version number strings","p":[{"t":"version1","d":"First version number."},{"t":"version2","d":"Second version number."},{"t":"operator","d":"If you specify the third optional operator\n       argument, you can test for a particular relationship. The\n       possible operators are: &lt;,\n       lt, &lt;=,\n       le, &gt;,\n       gt, &gt;=,\n       ge, ==,\n       =, eq,\n       !=, &lt;&gt;,\n       ne respectively."}]},"vfprintf":{"s":"Write a formatted string to a stream","p":[{"t":"handle","d":""},{"t":"format","d":"See sprintf() for a description of\n       format."},{"t":"args","d":""}]},"virtual":{"s":"Perform an Apache sub-request","p":[{"t":"filename","d":"The file that the virtual command will be performed on."}]},"vpopmail_add_alias_domain":{"s":"Add an alias for a virtual domain","p":null},"vpopmail_add_alias_domain_ex":{"s":"Add alias to an existing virtual domain","p":null},"vpopmail_add_domain":{"s":"Add a new virtual domain","p":null},"vpopmail_add_domain_ex":{"s":"Add a new virtual domain","p":null},"vpopmail_add_user":{"s":"Add a new user to the specified virtual domain","p":null},"vpopmail_alias_add":{"s":"Insert a virtual alias","p":null},"vpopmail_alias_del":{"s":"Deletes all virtual aliases of a user","p":null},"vpopmail_alias_del_domain":{"s":"Deletes all virtual aliases of a domain","p":null},"vpopmail_alias_get":{"s":"Get all lines of an alias for a domain","p":null},"vpopmail_alias_get_all":{"s":"Get all lines of an alias for a domain","p":null},"vpopmail_auth_user":{"s":"Attempt to validate a username\/domain\/password","p":null},"vpopmail_del_domain":{"s":"Delete a virtual domain","p":null},"vpopmail_del_domain_ex":{"s":"Delete a virtual domain","p":null},"vpopmail_del_user":{"s":"Delete a user from a virtual domain","p":null},"vpopmail_error":{"s":"Get text message for last vpopmail error","p":null},"vpopmail_passwd":{"s":"Change a virtual user&#039;s password","p":null},"vpopmail_set_user_quota":{"s":"Sets a virtual user&#039;s quota","p":null},"vprintf":{"s":"Output a formatted string","p":[{"t":"format","d":"See sprintf() for a description of\n       format."},{"t":"args","d":""}]},"vsprintf":{"s":"Return a formatted string","p":[{"t":"format","d":"See sprintf() for a description of\n       format."},{"t":"args","d":""}]},"wincache_fcache_fileinfo":{"s":"","p":[{"t":"summaryonly","d":"Controls whether the returned array will contain information about individual cache entries \n       along with the file cache summary."}]},"wincache_lock":{"s":"","p":[{"t":"key","d":"Name of the key in the cache to get the lock on."},{"t":"isglobal","d":"Controls whether the scope of the lock is system-wide or local. Local locks are scoped to the application pool \n       in IIS FastCGI case or to all php processes that have the same parent process identifier."}]},"wincache_ocache_fileinfo":{"s":"","p":[{"t":"summaryonly","d":"Controls whether the returned array will contain information about individual cache entries \n       along with the opcode cache summary."}]},"wincache_refresh_if_changed":{"s":"","p":[{"t":"files","d":"An array of file names for files that need to be refreshed. \n       An absolute or relative file paths can be used."}]},"wincache_scache_info":{"s":"","p":[{"t":"summaryonly","d":"Controls whether the returned array will contain information about individual cache entries \n       along with the session cache summary."}]},"wincache_ucache_add":{"s":"","p":[{"t":"key","d":"Store the variable using this key name. If a variable with same key is already present the function\n       will fail and return FALSE. key is case sensitive. To override the value even if \n       key is present use wincache_ucache_set() function instad. \n       key can also take array of name =&gt; value pairs where names will be used as keys. \n       This can be used to add multiple values in the cache in one operation, thus avoiding race condition."},{"t":"value","d":"Value of a variable to store. Value supports all data types except resources, such as file handles.\n       This paramter is ignored if first argument is an array. A general guidance is to pass NULL \n       as value while using array as key. If value is an\n       object, or an array containing objects, then the objects will be serialized. See\n       __sleep() for details on serializing objects."},{"t":"values","d":"Associative array of keys and values."},{"t":"ttl","d":"Time for the variable to live in the cache in seconds. After the value specified in ttl has passed \n       the stored variable will be deleted from the cache. This parameter takes a default value of 0 which means \n       the variable will stay in the cache unless explicitly deleted by using wincache_ucache_delete() \n       or wincache_ucache_clear() functions."}]},"wincache_ucache_cas":{"s":"","p":[{"t":"key","d":"The key that is used to store the variable in the cache. \n       key is case sensitive."},{"t":"old_value","d":"Old value of the variable pointed by key in the user cache. \n       The value should be of type long, otherwise the function returns \n       FALSE."},{"t":"new_value","d":"New value which will get assigned to variable pointer by key if a \n       match is found. The value should be of type long, otherwise \n       the function returns FALSE."}]},"wincache_ucache_dec":{"s":"","p":[{"t":"key","d":"The key that was used to store the variable in the cache. \n       key is case sensitive."},{"t":"dec_by","d":"The value by which the variable associated with the key will get decremented. \n       If the argument is a floating point number it will be truncated to nearest integer. The variable \n       associated with the key should be of type long, otherwise \n       the function fails and returns FALSE."},{"t":"success","d":"Will be set to TRUE on success and FALSE on failure."}]},"wincache_ucache_delete":{"s":"","p":[{"t":"key","d":"The key that was used to store the variable in the cache. \n       key is case sensitive. key can be an \n       array of keys."}]},"wincache_ucache_exists":{"s":"","p":[{"t":"key","d":"The key that was used to store the variable in the cache. \n       key is case sensitive."}]},"wincache_ucache_get":{"s":"","p":[{"t":"key","d":"The key that was used to store the variable in the cache. \n       key is case sensitive. key can be an \n       array of keys. In this case the return value will be an array of values of each element \n       in the key array. If an object, or an array containing objects,\n       is returned, then the objects will be unserialized. See\n       __wakeup() for details on unserializing objects."},{"t":"success","d":"Will be set to TRUE on success and FALSE on failure."}]},"wincache_ucache_inc":{"s":"","p":[{"t":"key","d":"The key that was used to store the variable in the cache. \n       key is case sensitive."},{"t":"inc_by","d":"The value by which the variable associated with the key will get incremented. \n       If the argument is a floating point number it will be truncated to nearest integer. The variable \n       associated with the key should be of type long, otherwise \n       the function fails and returns FALSE."},{"t":"success","d":"Will be set to TRUE on success and FALSE on failure."}]},"wincache_ucache_info":{"s":"","p":[{"t":"summaryonly","d":"Controls whether the returned array will contain information about individual cache entries \n       along with the user cache summary."},{"t":"key","d":"The key of an entry in the user cache. If specified then the returned array will contain information \n       only about that cache entry. If not specified and summaryonly is set to \n       FALSE then the returned array will contain information about all entries in the cache."}]},"wincache_ucache_set":{"s":"","p":[{"t":"key","d":"Store the variable using this key name. If a variable with same \n       key is already present the function will overwrite the previous \n       value with the new one. key is case sensitive. \n       key can also take array of name =&gt; value pairs where names will be used as \n       keys. This can be used to add multiple values in the cache in one operation, thus avoiding \n       race condition."},{"t":"value","d":"Value of a variable to store. Value supports all data types except resources, such as file handles.\n       This paramter is ignored if first argument is an array. A general guidance is to pass NULL \n       as value while using array as key. If value is an\n       object, or an array containing objects, then the objects will be serialized. See\n       __sleep() for details on serializing objects."},{"t":"values","d":"Associative array of keys and values."},{"t":"ttl","d":"Time for the variable to live in the cache in seconds. After the value specified in ttl has passed \n       the stored variable will be deleted from the cache. This parameter takes a default value of 0 which means \n       the variable will stay in the cache unless explicitly deleted by using wincache_ucache_delete() \n       or wincache_ucache_clear() functions."}]},"wincache_unlock":{"s":"","p":[{"t":"key","d":"Name of the key in the cache to release the lock on."}]},"wordwrap":{"s":"Wraps a string to a given number of characters","p":[{"t":"str","d":"The input string."},{"t":"width","d":"The number of characters at which the string will be wrapped."},{"t":"break","d":"The line is broken using the optional\n       break parameter."},{"t":"cut","d":"If the cut is set to TRUE, the string is\n       always wrapped at or before the specified width.  So if you have\n       a word that is larger than the given width, it is broken apart.\n       (See second example)."}]},"xattr_get":{"s":"","p":[{"t":"filename","d":"The file from which we get the attribute."},{"t":"name","d":"The name of the attribute."},{"t":"flags","d":"Supported xattr flags\n        \n         \n          \n           XATTR_DONTFOLLOW\n           Do not follow the symbolic link but operate on symbolic link itself.\n          \n\n          \n           XATTR_ROOT\n           Set attribute in root (trusted) namespace. Requires root privileges."}]},"xattr_list":{"s":"","p":[{"t":"filename","d":"The path of the file."},{"t":"flags","d":"Supported xattr flags\n        \n         \n          \n           XATTR_DONTFOLLOW\n           Do not follow the symbolic link but operate on symbolic link itself.\n          \n\n          \n           XATTR_ROOT\n           Set attribute in root (trusted) namespace. Requires root privileges."}]},"xattr_remove":{"s":"","p":[{"t":"filename","d":"The file from which we remove the attribute."},{"t":"name","d":"The name of the attribute to remove."},{"t":"flags","d":"Supported xattr flags\n        \n         \n          \n           XATTR_DONTFOLLOW\n           Do not follow the symbolic link but operate on symbolic link itself.\n          \n\n          \n           XATTR_ROOT\n           Set attribute in root (trusted) namespace. Requires root privileges."}]},"xattr_set":{"s":"","p":[{"t":"filename","d":"The file in which we set the attribute."},{"t":"name","d":"The name of the extended attribute. This attribute will be created if \n       it doesn&#039;t exist or replaced otherwise. You can change this behaviour \n       by using the flags parameter."},{"t":"value","d":"The value of the attribute."},{"t":"flags","d":"Supported xattr flags\n        \n         \n          \n           XATTR_CREATE\n           Function will fail if extended attribute already exists.\n          \n\n          \n           XATTR_REPLACE\n           Function will fail if extended attribute doesn&#039;t exist.\n          \n\n          \n           XATTR_DONTFOLLOW\n           Do not follow the symbolic link but operate on symbolic link itself.\n          \n\n          \n           XATTR_ROOT\n           Set attribute in root (trusted) namespace. Requires root privileges."}]},"xattr_supported":{"s":"","p":[{"t":"filename","d":"The path of the tested file."},{"t":"flags","d":"Supported xattr flags\n        \n         \n          \n           XATTR_DONTFOLLOW\n           Do not follow the symbolic link but operate on symbolic link itself."}]},"xdiff_file_bdiff":{"s":"Make binary diff of two files","p":[{"t":"old_file","d":"Path to the first file. This file acts as &quot;old&quot; file."},{"t":"new_file","d":"Path to the second file. This file acts as &quot;new&quot; file."},{"t":"dest","d":"Path of the resulting patch file. Resulting file contains differences\n       between &quot;old&quot; and &quot;new&quot; files. It is in binary format and is human-unreadable."}]},"xdiff_file_bdiff_size":{"s":"Read a size of file created by applying a binary diff","p":[{"t":"file","d":"The path to the binary patch created by xdiff_string_bdiff() or \n       xdiff_string_rabdiff() function."}]},"xdiff_file_bpatch":{"s":"Patch a file with a binary diff","p":[{"t":"file","d":"The original file."},{"t":"patch","d":"The binary patch file."},{"t":"dest","d":"Path of the resulting file."}]},"xdiff_file_diff":{"s":"Make unified diff of two files","p":[{"t":"old_file","d":"Path to the first file. This file acts as &quot;old&quot; file."},{"t":"new_file","d":"Path to the second file. This file acts as &quot;new&quot; file."},{"t":"dest","d":"Path of the resulting patch file."},{"t":"context","d":"Indicates how many lines of context you want to include in diff\n       result."},{"t":"minimal","d":"Set this parameter to TRUE if you want to minimalize size of the result\n       (can take a long time)."}]},"xdiff_file_diff_binary":{"s":"Alias of xdiff_file_bdiff","p":[{"t":"old_file","d":"Path to the first file. This file acts as &quot;old&quot; file."},{"t":"new_file","d":"Path to the second file. This file acts as &quot;new&quot; file."},{"t":"dest","d":"Path of the resulting patch file. Resulting file contains differences\n       between &quot;old&quot; and &quot;new&quot; files. It is in binary format and is human-unreadable."}]},"xdiff_file_merge3":{"s":"Merge 3 files into one","p":[{"t":"old_file","d":"Path to the first file. It acts as &quot;old&quot; file."},{"t":"new_file1","d":"Path to the second file. It acts as modified version of old_file."},{"t":"new_file2","d":"Path to the third file. It acts as modified version of old_file."},{"t":"dest","d":"Path of the resulting file, containing merged changed from both new_file1 and\n       new_file2."}]},"xdiff_file_patch":{"s":"Patch a file with an unified diff","p":[{"t":"file","d":"The original file."},{"t":"patch","d":"The unified patch file. It has to be created using xdiff_string_diff(), \n       xdiff_file_diff() functions or compatible tools."},{"t":"dest","d":"Path of the resulting file."},{"t":"flags","d":"Can be either XDIFF_PATCH_NORMAL (default mode,\n       normal patch) or XDIFF_PATCH_REVERSE (reversed\n       patch)."}]},"xdiff_file_patch_binary":{"s":"Alias of xdiff_file_bpatch","p":[{"t":"file","d":"The original file."},{"t":"patch","d":"The binary patch file."},{"t":"dest","d":"Path of the resulting file."}]},"xdiff_file_rabdiff":{"s":"Make binary diff of two files using the Rabin&#039;s polynomial fingerprinting algorithm","p":[{"t":"old_file","d":"Path to the first file. This file acts as &quot;old&quot; file."},{"t":"new_file","d":"Path to the second file. This file acts as &quot;new&quot; file."},{"t":"dest","d":"Path of the resulting patch file. Resulting file contains differences\n       between &quot;old&quot; and &quot;new&quot; files. It is in binary format and is human-unreadable."}]},"xdiff_string_bdiff":{"s":"Make binary diff of two strings","p":[{"t":"old_data","d":"First string with binary data. It acts as &quot;old&quot; data."},{"t":"new_data","d":"Second string with binary data. It acts as &quot;new&quot; data."}]},"xdiff_string_bdiff_size":{"s":"Read a size of file created by applying a binary diff","p":[{"t":"patch","d":"The binary patch created by xdiff_string_bdiff() or \n       xdiff_string_rabdiff() function."}]},"xdiff_string_bpatch":{"s":"Patch a string with a binary diff","p":[{"t":"str","d":"The original binary string."},{"t":"patch","d":"The binary patch string."}]},"xdiff_string_diff":{"s":"Make unified diff of two strings","p":[{"t":"old_data","d":"First string with data. It acts as &quot;old&quot; data."},{"t":"new_data","d":"Second string with data. It acts as &quot;new&quot; data."},{"t":"context","d":"Indicates how many lines of context you want to include in the diff\n       result."},{"t":"minimal","d":"Set this parameter to TRUE if you want to minimalize the size of the\n       result (can take a long time)."}]},"xdiff_string_diff_binary":{"s":"Alias of xdiff_string_bdiff","p":[{"t":"old_data","d":"First string with binary data. It acts as &quot;old&quot; data."},{"t":"new_data","d":"Second string with binary data. It acts as &quot;new&quot; data."}]},"xdiff_string_merge3":{"s":"Merge 3 strings into one","p":[{"t":"old_data","d":"First string with data. It acts as &quot;old&quot; data."},{"t":"new_data1","d":"Second string with data. It acts as modified version of old_data."},{"t":"new_data2","d":"Third string with data. It acts as modified version of old_data."},{"t":"error","d":"If provided then rejected parts are stored inside this variable."}]},"xdiff_string_patch":{"s":"Patch a string with an unified diff","p":[{"t":"str","d":"The original string."},{"t":"patch","d":"The unified patch string. It has to be created using xdiff_string_diff(), \n       xdiff_file_diff() functions or compatible tools."},{"t":"flags","d":"flags can be either\n       XDIFF_PATCH_NORMAL (default mode, normal patch)\n       or XDIFF_PATCH_REVERSE (reversed patch)."},{"t":"error","d":"If provided then rejected parts are stored inside this variable."}]},"xdiff_string_patch_binary":{"s":"Alias of xdiff_string_bpatch","p":[{"t":"str","d":"The original binary string."},{"t":"patch","d":"The binary patch string."}]},"xdiff_string_rabdiff":{"s":"Make binary diff of two strings using the Rabin&#039;s polynomial fingerprinting algorithm","p":[{"t":"old_data","d":"First string with binary data. It acts as &quot;old&quot; data."},{"t":"new_data","d":"Second string with binary data. It acts as &quot;new&quot; data."}]},"xhprof_disable":{"s":"Stops xhprof profiler","p":null},"xhprof_enable":{"s":"Start xhprof profiler","p":[{"t":"flags","d":"Optional flags to add additional information to the profiling. See the\n       XHprof constants for further\n       information about these flags, e.g., XHPROF_FLAGS_MEMORY\n       to enable memory profiling."},{"t":"options","d":"An array of optional options, namely, the\n       &#039;ignored_functions&#039; option to pass in functions to be ignored\n       during profiling."}]},"xhprof_sample_disable":{"s":"Stops xhprof sample profiler","p":null},"xhprof_sample_enable":{"s":"Start XHProf profiling in sampling mode","p":null},"yaml_emit":{"s":"Returns the YAML representation of a value","p":[{"t":"data","d":"The data being encoded. Can be any type except\n       a resource."},{"t":"encoding","d":"Output character encoding chosen from\n       YAML_ANY_ENCODING,\n       YAML_UTF8_ENCODING,\n       YAML_UTF16LE_ENCODING,\n       YAML_UTF16BE_ENCODING."},{"t":"linebreak","d":"Output linebreak style chosen from\n       YAML_ANY_BREAK,\n       YAML_CR_BREAK,\n       YAML_LN_BREAK,\n       YAML_CRLN_BREAK."},{"t":"callbacks","d":"Content handlers for emitting YAML nodes. Associative array\n       of classname =&gt; callable mappings. See\n       emit callbacks for more\n       details."}]},"yaml_emit_file":{"s":"Send the YAML representation of a value to a file","p":[{"t":"filename","d":"Path to the file."},{"t":"data","d":"The data being encoded. Can be any type except\n       a resource."},{"t":"encoding","d":"Output character encoding chosen from\n       YAML_ANY_ENCODING,\n       YAML_UTF8_ENCODING,\n       YAML_UTF16LE_ENCODING,\n       YAML_UTF16BE_ENCODING."},{"t":"linebreak","d":"Output linebreak style chosen from\n       YAML_ANY_BREAK,\n       YAML_CR_BREAK,\n       YAML_LN_BREAK,\n       YAML_CRLN_BREAK."},{"t":"callbacks","d":"Content handlers for emitting YAML nodes. Associative array\n       of classname =&gt; callable mappings. See\n       emit callbacks for more\n       details."}]},"yaml_parse":{"s":"Parse a YAML stream","p":[{"t":"input","d":"The string to parse as a YAML document stream."},{"t":"pos","d":"Document to extract from stream (-1 for all\n       documents, 0 for first document, ...)."},{"t":"ndocs","d":"If ndocs is provided, then it is filled with the\n       number of documents found in stream."},{"t":"callbacks","d":"Content handlers for YAML nodes. Associative array of YAML\n       tag =&gt; callable mappings. See\n       parse callbacks for more\n       details."}]},"yaml_parse_file":{"s":"Parse a YAML stream from a file","p":[{"t":"filename","d":"Path to the file."},{"t":"pos","d":"Document to extract from stream (-1 for all\n       documents, 0 for first document, ...)."},{"t":"ndocs","d":"If ndocs is provided, then it is filled with the\n       number of documents found in stream."},{"t":"callbacks","d":"Content handlers for YAML nodes. Associative array of YAML\n       tag =&gt; callable mappings. See\n       parse callbacks for more\n       details."}]},"yaml_parse_url":{"s":"Parse a Yaml stream from a URL","p":[{"t":"url","d":"url should be of the form &quot;scheme:\/\/...&quot;. PHP\n       will search for a protocol handler (also known as a wrapper) for that\n       scheme. If no wrappers for that protocol are registered, PHP will emit\n       a notice to help you track potential problems in your script and then\n       continue as though filename specifies a regular file."},{"t":"pos","d":"Document to extract from stream (-1 for all\n       documents, 0 for first document, ...)."},{"t":"ndocs","d":"If ndocs is provided, then it is filled with the\n       number of documents found in stream."},{"t":"callbacks","d":"Content handlers for YAML nodes. Associative array of YAML\n       tag =&gt; callable mappings. See\n       parse callbacks for more"}]},"yaz_addinfo":{"s":"Returns additional error information","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."}]},"yaz_ccl_conf":{"s":"Configure CCL parser","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"config","d":"An array of configuration. Each key of the array is the name of a CCL\n       field and the corresponding value holds a string that specifies a \n       mapping to RPN."}]},"yaz_ccl_parse":{"s":"Invoke CCL Parser","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"query","d":"The CCL FIND query."},{"t":"result","d":"If the function was executed successfully, this will be an array \n       containing the valid RPN query under the key rpn."}]},"yaz_close":{"s":"Close YAZ connection","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."}]},"yaz_connect":{"s":"","p":[{"t":"zurl","d":"A string that takes the form host[:port][\/database].\n       If port is omitted, port 210 is used. If database is omitted \n       Default is used."},{"t":"options","d":"If given as a string, it is treated as the Z39.50 V2 authentication \n       string (OpenAuth)."},{"t":"","d":"Username for authentication."},{"t":"","d":"Group for authentication."},{"t":"","d":"Password for authentication."},{"t":"","d":"Cookie for session (YAZ proxy)."},{"t":"","d":"Proxy for connection (YAZ proxy)."},{"t":"","d":"A boolean. If TRUE the connection is persistent; If FALSE the\n           connection is not persistent. By default connections are persistent."},{"t":"","d":"A boolean. If TRUE piggyback is enabled for searches; If FALSE\n           piggyback is disabled. By default piggyback is enabled."},{"t":"","d":"A string that specifies character set to be used in Z39.50 \n           language and character set negotiation. Use strings such as:\n           ISO-8859-1, UTF-8, \n           UTF-16."},{"t":"","d":"An integer that specifies the maximum byte size of all records\n           to be returned by a target during retrieval. See the\n           &raquo;&nbsp;Z39.50 standard for more\n           information."},{"t":"","d":"An integer that specifies the maximum byte size of a single record\n           to be returned by a target during retrieval. This\n           entity is referred to as Exceptional-record-size in the\n          &raquo;&nbsp;Z39.50 standard."}]},"yaz_database":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"databases","d":"A string containing one or more databases. Multiple databases are \n       separated by a plus sign +."}]},"yaz_element":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"elementset","d":"Most servers support F (for full records) and\n       B (for brief records)."}]},"yaz_errno":{"s":"Returns error number","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."}]},"yaz_error":{"s":"Returns error description","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."}]},"yaz_es":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"type","d":"A string which represents the type of the Extended Service: \n       itemorder (Item Order),\n       create (Create Database),\n       drop (Drop Database),\n       commit (Commit Operation),\n       update (Update Record),\n       xmlupdate (XML Update).\n       Each type is specified in the following section."},{"t":"args","d":"An array with extended service options plus\n       package specific options. The options are identical to\n       those offered in the C API of ZOOM C. Refer to\n       the ZOOM &raquo;&nbsp;Extended Services."}]},"yaz_es_result":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."}]},"yaz_get_option":{"s":"Returns value of option for connection","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"name","d":"The option name."}]},"yaz_hits":{"s":"Returns number of hits for last search","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"searchresult","d":"Result array for detailed search result information."}]},"yaz_itemorder":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"args","d":"Must be an associative array with information about the Item Order \n       request to be sent. The key of the hash is the name of the \n       corresponding ASN.1 tag path. For example, the ISBN below the Item-ID\n       has the key item-id,ISBN."}]},"yaz_present":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."}]},"yaz_range":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"start","d":"Specifies the position of the first record to be retrieved. The \n       records numbers goes from 1 to yaz_hits()."},{"t":"number","d":"Specifies the number of records to be retrieved."}]},"yaz_record":{"s":"Returns a record","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"pos","d":"The record position. Records positions in a result set are numbered 1,\n       2, ... $hits where $hits is the count returned by yaz_hits()."},{"t":"type","d":"The type specifies the form of the\n       returned record."},{"t":"","d":"The record is returned as a string for simple display.\n          In this mode, all MARC records are converted to a line-by-line format\n          since ISO2709 is hardly readable.\n          XML records and SUTRS are returned in their original format.\n          GRS-1 are returned in a (ugly) line-by-line format."},{"t":"string","d":"The record is returned as an XML string if possible.\n          In this mode, all MARC records are converted to \n          &raquo;&nbsp;MARCXML.\n          XML records and SUTRS are returned in their original format.\n          GRS-1 is not supported."},{"t":"","d":"The record is returned as a string in its original form.\n          This type is suitable for MARC, XML and SUTRS. It does not\n          work for GRS-1."},{"t":"","d":"The syntax of the record is returned as a string, i.e.\n          USmarc, GRS-1,\n          XML, etc."},{"t":"","d":"The name of database associated with record at the position\n          is returned as a string."},{"t":"","d":"The record is returned as an array that reflects the GRS-1\n          structure. This type is suitable for MARC and GRS-1. XML, SUTRS\n          are not supported and if the actual record is XML or SUTRS an\n          empty string will be returned."}]},"yaz_scan":{"s":"Prepares for a scan","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"type","d":"Currently only type rpn is supported."},{"t":"startterm","d":"Starting term point for the scan."},{"t":"flags","d":"This optional parameter specifies additional information to control \n       the behaviour of the scan request. Three indexes are currently read \n       from the flags array:\n       number (number of terms requested),\n       position (preferred position of term) and\n       stepSize (preferred step size)."}]},"yaz_scan_result":{"s":"Returns Scan Response result","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"result","d":"If given, this array will be modified to hold additional information \n       taken from the Scan Response:\n       \n        \n         \n          number - Number of entries returned"}]},"yaz_schema":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"schema","d":"Must be specified as an OID (Object Identifier) in a raw dot-notation \n       (like 1.2.840.10003.13.4) or as one of the known \n       registered schemas: GILS-schema, \n       Holdings, Zthes, ..."}]},"yaz_search":{"s":"Prepares for a search","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"type","d":"This parameter represents the query type - only &quot;rpn&quot;\n       is supported now in which case the third argument specifies a Type-1 \n       query in prefix query notation."},{"t":"query","d":"The RPN query is a textual representation of the Type-1 query as\n       defined by the Z39.50 standard. However, in the text representation\n       as used by YAZ a prefix notation is used, that is the operator\n       precedes the operands. The query string is a sequence of tokens where\n       white space is ignored unless surrounded by double quotes. Tokens beginning\n       with an at-character (@) are considered operators,\n       otherwise they are treated as search terms."}]},"yaz_set_option":{"s":"Sets one or more options for connection","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"name","d":"May be either a string or an array."},{"t":"value","d":"The new value of the option. Use this only if the previous argument is\n       a string."}]},"yaz_sort":{"s":"Sets sorting criteria","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"criteria","d":"A string that takes the form field1 flags1 field2 \n       flags2 where field1 specifies the primary attributes for\n       sort, field2 seconds, etc.."},{"t":"","d":"Sort ascending"},{"t":"","d":"Sort descending"},{"t":"","d":"Case insensitive sorting"},{"t":"","d":"Case sensitive sorting"}]},"yaz_syntax":{"s":"","p":[{"t":"id","d":"The connection resource returned by yaz_connect()."},{"t":"syntax","d":"The syntax must be specified as an OID (Object Identifier) in a raw\n       dot-notation (like 1.2.840.10003.5.10) or as one of\n       the known registered record syntaxes (sutrs, usmarc, grs1, xml, etc.)."}]},"yaz_wait":{"s":"Wait for Z39.50 requests to complete","p":[{"t":"options","d":""},{"t":"","d":"Sets timeout in seconds. If a server has not responded within the\n           timeout it is considered dead and yaz_wait()\n           returns. The default value for timeout is 15 seconds."},{"t":"","d":"A boolean."}]},"yp_all":{"s":"Traverse the map and call a function on each entry","p":[{"t":"domain","d":"The NIS domain name."},{"t":"map","d":"The NIS map."},{"t":"callback","d":""}]},"yp_cat":{"s":"Return an array containing the entire map","p":[{"t":"domain","d":"The NIS domain name."},{"t":"map","d":"The NIS map."}]},"yp_errno":{"s":"Returns the error code of the previous operation","p":null},"yp_err_string":{"s":"Returns the error string associated with the given error code","p":[{"t":"errorcode","d":"The error code."}]},"yp_first":{"s":"Returns the first key-value pair from the named map","p":[{"t":"domain","d":"The NIS domain name."},{"t":"map","d":"The NIS map."}]},"yp_get_default_domain":{"s":"Fetches the machine&#039;s default NIS domain","p":null},"yp_master":{"s":"Returns the machine name of the master NIS server for a map","p":[{"t":"domain","d":"The NIS domain name."},{"t":"map","d":"The NIS map."}]},"yp_match":{"s":"Returns the matched line","p":[{"t":"domain","d":"The NIS domain name."},{"t":"map","d":"The NIS map."},{"t":"key","d":"This key must be exact."}]},"yp_next":{"s":"Returns the next key-value pair in the named map","p":[{"t":"domain","d":""},{"t":"map","d":""},{"t":"key","d":""}]},"yp_order":{"s":"Returns the order number for a map","p":[{"t":"domain","d":""},{"t":"map","d":""}]},"zend_logo_guid":{"s":"Gets the Zend guid","p":null},"zend_thread_id":{"s":"Returns a unique identifier for the current thread","p":null},"zend_version":{"s":"Gets the version of the current Zend engine","p":null},"zip_close":{"s":"Close a ZIP file archive","p":[{"t":"zip","d":"A ZIP file previously opened with zip_open()."}]},"zip_entry_close":{"s":"Close a directory entry","p":[{"t":"zip_entry","d":"A directory entry previously opened zip_entry_open()."}]},"zip_entry_compressedsize":{"s":"Retrieve the compressed size of a directory entry","p":[{"t":"zip_entry","d":"A directory entry returned by zip_read()."}]},"zip_entry_compressionmethod":{"s":"Retrieve the compression method of a directory entry","p":[{"t":"zip_entry","d":"A directory entry returned by zip_read()."}]},"zip_entry_filesize":{"s":"Retrieve the actual file size of a directory entry","p":[{"t":"zip_entry","d":"A directory entry returned by zip_read()."}]},"zip_entry_name":{"s":"Retrieve the name of a directory entry","p":[{"t":"zip_entry","d":"A directory entry returned by zip_read()."}]},"zip_entry_open":{"s":"Open a directory entry for reading","p":[{"t":"zip","d":"A valid resource handle returned by zip_open()."},{"t":"zip_entry","d":"A directory entry returned by zip_read()."},{"t":"mode","d":"Any of the modes specified in the documentation of\n       fopen()."}]},"zip_entry_read":{"s":"Read from an open directory entry","p":[{"t":"zip_entry","d":"A directory entry returned by zip_read()."},{"t":"length","d":"The number of bytes to return."}]},"zip_open":{"s":"Open a ZIP file archive","p":[{"t":"filename","d":"The file name of the ZIP archive to open."}]},"zip_read":{"s":"Read next entry in a ZIP file archive","p":[{"t":"zip","d":"A ZIP file previously opened with zip_open()."}]},"zlib_decode":{"s":"Uncompress any raw\/gzip\/zlib encoded data","p":[{"t":"data","d":""},{"t":"max_decoded_len","d":""}]},"zlib_encode":{"s":"Compress data with the specified encoding","p":[{"t":"data","d":""},{"t":"encoding","d":""},{"t":"level","d":""}]},"zlib_get_coding_type":{"s":"Returns the coding type used for output compression","p":null}}