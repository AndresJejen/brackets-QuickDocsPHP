{"DateTime":{"add":{"s":"A\u00f1ade una cantidad de d\u00edas, meses, a\u00f1os, horas, minutos y segundos al objeto\n   DateTime","y":"public DateTime DateTime::add\n    ( DateInterval $interval\n   )","p":[{"t":"object","d":"Estilo por procesos solamente: Un objeto DateTime\n devuelto por date_create().\n La funci\u00f3n modifica este objeto."},{"t":"interval","d":"Un objeto DateInterval"}]},"__construct":{"s":"Devuelve un nuevo objeto DateTime","y":"","p":[{"t":"time","d":"Una cadena de fecha\/hora. Los formatos v\u00e1lidos son explicados en Formatos de fecha y hora."},{"t":"timezone","d":"Un objeto DateTimeZone que representa la\n      zona horaria de $time."}]},"createFromFormat":{"s":"Devuelve un nuevo objeto DateTime formateado seg\u00fan el formato especificado","y":"public static DateTime DateTime::createFromFormat\n    ( string $format\n   , string $time\n   [, DateTimeZone $timezone\n  ] )","p":[{"t":"format","d":"El formato en el que deber\u00eda estar lo pasado en string. V\u00e9ase las\n      opciones de formateo m\u00e1s abajo. En la mayor\u00eda de los casos se pueden usar las mismas letras\n      que para date()."},{"t":"time","d":"Una cadena que representa la hora."},{"t":"timezone","d":"Un objeto DateTimeZone que representa la\n      zona horaria deseada."}]},"getLastErrors":{"s":"Devuelve las advertencias y los errores","y":"public static array DateTime::getLastErrors\n    ( void\n   )","p":null},"modify":{"s":"Altera la marca de tiempo","y":"public DateTime DateTime::modify\n    ( string $modify\n   )","p":[{"t":"object","d":"Estilo por procesos solamente: Un objeto DateTime\n devuelto por date_create().\n La funci\u00f3n modifica este objeto."},{"t":"modify","d":"Una cadena de fecha\/hora. Los formatos v\u00e1lidos son explicados en Formatos de fecha y hora."}]},"__set_state":{"s":"El gestor __set_state","y":"public static DateTime DateTime::__set_state\n    ( array $array\n   )","p":[{"t":"array","d":"Matriz de inicializaci\u00f3n."}]},"setDate":{"s":"Establece la fecha","y":"public DateTime DateTime::setDate\n    ( int $year\n   , int $month\n   , int $day\n   )","p":[{"t":"object","d":"Estilo por procesos solamente: Un objeto DateTime\n devuelto por date_create().\n La funci\u00f3n modifica este objeto."},{"t":"year","d":"A\u00f1o de la fecha."},{"t":"month","d":"Mes de la fecha."},{"t":"day","d":"D\u00eda de la fecha."}]},"setISODate":{"s":"Establece la fecha ISO","y":"public DateTime DateTime::setISODate\n    ( int $year\n   , int $week\n   [, int $day = 1\n  ] )","p":[{"t":"object","d":"Estilo por procesos solamente: Un objeto DateTime\n devuelto por date_create().\n La funci\u00f3n modifica este objeto."},{"t":"year","d":"A\u00f1o de la fecha."},{"t":"week","d":"Semana de la fecha."},{"t":"day","d":"\u00cdndice del primer d\u00eda de la semana."}]},"setTime":{"s":"Establece la hora","y":"public DateTime DateTime::setTime\n    ( int $hour\n   , int $minute\n   [, int $second = 0\n  ] )","p":[{"t":"object","d":"Estilo por procesos solamente: Un objeto DateTime\n devuelto por date_create().\n La funci\u00f3n modifica este objeto."},{"t":"hour","d":"Hora del momento."},{"t":"minute","d":"Minuto del momento."},{"t":"second","d":"Segundo del momento."}]},"setTimestamp":{"s":"Establece la fecha y la hora basadas en una fecha Unix","y":"public DateTime DateTime::setTimestamp\n    ( int $unixtimestamp\n   )","p":[{"t":"object","d":"Estilo por procesos solamente: Un objeto DateTime\n devuelto por date_create().\n La funci\u00f3n modifica este objeto."},{"t":"unixtimestamp","d":"La marca de tiempo Unix que representa la fecha."}]},"setTimezone":{"s":"Establece la zona horaria para el objeto DateTime","y":"public DateTime DateTime::setTimezone\n    ( DateTimeZone $timezone\n   )","p":[{"t":"object","d":"Estilo por procesos solamente: Un objeto DateTime\n devuelto por date_create().\n La funci\u00f3n modifica este objeto."},{"t":"timezone","d":"Un objeto DateTimeZone que representa la\n      zona horaria deseada."}]},"sub":{"s":"Sustrae una cantidad de d\u00edas, meses, a\u00f1os, horas, minutos y segundos de un objeto\n   DateTime","y":"public DateTime DateTime::sub\n    ( DateInterval $interval\n   )","p":[{"t":"object","d":"Estilo por procesos solamente: Un objeto DateTime\n devuelto por date_create().\n La funci\u00f3n modifica este objeto."},{"t":"interval","d":"Un objeto DateInterval"}]}},"ArrayObject":{"append":{"s":"A\u00f1ade un valor","y":"public void ArrayObject::append\n    ( mixed $value\n   )","p":[{"t":"value","d":"El valor a ser a\u00f1adido."}]},"asort":{"s":"Ordena las entradas por valor","y":"public void ArrayObject::asort\n    ( void\n   )","p":null},"__construct":{"s":"Construir un nuevo objeto Array","y":"","p":[{"t":"input","d":"Este par\u00e1metro de input (entrada) acepta un \n       array o un objeto."},{"t":"flags","d":"Flags para controlar el comportamiento del objeto ArrayObject."},{"t":"iterator_class","d":"Especifica la clase que va a ser usada para la iteraci\u00f3n del objeto ArrayObject.\n       ArrayIterator es la clase usada por omisi\u00f3n."}]},"count":{"s":"Obtener el n\u00famero de propiedades p\u00fablicas en la clase ArrayObject","y":"public int ArrayObject::count\n    ( void\n   )","p":null},"exchangeArray":{"s":"Intercambia el array por otro","y":"public array ArrayObject::exchangeArray\n    ( mixed $input\n   )","p":[{"t":"input","d":"El nuevo array u objeto a ser intercambiado con el array actual."}]},"getArrayCopy":{"s":"Crea una copia de la clase ArrayObject","y":"public array ArrayObject::getArrayCopy\n    ( void\n   )","p":null},"getFlags":{"s":"Obtiene las flags de comportamiento","y":"public int ArrayObject::getFlags\n    ( void\n   )","p":null},"getIterator":{"s":"Crear un nuevo iterador desde una instancia ArrayObject","y":"public ArrayIterator ArrayObject::getIterator\n    ( void\n   )","p":null},"getIteratorClass":{"s":"Obtiene el nombre de clase iterador para ArrayObject","y":"public string ArrayObject::getIteratorClass\n    ( void\n   )","p":null},"ksort":{"s":"Ordena las entradas por clave","y":"public void ArrayObject::ksort\n    ( void\n   )","p":null},"natsort":{"s":"Ordena entradas usando un algoritmo de orden natural","y":"public void ArrayObject::natsort\n    ( void\n   )","p":null},"offsetExists":{"s":"Devuelve si el \u00edndice solicitado existe","y":"public bool ArrayObject::offsetExists\n    ( mixed $index\n   )","p":[{"t":"index","d":"El \u00edndice a ser comprobado."}]},"offsetGet":{"s":"Devuelve el valor del \u00edndice especificado","y":"public mixed ArrayObject::offsetGet\n    ( mixed $index\n   )","p":[{"t":"index","d":"El \u00edndice con el valor."}]},"offsetSet":{"s":"Establece el valor en el \u00edndice especificado","y":"public void ArrayObject::offsetSet\n    ( mixed $index\n   , mixed $newval\n   )","p":[{"t":"index","d":"El \u00edndice a ser establecido."},{"t":"newval","d":"El nuevo valor para el index."}]},"offsetUnset":{"s":"Destruye el valor para el \u00edndice especificado","y":"public void ArrayObject::offsetUnset\n    ( mixed $index\n   )","p":[{"t":"index","d":"El \u00edndice a ser destruido."}]},"serialize":{"s":"Serializa un ArrayObject","y":"public void ArrayObject::serialize\n    ( void\n   )","p":null},"setFlags":{"s":"Establece las flags de comportamiento","y":"public void ArrayObject::setFlags\n    ( int $flags\n   )","p":[{"t":"flags","d":"El nuevo comportamiento de ArrayObject.\n       Se necesita una m\u00e1scara de bits, o constantes con nombre. El uso \n       de constantes con nombre es bastante recomendable para asegurar la \n       compatibilidad con versiones futuras."}]},"setIteratorClass":{"s":"Establece el nombre de clase iterador para ArrayObject","y":"public void ArrayObject::setIteratorClass\n    ( string $iterator_class\n   )","p":[{"t":"iterator_class","d":"El nombre de clase de el array iterador a usar cuando se itera sobre este objeto."}]},"uasort":{"s":"Ordena las entradas con una funci\u00f3n de comparaci\u00f3n definida por el usuario y mantiene asociaci\u00f3n de claves","y":"public void ArrayObject::uasort\n    ( callable $cmp_function\n   )","p":[{"t":"cmp_function","d":"La funci\u00f3n cmp_function acepta 2 par\u00e1metros \n       que ser\u00e1n llenados por pares de entradas.\n       La funci\u00f3n de comparaci\u00f3n debe devolver un integer menor que, igual a, \n       o mayor que cero si el primer argumento es menor que, igual a, o \n       mayor que el segundo."}]},"uksort":{"s":"Ordena las entradas por clave usando una funci\u00f3n de comparaci\u00f3n definida por el usuario","y":"public void ArrayObject::uksort\n    ( callable $cmp_function\n   )","p":[{"t":"cmp_function","d":"La funci\u00f3n de devoluci\u00f3n de llamada de comparaci\u00f3n."}]},"unserialize":{"s":"Deserializar el objeto ArrayObject","y":"public void ArrayObject::unserialize\n    ( string $serialized\n   )","p":[{"t":"serialized","d":"El objeto ArrayObject serializado."}]}}}